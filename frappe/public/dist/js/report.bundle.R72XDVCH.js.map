{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/lib/clusterize.min.js", "../../../../../apps/frappe/node_modules/frappe-datatable/node_modules/sortablejs/Sortable.js", "../../../../../apps/frappe/node_modules/frappe-datatable/dist/frappe-datatable.cjs.js", "../../../../../apps/frappe/frappe/public/js/report.bundle.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/reports/report_factory.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/reports/report_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/reports/query_report.js", "frappe-html:/home/user/frappe-bench/apps/frappe/frappe/public/js/frappe/views/reports/print_grid.html", "frappe-html:/home/user/frappe-bench/apps/frappe/frappe/public/js/frappe/views/reports/print_tree.html", "frappe-html:/home/user/frappe-bench/apps/frappe/frappe/public/js/frappe/ui/group_by/group_by.html", "../../../../../apps/frappe/frappe/public/js/frappe/ui/group_by/group_by.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/reports/report_utils.js"],
  "sourcesContent": ["/*! Clusterize.js - v0.17.6 - 2017-03-05\n* http://NeXTs.github.com/Clusterize.js/\n* Copyright (c) 2015 Denis Lukov; Licensed GPLv3 */\n\n;(function(q,n){\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&\"object\"==typeof define.amd?define(n):this[q]=n()})(\"Clusterize\",function(){function q(b,a,c){return a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent(\"on\"+b,c)}function n(b,a,c){return a.removeEventListener?a.removeEventListener(b,c,!1):a.detachEvent(\"on\"+b,c)}function r(b){return\"[object Array]\"===Object.prototype.toString.call(b)}function m(b,a){return window.getComputedStyle?window.getComputedStyle(a)[b]:\n\ta.currentStyle[b]}var l=function(){for(var b=3,a=document.createElement(\"b\"),c=a.all||[];a.innerHTML=\"\\x3c!--[if gt IE \"+ ++b+\"]><i><![endif]--\\x3e\",c[0];);return 4<b?b:document.documentMode}(),x=navigator.platform.toLowerCase().indexOf(\"mac\")+1,p=function(b){if(!(this instanceof p))return new p(b);var a=this,c={rows_in_block:50,blocks_in_cluster:4,tag:null,show_no_data_row:!0,no_data_class:\"clusterize-no-data\",no_data_text:\"No data\",keep_parity:!0,callbacks:{}};a.options={};for(var d=\"rows_in_block blocks_in_cluster show_no_data_row no_data_class no_data_text keep_parity tag callbacks\".split(\" \"),\n\tf=0,h;h=d[f];f++)a.options[h]=\"undefined\"!=typeof b[h]&&null!=b[h]?b[h]:c[h];c=[\"scroll\",\"content\"];for(f=0;d=c[f];f++)if(a[d+\"_elem\"]=b[d+\"Id\"]?document.getElementById(b[d+\"Id\"]):b[d+\"Elem\"],!a[d+\"_elem\"])throw Error(\"Error! Could not find \"+d+\" element\");a.content_elem.hasAttribute(\"tabindex\")||a.content_elem.setAttribute(\"tabindex\",0);var e=r(b.rows)?b.rows:a.fetchMarkup(),g={};b=a.scroll_elem.scrollTop;a.insertToDOM(e,g);a.scroll_elem.scrollTop=b;var k=!1,m=0,l=!1,t=function(){x&&(l||(a.content_elem.style.pointerEvents=\n\t\"none\"),l=!0,clearTimeout(m),m=setTimeout(function(){a.content_elem.style.pointerEvents=\"auto\";l=!1},50));k!=(k=a.getClusterNum())&&a.insertToDOM(e,g);a.options.callbacks.scrollingProgress&&a.options.callbacks.scrollingProgress(a.getScrollProgress())},u=0,v=function(){clearTimeout(u);u=setTimeout(a.refresh,100)};q(\"scroll\",a.scroll_elem,t);q(\"resize\",window,v);a.destroy=function(b){n(\"scroll\",a.scroll_elem,t);n(\"resize\",window,v);a.html((b?a.generateEmptyRow():e).join(\"\"))};a.refresh=function(b){(a.getRowsHeight(e)||\n\tb)&&a.update(e)};a.update=function(b){e=r(b)?b:[];b=a.scroll_elem.scrollTop;e.length*a.options.item_height<b&&(k=a.scroll_elem.scrollTop=0);a.insertToDOM(e,g);a.scroll_elem.scrollTop=b};a.clear=function(){a.update([])};a.getRowsAmount=function(){return e.length};a.getScrollProgress=function(){return this.options.scroll_top/(e.length*this.options.item_height)*100||0};var w=function(b,c){var d=r(c)?c:[];d.length&&(e=\"append\"==b?e.concat(d):d.concat(e),a.insertToDOM(e,g))};a.append=function(a){w(\"append\",\n\ta)};a.prepend=function(a){w(\"prepend\",a)}};p.prototype={constructor:p,fetchMarkup:function(){for(var b=[],a=this.getChildNodes(this.content_elem);a.length;)b.push(a.shift().outerHTML);return b},exploreEnvironment:function(b,a){var c=this.options;c.content_tag=this.content_elem.tagName.toLowerCase();b.length&&(l&&9>=l&&!c.tag&&(c.tag=b[0].match(/<([^>\\s/]*)/)[1].toLowerCase()),1>=this.content_elem.children.length&&(a.data=this.html(b[0]+b[0]+b[0])),c.tag||(c.tag=this.content_elem.children[0].tagName.toLowerCase()),\n\tthis.getRowsHeight(b))},getRowsHeight:function(b){var a=this.options,c=a.item_height;a.cluster_height=0;if(b.length){b=this.content_elem.children;var d=b[Math.floor(b.length/2)];a.item_height=d.offsetHeight;\"tr\"==a.tag&&\"collapse\"!=m(\"borderCollapse\",this.content_elem)&&(a.item_height+=parseInt(m(\"borderSpacing\",this.content_elem),10)||0);\"tr\"!=a.tag&&(b=parseInt(m(\"marginTop\",d),10)||0,d=parseInt(m(\"marginBottom\",d),10)||0,a.item_height+=Math.max(b,d));a.block_height=a.item_height*a.rows_in_block;\n\ta.rows_in_cluster=a.blocks_in_cluster*a.rows_in_block;a.cluster_height=a.blocks_in_cluster*a.block_height;return c!=a.item_height}},getClusterNum:function(){this.options.scroll_top=this.scroll_elem.scrollTop;return Math.floor(this.options.scroll_top/(this.options.cluster_height-this.options.block_height))||0},generateEmptyRow:function(){var b=this.options;if(!b.tag||!b.show_no_data_row)return[];var a=document.createElement(b.tag),c=document.createTextNode(b.no_data_text),d;a.className=b.no_data_class;\n\t\"tr\"==b.tag&&(d=document.createElement(\"td\"),d.colSpan=100,d.appendChild(c));a.appendChild(d||c);return[a.outerHTML]},generate:function(b,a){var c=this.options,d=b.length;if(d<c.rows_in_block)return{top_offset:0,bottom_offset:0,rows_above:0,rows:d?b:this.generateEmptyRow()};var f=Math.max((c.rows_in_cluster-c.rows_in_block)*a,0),h=f+c.rows_in_cluster,e=Math.max(f*c.item_height,0),c=Math.max((d-h)*c.item_height,0),d=[],g=f;for(1>e&&g++;f<h;f++)b[f]&&d.push(b[f]);return{top_offset:e,bottom_offset:c,\n\trows_above:g,rows:d}},renderExtraTag:function(b,a){var c=document.createElement(this.options.tag);c.className=[\"clusterize-extra-row\",\"clusterize-\"+b].join(\" \");a&&(c.style.height=a+\"px\");return c.outerHTML},insertToDOM:function(b,a){this.options.cluster_height||this.exploreEnvironment(b,a);var c=this.generate(b,this.getClusterNum()),d=c.rows.join(\"\"),f=this.checkChanges(\"data\",d,a),h=this.checkChanges(\"top\",c.top_offset,a),e=this.checkChanges(\"bottom\",c.bottom_offset,a),g=this.options.callbacks,\n\tk=[];f||h?(c.top_offset&&(this.options.keep_parity&&k.push(this.renderExtraTag(\"keep-parity\")),k.push(this.renderExtraTag(\"top-space\",c.top_offset))),k.push(d),c.bottom_offset&&k.push(this.renderExtraTag(\"bottom-space\",c.bottom_offset)),g.clusterWillChange&&g.clusterWillChange(),this.html(k.join(\"\")),\"ol\"==this.options.content_tag&&this.content_elem.setAttribute(\"start\",c.rows_above),g.clusterChanged&&g.clusterChanged()):e&&(this.content_elem.lastChild.style.height=c.bottom_offset+\"px\")},html:function(b){var a=\n\tthis.content_elem;if(l&&9>=l&&\"tr\"==this.options.tag){var c=document.createElement(\"div\");for(c.innerHTML=\"<table><tbody>\"+b+\"</tbody></table>\";b=a.lastChild;)a.removeChild(b);for(c=this.getChildNodes(c.firstChild.firstChild);c.length;)a.appendChild(c.shift())}else a.innerHTML=b},getChildNodes:function(b){b=b.children;for(var a=[],c=0,d=b.length;c<d;c++)a.push(b[c]);return a},checkChanges:function(b,a,c){var d=a!=c[b];c[b]=a;return d}};return p});", "/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window === \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScrolls = [],\n\t\tscrolling = false,\n\n\t\tawaitingDragStarted = false,\n\t\tignoreNextClick = false,\n\t\tsortables = [],\n\n\t\tpointerElemChangedInterval,\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\tforRepaintDummy,\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\t// FireFox = !!navigator.userAgent.match(/firefox/i),\n\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')),\n\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\n\t\t_detectDirection = function(el, options) {\n\t\t\tvar elCSS = _css(el),\n\t\t\t\telWidth = parseInt(elCSS.width),\n\t\t\t\tchild1 = _getChild(el, 0, options),\n\t\t\t\tchild2 = _getChild(el, 1, options),\n\t\t\t\tfirstChildCSS = child1 && _css(child1),\n\t\t\t\tsecondChildCSS = child2 && _css(child2),\n\t\t\t\tfirstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + _getRect(child1).width,\n\t\t\t\tsecondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + _getRect(child2).width;\n\t\t\tif (elCSS.display === 'flex') {\n\t\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\n\t\t\t\t? 'vertical' : 'horizontal';\n\t\t\t}\n\t\t\tif (child1 && firstChildCSS.float !== 'none') {\n\t\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\n\n\t\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\n\t\t\t\t\t'vertical' : 'horizontal';\n\t\t\t}\n\t\t\treturn (child1 &&\n\t\t\t\t(\n\t\t\t\t\tfirstChildCSS.display === 'block' ||\n\t\t\t\t\tfirstChildCSS.display === 'flex' ||\n\t\t\t\t\tfirstChildCSS.display === 'table' ||\n\t\t\t\t\tfirstChildCSS.display === 'grid' ||\n\t\t\t\t\tfirstChildWidth >= elWidth &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\n\t\t\t\t\tchild2 &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\n\t\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\n\t\t\t\t) ?\n\t\t\t\t'vertical' : 'horizontal'\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable = function(x, y) {\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (sortables[i].children.length) continue;\n\n\t\t\t\tvar rect = _getRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = _getRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || _getRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t},\n\n\t\t_getParentAutoScrollElement = function(el, includeSelf) {\n\t\t\t// skip to window\n\t\t\tif (!el || !el.getBoundingClientRect) return win;\n\n\t\t\tvar elem = el;\n\t\t\tvar gotSelf = false;\n\t\t\tdo {\n\t\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\n\t\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n\t\t\t\t\tvar elemCSS = _css(elem);\n\t\t\t\t\tif (\n\t\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\n\t\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return win;\n\n\t\t\t\t\t\tif (gotSelf || includeSelf) return elem;\n\t\t\t\t\t\tgotSelf = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t\t} while (elem = elem.parentNode);\n\n\t\t\treturn win;\n\t\t},\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (options.scroll) {\n\t\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tscrollThisInstance = false;\n\n\t\t\t\t// Detect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\t_clearAutoScrolls();\n\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\n\t\t\t\t\t\tscrollParentEl = scrollEl;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar layersOut = 0;\n\t\t\t\tvar currentParent = scrollEl;\n\t\t\t\tdo {\n\t\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\t\trect = _getRect(el),\n\n\t\t\t\t\t\ttop = rect.top,\n\t\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\t\tleft = rect.left,\n\t\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\t\twidth = rect.width,\n\t\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\t\tscrollWidth,\n\t\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\t\tcss,\n\n\t\t\t\t\t\tvx,\n\t\t\t\t\t\tvy,\n\n\t\t\t\t\t\tcanScrollX,\n\t\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\t\tscrollPosX,\n\t\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\t\tif (el !== win) {\n\t\t\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\t\t\tcss = _css(el);\n\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\n\t\t\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\t\t\tscrollPosY = el.scrollTop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscrollWidth = document.documentElement.scrollWidth;\n\t\t\t\t\t\tscrollHeight = document.documentElement.scrollHeight;\n\n\t\t\t\t\t\tcss = _css(document.documentElement);\n\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\n\t\t\t\t\t\tscrollPosX = document.documentElement.scrollLeft;\n\t\t\t\t\t\tscrollPosY = document.documentElement.scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (autoScrolls[this.layer].el === win) {\n\t\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\t\tautoScrolls[this.layer].el.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlayersOut++;\n\t\t\t\t} while (options.bubbleScroll && currentParent !== win && (currentParent = _getParentAutoScrollElement(currentParent, false)));\n\t\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t\t}\n\t\t}, 30),\n\n\t\t_clearAutoScrolls = function () {\n\t\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\t\tclearInterval(autoScroll.pid);\n\t\t\t});\n\t\t\tautoScrolls = [];\n\t\t},\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t},\n\n\t\t_checkAlignment = function(evt) {\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t},\n\n\t\t_isTrueParentSortable = function(el, target) {\n\t\t\tvar trueParent = target;\n\t\t\twhile (!trueParent[expando]) {\n\t\t\t\ttrueParent = trueParent.parentNode;\n\t\t\t}\n\n\t\t\treturn el === trueParent;\n\t\t},\n\n\t\t_artificalBubble = function(sortable, originalEvt, method) {\n\t\t\t// Artificial IE bubbling\n\t\t\tvar nextParent = sortable.parentNode;\n\t\t\twhile (nextParent && !nextParent[expando]) {\n\t\t\t\tnextParent = nextParent.parentNode;\n\t\t\t}\n\n\t\t\tif (nextParent) {\n\t\t\t\tnextParent[expando][method](_extend(originalEvt, {\n\t\t\t\t\tartificialBubble: true\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\n\t\t_hideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t}\n\t\t},\n\n\t\t_unhideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t}\n\t\t};\n\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\n\t\tevt = evt.touches ? evt.touches[0] : evt;\n\t\tif (dragEl) {\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\tif (nearest) {\n\t\t\t\tnearest[expando]._onDragOver({\n\t\t\t\t\tclientX: evt.clientX,\n\t\t\t\t\tclientY: evt.clientY,\n\t\t\t\t\ttarget: nearest,\n\t\t\t\t\trootEl: nearest\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\t// We do not want this to be triggered if completed (bubbling canceled), so only define it here\n\t_on(document, 'dragover', nearestEmptyInsertDetectEvent);\n\t_on(document, 'mousemove', nearestEmptyInsertDetectEvent);\n\t_on(document, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function() {\n\t\t\t\treturn _detectDirection(el, this.options);\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\tsupportPointer: Sortable.supportPointer !== false && (\n\t\t\t\t('PointerEvent' in window) ||\n\t\t\t\twindow.navigator && ('msPointerEnabled' in window.navigator) // microsoft\n\t\t\t),\n\t\t\temptyInsertThreshold: 5\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\tif (options.supportPointer) {\n\t\t\t_on(el, 'pointerdown', this._onTapStart);\n\t\t} else {\n\t\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t}\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\tsortables.push(this.el);\n\n\t\t// Restore sorting\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\t}\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target;\n\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\n\t\t\t\t_hideGhostForTarget();\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (_closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!_closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n\t\t},\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tif (!evt.cancelable) return;\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// IE: Calls events in capture mode if event element is nested. This ensures only correct element's _onTapStart goes through.\n\t\t\t// This process is also done in _onDragOver\n\t\t\tif (IE11OrLess && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button and enabled\n\t\t\t}\n\n\t\t\t// cancel dnd if original target is content editable\n\t\t\tif (originalTarget.isContentEditable) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, options.draggable, el, false);\n\n\t\t\tif (!target) {\n\t\t\t\tif (IE11OrLess) {\n\t\t\t\t\t_artificalBubble(el, evt, '_onTapStart');\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el, false);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\t\t\tif (!dragEl || !this.options.scroll) return;\n\t\t\tvar x = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\telem = document.elementFromPoint(x, y),\n\t\t\t\t_this = this;\n\n\t\t\t// IE does not seem to have native autoscroll,\n\t\t\t// Edge's autoscroll seems too conditional,\n\t\t\t// Firefox and Chrome are good\n\t\t\tif (fallback || Edge || IE11OrLess) {\n\t\t\t\t_autoScroll(evt, _this.options, elem, fallback);\n\n\t\t\t\t// Listener for pointer element change\n\t\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\n\t\t\t\tif (\n\t\t\t\t\tscrolling &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\t\t\ty !== lastPointerElemY\n\t\t\t\t\t)\n\t\t\t\t) {\n\n\t\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t\tif (!dragEl) return;\n\t\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\t\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t\t\t_autoScroll(evt, _this.options, ogElemScroller, fallback);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 10);\n\t\t\t\t\tlastPointerElemX = x;\n\t\t\t\t\tlastPointerElemY = y;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n\t\t\t\tif (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === window) {\n\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);\n\t\t\t}\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: (touch || evt).clientX,\n\t\t\t\t\tclientY: (touch || evt).clientY\n\t\t\t\t};\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'all';\n\t\t\t\t// undo animation if needed\n\t\t\t\tdragEl.style.transition = '';\n\t\t\t\tdragEl.style.transform = '';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex);\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\tif (options.supportPointer) {\n\t\t\t\t\t_on(ownerDocument, 'pointerup', _this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\toptions.supportPointer && _on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\n\t\t\tif (min(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\n\t\t\t\t\t>= this.options.touchStartThreshold\n\t\t\t) {\n\t\t\t\tthis._disableDelayedDrag();\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (!this.nativeDraggable || touch) {\n\t\t\t\tif (this.options.supportPointer) {\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t} else if (touch) {\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t} else {\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\t_nextTick(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function (fallback) {\n\t\t\tawaitingDragStarted = false;\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t_on(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t\t_on(document, 'dragover', _checkAlignment);\n\t\t\t\t}\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, false);\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\n\t\t\t\t// In case dragging an animated element\n\t\t\t\t_css(dragEl, 'transform', '');\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\tfallback && this._appendGhost();\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (bypassLastTouchCheck) {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !bypassLastTouchCheck) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tmatrix = ghostEl && _matrix(ghostEl),\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX) + fallbackOffset.x) / (scaleX ? scaleX : 1),\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY) + fallbackOffset.y) / (scaleY ? scaleY : 1),\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDragStart(evt, true);\n\t\t\t\t}\n\n\t\t\t\tthis._handleAutoScroll(touch, true);\n\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = _getRect(dragEl, this.options.fallbackOnBody ? document.body : rootEl, true),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\t_css(ghostEl, 'margin', 0);\n\t\t\t\t_css(ghostEl, 'top', rect.top);\n\t\t\t\t_css(ghostEl, 'left', rect.left);\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n\t\t\tvar _this = this;\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\t\t\tvar options = _this.options;\n\n\t\t\t// Setup clone\n\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\tcloneEl.draggable = false;\n\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\tthis._hideClone();\n\n\t\t\t_toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n\t\t\t// #1143: IFrame support workaround\n\t\t\t_this._cloneId = _nextTick(function () {\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t}\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\n\t\t\t});\n\n\n\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, true);\n\n\t\t\t// Set proper drop events\n\t\t\tif (fallback) {\n\t\t\t\tignoreNextClick = true;\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\n\t\t\t} else {\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\n\t\t\t\t_off(document, 'mouseup', _this._onDrop);\n\t\t\t\t_off(document, 'touchend', _this._onDrop);\n\t\t\t\t_off(document, 'touchcancel', _this._onDrop);\n\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', _this);\n\n\t\t\t\t// #1276 fix:\n\t\t\t\t_css(dragEl, 'transform', 'translateZ(0)');\n\t\t\t}\n\n\t\t\tawaitingDragStarted = true;\n\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback));\n\t\t\t_on(document, 'selectstart', _this);\n\t\t},\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this;\n\n\t\t\tif (_silent) return;\n\n\t\t\t// IE event order fix\n\t\t\tif (IE11OrLess && !evt.rootEl && !evt.artificialBubble && !_isTrueParentSortable(el, target)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return invocation when no further action is needed in another sortable\n\t\t\tfunction completed() {\n\t\t\t\tif (activeSortable) {\n\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t}\n\n\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\n\t\t\t\t\tputSortable = _this;\n\t\t\t\t} else if (_this === Sortable.active) {\n\t\t\t\t\tputSortable = null;\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t_this._handleAutoScroll(evt);\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = _closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (!!_closest(evt.target, null, dragEl, true) || target.animated) {\n\t\t\t\treturn completed();\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = _getRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed();\n\t\t\t\t}\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t_ghostIsLast(evt, axis, el) && !dragEl.animated\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = _lastChild(el);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = _getRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t\treturn completed();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, axis === 'vertical' ? 'top' : 'left');\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = _getRect(target)[axis === 'vertical' ? 'top' : 'left'];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel || scrolling || scrolledPastTop;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target, options);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed();\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = _getRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[axis === 'vertical' ? 'top' : 'left']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\t!differentLevel && this._animate(targetRect, target);\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\n\t\t\t\t\t\treturn completed();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (IE11OrLess && !evt.rootEl) {\n\t\t\t\t_artificalBubble(el, evt, '_onDragOver');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = _getRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = _getRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = _matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tforRepaintDummy = target.offsetWidth; // repaint\n\t\t\t\t\t_css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(document, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t_clearAutoScrolls();\n\t\t\t_cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t\t_off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t_off(document, 'dragover', _checkAlignment);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\t\t\tautoScrolls.length =\n\n\t\t\tpointerElemChangedInterval =\n\t\t\tlastPointerElemX =\n\t\t\tlastPointerElemY =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\toldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\tforRepaintDummy =\n\t\t\trealDragElRect =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t},\n\n\t\t_hideClone: function() {\n\t\t\tif (!cloneEl.cloneHidden) {\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\tcloneEl.cloneHidden = true;\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_showClone: function(putSortable) {\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\n\t\t\t\tthis._hideClone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cloneEl.cloneHidden) {\n\t\t\t\t// show clone at dragEl or original position\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t} else if (nextEl) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t} else {\n\t\t\t\t\trootEl.appendChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.group.revertClone) {\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\n\t\t\t\t}\n\t\t\t\t_css(cloneEl, 'display', '');\n\t\t\t\tcloneEl.cloneHidden = false;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif (\n\t\t\t\t\tselector != null &&\n\t\t\t\t\t(\n\t\t\t\t\t\tselector[0] === '>' && el.parentNode === ctx && _matches(el, selector.substring(1)) ||\n\t\t\t\t\t\t_matches(el, selector)\n\t\t\t\t\t) ||\n\t\t\t\t\tincludeCTX && el === ctx\n\t\t\t\t) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\n\t\t\t\tif (el === ctx) break;\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\treturn (el.host && el !== document && el.host.nodeType)\n\t\t\t? el.host\n\t\t\t: el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el && name) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style) && prop.indexOf('webkit') === -1) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _matrix(el) {\n\t\tvar appliedTransforms = '';\n\t\tdo {\n\t\t\tvar transform = _css(el, 'transform');\n\n\t\t\tif (transform && transform !== 'none') {\n\t\t\t\tappliedTransforms = transform + ' ' + appliedTransforms;\n\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t} while (el = el.parentNode);\n\n\t\tif (window.DOMMatrix) {\n\t\t\treturn new DOMMatrix(appliedTransforms);\n\t\t} else if (window.WebKitCSSMatrix) {\n\t\t\treturn new WebKitCSSMatrix(appliedTransforms);\n\t\t} else if (window.CSSMatrix) {\n\t\t\treturn new CSSMatrix(appliedTransforms);\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, toEl, fromEl, startIndex, newIndex, originalEvt) {\n\t\tsortable = (sortable || rootEl[expando]);\n\t\tvar evt,\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent(name, {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, true);\n\t\t}\n\n\t\tevt.to = toEl || rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\tevt.originalEvent = originalEvt;\n\n\t\tif (rootEl) {\n\t\t\trootEl.dispatchEvent(evt);\n\t        }\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent('move', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent('move', true, true);\n\t\t}\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || _getRect(toEl);\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tevt.originalEvent = originalEvt;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\t/**\n\t * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n\t * and non-draggable elements\n\t * @param  {HTMLElement} el       The parent element\n\t * @param  {Number} childNum      The index of the child\n\t * @param  {Object} options       Parent Sortable's options\n\t * @return {HTMLElement}          The child at index childNum, or null if not found\n\t */\n\tfunction _getChild(el, childNum, options) {\n\t\tvar currentChild = 0,\n\t\t\ti = 0,\n\t\t\tchildren = el.children;\n\n\t\twhile (i < children.length) {\n\t\t\tif (\n\t\t\t\tchildren[i].style.display !== 'none' &&\n\t\t\t\tchildren[i] !== ghostEl &&\n\t\t\t\tchildren[i] !== dragEl &&\n\t\t\t\t_closest(children[i], options.draggable, el, false)\n\t\t\t) {\n\t\t\t\tif (currentChild === childNum) {\n\t\t\t\t\treturn children[i];\n\t\t\t\t}\n\t\t\t\tcurrentChild++;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\tfunction _lastChild(el) {\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last === ghostEl || last.style.display === 'none') {\n\t\t\tlast = last.previousElementSibling;\n\n\t\t\tif (!last) break;\n\t\t}\n\n\t\treturn last || null;\n\t}\n\n\tfunction _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = _getRect(_lastChild(el)),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\tvar targetRect = _getRect(target),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\tdragRect = _getRect(dragEl),\n\t\t\tinvert = false;\n\n\n\t\tif (!invertSwap) {\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t}\n\n\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvert = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Regular\n\t\t\t\tif (\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t) {\n\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? -1 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinvert = invert || invertSwap;\n\n\t\tif (invert) {\n\t\t\t// Invert of regular\n\t\t\tif (\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t * seem that dragEl has been \"inserted\" into that element's position\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t * @param  {Object} options           options of the parent sortable\n\t * @return {Number}                   Direction dragEl must be swapped\n\t */\n\tfunction _getInsertDirection(target, options) {\n\t\tvar dragElIndex = _index(dragEl, options.draggable),\n\t\t\ttargetIndex = _index(target, options.draggable);\n\n\t\tif (dragElIndex < targetIndex) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\ttry {\n\t\t\t\tif (el.matches) {\n\t\t\t\t\treturn el.matches(selector);\n\t\t\t\t} else if (el.msMatchesSelector) {\n\t\t\t\t\treturn el.msMatchesSelector(selector);\n\t\t\t\t} else if (el.webkitMatchesSelector) {\n\t\t\t\t\treturn el.webkitMatchesSelector(selector);\n\t\t\t\t}\n\t\t\t} catch(_) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn function () {\n\t\t\tif (!_throttleTimeout) {\n\t\t\t\tvar args = arguments,\n\t\t\t\t\t_this = this;\n\n\t\t\t\t_throttleTimeout = setTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\t_throttleTimeout = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _cancelThrottle() {\n\t\tclearTimeout(_throttleTimeout);\n\t\t_throttleTimeout = void 0;\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\tif (Polymer && Polymer.dom) {\n\t\t\treturn Polymer.dom(el).cloneNode(true);\n\t\t}\n\t\telse if ($) {\n\t\t\treturn $(el).clone(true)[0];\n\t\t}\n\t\telse {\n\t\t\treturn el.cloneNode(true);\n\t\t}\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tsavedInputChecked.length = 0;\n\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\tfunction _nextTick(fn) {\n\t\treturn setTimeout(fn, 0);\n\t}\n\n\tfunction _cancelNextTick(id) {\n\t\treturn clearTimeout(id);\n\t}\n\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * (used for fixed positioning on el)\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, container, adjustForTransform) {\n\t\tif (!el.getBoundingClientRect && el !== win) return;\n\n\t\tvar elRect,\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\theight,\n\t\t\twidth;\n\n\t\tif (el !== win) {\n\t\t\telRect = el.getBoundingClientRect();\n\t\t\ttop = elRect.top;\n\t\t\tleft = elRect.left;\n\t\t\tbottom = elRect.bottom;\n\t\t\tright = elRect.right;\n\t\t\theight = elRect.height;\n\t\t\twidth = elRect.width;\n\t\t} else {\n\t\t\ttop = 0;\n\t\t\tleft = 0;\n\t\t\tbottom = window.innerHeight;\n\t\t\tright = window.innerWidth;\n\t\t\theight = window.innerHeight;\n\t\t\twidth = window.innerWidth;\n\t\t}\n\n\t\tif (adjustForTransform && el !== win) {\n\t\t\t// Adjust for translate()\n\t\t\tcontainer = container || el.parentNode;\n\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n\t\t\t// Not needed on <= IE11\n\t\t\tif (!IE11OrLess) {\n\t\t\t\tdo {\n\t\t\t\t\tif (container && container.getBoundingClientRect && _css(container, 'transform') !== 'none') {\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\n\n\t\t\t\t\t\t// Set relative to edges of padding box of container\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(_css(container, 'border-top-width'));\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(_css(container, 'border-left-width'));\n\t\t\t\t\t\tbottom = top + elRect.height;\n\t\t\t\t\t\tright = left + elRect.width;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t} while (container = container.parentNode);\n\t\t\t}\n\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = _matrix(el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\t/**\n\t * Checks if a side of an element is scrolled past a side of it's parents\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\n\t * @return {Boolean}               Whether the element is overflowing the viewport on the given side of it's parent\n\t */\n\tfunction _isScrolledPast(el, side) {\n\t\tvar parent = _getParentAutoScrollElement(parent, true),\n\t\t\telSide = _getRect(el)[side];\n\n\t\t/* jshint boss:true */\n\t\twhile (parent) {\n\t\t\tvar parentSide = _getRect(parent)[side],\n\t\t\t\tvisible;\n\n\t\t\tif (side === 'top' || side === 'left') {\n\t\t\t\tvisible = elSide >= parentSide;\n\t\t\t} else {\n\t\t\t\tvisible = elSide <= parentSide;\n\t\t\t}\n\n\t\t\tif (!visible) return true;\n\n\t\t\tif (parent === win) break;\n\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Fixed #973:\n\t_on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el, false);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index,\n\t\tnextTick: _nextTick,\n\t\tcancelNextTick: _cancelNextTick,\n\t\tdetectDirection: _detectDirection,\n\t\tgetChild: _getChild\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.8.3';\n\treturn Sortable;\n});\n", "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Sortable = _interopDefault(require('sortablejs'));\n\nfunction $(expr, con) {\n    return typeof expr === 'string' ?\n        (con || document).querySelector(expr) :\n        expr || null;\n}\n\n$.each = (expr, con) => {\n    return typeof expr === 'string' ?\n        Array.from((con || document).querySelectorAll(expr)) :\n        expr || null;\n};\n\n$.create = (tag, o) => {\n    let element = document.createElement(tag);\n\n    for (let i in o) {\n        let val = o[i];\n\n        if (i === 'inside') {\n            $(val).appendChild(element);\n        } else\n        if (i === 'around') {\n            let ref = $(val);\n            ref.parentNode.insertBefore(element, ref);\n            element.appendChild(ref);\n        } else\n        if (i === 'styles') {\n            if (typeof val === 'object') {\n                Object.keys(val).map(prop => {\n                    element.style[prop] = val[prop];\n                });\n            }\n        } else\n        if (i in element) {\n            element[i] = val;\n        } else {\n            element.setAttribute(i, val);\n        }\n    }\n\n    return element;\n};\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.unbind = (element, o) => {\n    if (element) {\n        for (let event in o) {\n            let callback = o[event];\n\n            event.split(/\\s+/).forEach(function (event) {\n                element.removeEventListener(event, callback);\n            });\n        }\n    }\n};\n\n$.fire = (target, type, properties) => {\n    let evt = document.createEvent('HTMLEvents');\n\n    evt.initEvent(type, true, true);\n\n    for (let j in properties) {\n        evt[j] = properties[j];\n    }\n\n    return target.dispatchEvent(evt);\n};\n\n$.data = (element, attrs) => { // eslint-disable-line\n    if (!attrs) {\n        return element.dataset;\n    }\n\n    for (const attr in attrs) {\n        element.dataset[attr] = attrs[attr];\n    }\n};\n\n$.style = (elements, styleMap) => { // eslint-disable-line\n\n    if (typeof styleMap === 'string') {\n        return $.getStyle(elements, styleMap);\n    }\n\n    if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    elements.map(element => {\n        for (const prop in styleMap) {\n            element.style[prop] = styleMap[prop];\n        }\n    });\n};\n\n$.removeStyle = (elements, styleProps) => {\n    if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(styleProps)) {\n        styleProps = [styleProps];\n    }\n\n    elements.map(element => {\n        for (const prop of styleProps) {\n            element.style[prop] = '';\n        }\n    });\n};\n\n$.getStyle = (element, prop) => {\n    if (!prop) {\n        return getComputedStyle(element);\n    }\n\n    let val = getComputedStyle(element)[prop];\n\n    if (['width', 'height'].includes(prop)) {\n        val = parseFloat(val);\n    }\n\n    return val;\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.inViewport = (el, parentEl) => {\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = el.getBoundingClientRect();\n    const {\n        top: pTop,\n        left: pLeft,\n        bottom: pBottom,\n        right: pRight\n    } = parentEl.getBoundingClientRect();\n\n    return top >= pTop && left >= pLeft && bottom <= pBottom && right <= pRight;\n};\n\n$.scrollTop = function scrollTop(element, pixels) {\n    requestAnimationFrame(() => {\n        element.scrollTop = pixels;\n    });\n};\n\n$.scrollbarSize = function scrollbarSize() {\n    if (!$.scrollBarSizeValue) {\n        $.scrollBarSizeValue = getScrollBarSize();\n    }\n    return $.scrollBarSizeValue;\n};\n\nfunction getScrollBarSize() {\n    // assume scrollbar width and height would be the same\n\n    // Create the measurement node\n    const scrollDiv = document.createElement('div');\n    $.style(scrollDiv, {\n        width: '100px',\n        height: '100px',\n        overflow: 'scroll',\n        position: 'absolute',\n        top: '-9999px'\n    });\n    document.body.appendChild(scrollDiv);\n\n    // Get the scrollbar width\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n\n    return scrollbarWidth;\n}\n\n$.hasVerticalOverflow = function (element) {\n    return element.scrollHeight > element.offsetHeight + 10;\n};\n\n$.hasHorizontalOverflow = function (element) {\n    return element.scrollWidth > element.offsetWidth + 10;\n};\n\n$.measureTextWidth = function (text) {\n    const div = document.createElement('div');\n    div.style.position = 'absolute';\n    div.style.visibility = 'hidden';\n    div.style.height = 'auto';\n    div.style.width = 'auto';\n    div.style.whiteSpace = 'nowrap';\n    div.innerText = text;\n    document.body.appendChild(div);\n    return div.clientWidth + 1;\n};\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject;\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return _root.Date.now();\n};\n\nvar now_1 = now;\n\n/** Built-in value references. */\nvar Symbol = _root.Symbol;\n\nvar _Symbol = Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar _objectToString = objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag$1 && symToStringTag$1 in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);\n}\n\nvar isSymbol_1 = isSymbol;\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol_1(value)) {\n    return NAN;\n  }\n  if (isObject_1(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject_1(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nvar toNumber_1 = toNumber;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber_1(wait) || 0;\n  if (isObject_1(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber_1(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now_1();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now_1());\n  }\n\n  function debounced() {\n    var time = now_1(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nvar debounce_1 = debounce;\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT$1 = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT$1);\n  }\n  if (isObject_1(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce_1(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nvar throttle_1 = throttle;\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject_1(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nvar isFunction_1 = isFunction;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root['__core-js_shared__'];\n\nvar _coreJsData = coreJsData;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nvar _isMasked = isMasked;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nvar _toSource = toSource;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto$1 = Function.prototype,\n    objectProto$2 = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$1 = funcProto$1.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString$1.call(hasOwnProperty$1).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject_1(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\nvar _baseIsNative = baseIsNative;\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nvar _getValue = getValue;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\nvar _getNative = getNative;\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\nvar _nativeCreate = nativeCreate;\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\nvar _hashClear = hashClear;\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _hashDelete = hashDelete;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty$2.call(data, key) ? data[key] : undefined;\n}\n\nvar _hashGet = hashGet;\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$3.call(data, key);\n}\n\nvar _hashHas = hashHas;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\nvar _hashSet = hashSet;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\nvar _Hash = Hash;\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nvar _listCacheClear = listCacheClear;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nvar eq_1 = eq;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq_1(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nvar _assocIndexOf = assocIndexOf;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete;\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nvar _listCacheGet = listCacheGet;\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\nvar _listCacheHas = listCacheHas;\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nvar _listCacheSet = listCacheSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\nvar _ListCache = ListCache;\n\n/* Built-in method references that are verified to be native. */\nvar Map = _getNative(_root, 'Map');\n\nvar _Map = Map;\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\nvar _mapCacheClear = mapCacheClear;\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nvar _isKeyable = isKeyable;\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nvar _getMapData = getMapData;\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _mapCacheDelete = mapCacheDelete;\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\nvar _mapCacheGet = mapCacheGet;\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\nvar _mapCacheHas = mapCacheHas;\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nvar _mapCacheSet = mapCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\nvar _MapCache = MapCache;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$2 = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED$2);\n  return this;\n}\n\nvar _setCacheAdd = setCacheAdd;\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nvar _setCacheHas = setCacheHas;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new _MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;\nSetCache.prototype.has = _setCacheHas;\n\nvar _SetCache = SetCache;\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nvar _baseFindIndex = baseFindIndex;\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nvar _baseIsNaN = baseIsNaN;\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nvar _strictIndexOf = strictIndexOf;\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? _strictIndexOf(array, value, fromIndex)\n    : _baseFindIndex(array, _baseIsNaN, fromIndex);\n}\n\nvar _baseIndexOf = baseIndexOf;\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && _baseIndexOf(array, value, 0) > -1;\n}\n\nvar _arrayIncludes = arrayIncludes;\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar _arrayIncludesWith = arrayIncludesWith;\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nvar _cacheHas = cacheHas;\n\n/* Built-in method references that are verified to be native. */\nvar Set = _getNative(_root, 'Set');\n\nvar _Set = Set;\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nvar noop_1 = noop;\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nvar _setToArray = setToArray;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == INFINITY) ? noop_1 : function(values) {\n  return new _Set(values);\n};\n\nvar _createSet = createSet;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = _arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = _arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : _createSet(array);\n    if (set) {\n      return _setToArray(set);\n    }\n    isCommon = false;\n    includes = _cacheHas;\n    seen = new _SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nvar _baseUniq = baseUniq;\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? _baseUniq(array) : [];\n}\n\nvar uniq_1 = uniq;\n\nfunction camelCaseToDash(str) {\n    return str.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`);\n}\n\nfunction makeDataAttributeString(props) {\n    const keys = Object.keys(props);\n\n    return keys\n        .map((key) => {\n            const _key = camelCaseToDash(key);\n            const val = props[key];\n\n            if (val === undefined) return '';\n            return `data-${_key}=\"${val}\" `;\n        })\n        .join('')\n        .trim();\n}\n\nfunction copyTextToClipboard(text) {\n    // https://stackoverflow.com/a/30810322/5353542\n    var textArea = document.createElement('textarea');\n\n    //\n    // *** This styling is an extra step which is likely not required. ***\n    //\n    // Why is it here? To ensure:\n    // 1. the element is able to have focus and selection.\n    // 2. if element was to flash render it has minimal visual impact.\n    // 3. less flakyness with selection and copying which **might** occur if\n    //    the textarea element is not visible.\n    //\n    // The likelihood is the element won't even render, not even a flash,\n    // so some of these are just precautions. However in IE the element\n    // is visible whilst the popup box asking the user for permission for\n    // the web page to copy to the clipboard.\n    //\n\n    // Place in top-left corner of screen regardless of scroll position.\n    textArea.style.position = 'fixed';\n    textArea.style.top = 0;\n    textArea.style.left = 0;\n\n    // Ensure it has a small width and height. Setting to 1px / 1em\n    // doesn't work as this gives a negative w/h on some browsers.\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n\n    // We don't need padding, reducing the size if it does flash render.\n    textArea.style.padding = 0;\n\n    // Clean up any borders.\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n\n    // Avoid flash of white box if rendered for any reason.\n    textArea.style.background = 'transparent';\n\n    textArea.value = text;\n\n    document.body.appendChild(textArea);\n\n    textArea.select();\n\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        console.log('Oops, unable to copy');\n    }\n\n    document.body.removeChild(textArea);\n}\n\nfunction isNumeric(val) {\n    return !isNaN(val);\n}\n\nlet throttle$1 = throttle_1;\n\nlet debounce$1 = debounce_1;\n\nfunction nextTick(fn, context = null) {\n    return (...args) => {\n        return new Promise(resolve => {\n            const execute = () => {\n                const out = fn.apply(context, args);\n                resolve(out);\n            };\n            setTimeout(execute);\n        });\n    };\n}\nfunction linkProperties(target, source, properties) {\n    const props = properties.reduce((acc, prop) => {\n        acc[prop] = {\n            get() {\n                return source[prop];\n            }\n        };\n        return acc;\n    }, {});\n    Object.defineProperties(target, props);\n}\nfunction isSet(val) {\n    return val !== undefined || val !== null;\n}\n\nfunction notSet(val) {\n    return !isSet(val);\n}\n\nfunction isNumber(val) {\n    return !isNaN(val);\n}\n\nfunction ensureArray(val) {\n    if (!Array.isArray(val)) {\n        return [val];\n    }\n    return val;\n}\n\nfunction uniq$1(arr) {\n    return uniq_1(arr);\n}\n\nfunction numberSortAsc(a, b) {\n    return a - b;\n}\nfunction stripHTML(html) {\n    return html.replace(/<[^>]*>/g, '');\n}\nfunction format(str, args) {\n    if (!str) return str;\n\n    Object.keys(args).forEach(arg => {\n        let regex = new RegExp(`{(${arg})}`, 'g');\n        str = str.replace(regex, args[arg]);\n    });\n\n    return str;\n}\n\nclass DataManager {\n    constructor(options) {\n        this.options = options;\n        this.sortRows = nextTick(this.sortRows, this);\n        this.switchColumn = nextTick(this.switchColumn, this);\n        this.removeColumn = nextTick(this.removeColumn, this);\n        this.options.filterRows = nextTick(this.options.filterRows, this);\n    }\n\n    init(data, columns) {\n        if (!data) {\n            data = this.options.data;\n        }\n        if (columns) {\n            this.options.columns = columns;\n        }\n\n        this.data = data;\n\n        this.rowCount = 0;\n        this.columns = [];\n        this.rows = [];\n\n        this.prepareColumns();\n        this.prepareRows();\n        this.prepareTreeRows();\n        this.prepareRowView();\n        this.prepareNumericColumns();\n    }\n\n    // computed property\n    get currentSort() {\n        const col = this.columns.find(col => col.sortOrder !== 'none');\n        return col || {\n            colIndex: -1,\n            sortOrder: 'none'\n        };\n    }\n\n    prepareColumns() {\n        this.columns = [];\n        this.validateColumns();\n        this.prepareDefaultColumns();\n        this.prepareHeader();\n    }\n\n    prepareDefaultColumns() {\n        if (this.options.checkboxColumn && !this.hasColumnById('_checkbox')) {\n            const cell = {\n                id: '_checkbox',\n                content: this.getCheckboxHTML(),\n                editable: false,\n                resizable: false,\n                sortable: false,\n                focusable: false,\n                dropdown: false,\n                width: 32\n            };\n            this.columns.push(cell);\n        }\n\n        if (this.options.serialNoColumn && !this.hasColumnById('_rowIndex')) {\n            let cell = {\n                id: '_rowIndex',\n                content: '',\n                align: 'center',\n                editable: false,\n                resizable: false,\n                focusable: false,\n                dropdown: false\n            };\n\n            this.columns.push(cell);\n        }\n    }\n\n    prepareHeader() {\n        let columns = this.columns.concat(this.options.columns);\n        const baseCell = {\n            isHeader: 1,\n            editable: true,\n            sortable: true,\n            resizable: true,\n            focusable: true,\n            dropdown: true,\n            width: null,\n            format: (value) => {\n                if (value === null || value === undefined) {\n                    return '';\n                }\n                return value + '';\n            }\n        };\n\n        this.columns = columns\n            .map((cell, i) => this.prepareCell(cell, i))\n            .map(col => Object.assign({}, baseCell, col))\n            .map(col => {\n                col.content = col.content || col.name || '';\n                col.id = col.id || col.content;\n                return col;\n            });\n    }\n\n    prepareCell(content, i) {\n        const cell = {\n            content: '',\n            sortOrder: 'none',\n            colIndex: i,\n            column: this.columns[i]\n        };\n\n        if (content !== null && typeof content === 'object') {\n            // passed as column/header\n            Object.assign(cell, content);\n        } else {\n            cell.content = content;\n        }\n\n        return cell;\n    }\n\n    prepareNumericColumns() {\n        const row0 = this.getRow(0);\n        if (!row0) return;\n        this.columns = this.columns.map((column, i) => {\n\n            const cellValue = row0[i].content;\n            if (!column.align && isNumeric(cellValue)) {\n                column.align = 'right';\n            }\n\n            return column;\n        });\n    }\n\n    prepareRows() {\n        this.validateData(this.data);\n\n        this.rows = this.data.map((d, i) => {\n            const index = this._getNextRowCount();\n\n            let row = [];\n            let meta = {\n                rowIndex: index\n            };\n\n            if (Array.isArray(d)) {\n                // row is an array\n                if (this.options.checkboxColumn) {\n                    row.push(this.getCheckboxHTML());\n                }\n                if (this.options.serialNoColumn) {\n                    row.push((index + 1) + '');\n                }\n                row = row.concat(d);\n\n                while (row.length < this.columns.length) {\n                    row.push('');\n                }\n\n            } else {\n                // row is an object\n                for (let col of this.columns) {\n                    if (col.id === '_checkbox') {\n                        row.push(this.getCheckboxHTML());\n                    } else if (col.id === '_rowIndex') {\n                        row.push((index + 1) + '');\n                    } else {\n                        row.push(d[col.id]);\n                    }\n                }\n\n                meta.indent = d.indent || 0;\n            }\n\n            return this.prepareRow(row, meta);\n        });\n    }\n\n    prepareTreeRows() {\n        this.rows.forEach((row, i) => {\n            if (isNumber(row.meta.indent)) {\n                // if (i === 36) debugger;\n                const nextRow = this.getRow(i + 1);\n                row.meta.isLeaf = !nextRow ||\n                    notSet(nextRow.meta.indent) ||\n                    nextRow.meta.indent <= row.meta.indent;\n                row.meta.isTreeNodeClose = false;\n            }\n        });\n    }\n\n    prepareRowView() {\n        // This is order in which rows will be rendered in the table.\n        // When sorting happens, only this.rowViewOrder will change\n        // and not the original this.rows\n        this.rowViewOrder = this.rows.map(row => row.meta.rowIndex);\n    }\n\n    prepareRow(row, meta) {\n        const baseRowCell = {\n            rowIndex: meta.rowIndex,\n            indent: meta.indent\n        };\n\n        row = row\n            .map((cell, i) => this.prepareCell(cell, i))\n            .map(cell => Object.assign({}, baseRowCell, cell));\n\n        // monkey patched in array object\n        row.meta = meta;\n        return row;\n    }\n\n    validateColumns() {\n        const columns = this.options.columns;\n        if (!Array.isArray(columns)) {\n            throw new DataError('`columns` must be an array');\n        }\n\n        columns.forEach((column, i) => {\n            if (typeof column !== 'string' && typeof column !== 'object') {\n                throw new DataError(`column \"${i}\" must be a string or an object`);\n            }\n        });\n    }\n\n    validateData(data) {\n        if (Array.isArray(data) &&\n            (data.length === 0 || Array.isArray(data[0]) || typeof data[0] === 'object')) {\n            return true;\n        }\n        throw new DataError('`data` must be an array of arrays or objects');\n    }\n\n    appendRows(rows) {\n        this.validateData(rows);\n\n        this.rows.push(...this.prepareRows(rows));\n    }\n\n    sortRows(colIndex, sortOrder = 'none') {\n        colIndex = +colIndex;\n\n        // reset sortOrder and update for colIndex\n        this.getColumns()\n            .map(col => {\n                if (col.colIndex === colIndex) {\n                    col.sortOrder = sortOrder;\n                } else {\n                    col.sortOrder = 'none';\n                }\n            });\n\n        this._sortRows(colIndex, sortOrder);\n    }\n\n    _sortRows(colIndex, sortOrder) {\n\n        if (this.currentSort.colIndex === colIndex) {\n            // reverse the array if only sortOrder changed\n            if (\n                (this.currentSort.sortOrder === 'asc' && sortOrder === 'desc') ||\n                (this.currentSort.sortOrder === 'desc' && sortOrder === 'asc')\n            ) {\n                this.reverseArray(this.rowViewOrder);\n                this.currentSort.sortOrder = sortOrder;\n                return;\n            }\n        }\n\n        this.rowViewOrder.sort((a, b) => {\n            const aIndex = a;\n            const bIndex = b;\n\n            let aContent = this.getCell(colIndex, a).content;\n            let bContent = this.getCell(colIndex, b).content;\n            aContent = aContent == null ? '' : aContent;\n            bContent = bContent == null ? '' : bContent;\n\n            if (sortOrder === 'none') {\n                return aIndex - bIndex;\n            } else if (sortOrder === 'asc') {\n                if (aContent < bContent) return -1;\n                if (aContent > bContent) return 1;\n                if (aContent === bContent) return 0;\n            } else if (sortOrder === 'desc') {\n                if (aContent < bContent) return 1;\n                if (aContent > bContent) return -1;\n                if (aContent === bContent) return 0;\n            }\n            return 0;\n        });\n\n        if (this.hasColumnById('_rowIndex')) {\n            // update row index\n            const srNoColIndex = this.getColumnIndexById('_rowIndex');\n            this.rows.forEach((row, index) => {\n                const viewIndex = this.rowViewOrder.indexOf(index);\n                const cell = row[srNoColIndex];\n                cell.content = (viewIndex + 1) + '';\n            });\n        }\n    }\n\n    reverseArray(array) {\n        let left = null;\n        let right = null;\n        let length = array.length;\n\n        for (left = 0, right = length - 1; left < right; left += 1, right -= 1) {\n            const temporary = array[left];\n\n            array[left] = array[right];\n            array[right] = temporary;\n        }\n    }\n\n    switchColumn(index1, index2) {\n        // update columns\n        const temp = this.columns[index1];\n        this.columns[index1] = this.columns[index2];\n        this.columns[index2] = temp;\n\n        this.columns[index1].colIndex = index1;\n        this.columns[index2].colIndex = index2;\n\n        // update rows\n        this.rows.forEach(row => {\n            const newCell1 = Object.assign({}, row[index1], {\n                colIndex: index2\n            });\n            const newCell2 = Object.assign({}, row[index2], {\n                colIndex: index1\n            });\n\n            row[index2] = newCell1;\n            row[index1] = newCell2;\n        });\n    }\n\n    removeColumn(index) {\n        index = +index;\n        const filter = cell => cell.colIndex !== index;\n        const map = (cell, i) => Object.assign({}, cell, {\n            colIndex: i\n        });\n        // update columns\n        this.columns = this.columns\n            .filter(filter)\n            .map(map);\n\n        // update rows\n        this.rows.forEach(row => {\n            // remove cell\n            row.splice(index, 1);\n            // update colIndex\n            row.forEach((cell, i) => {\n                cell.colIndex = i;\n            });\n        });\n    }\n\n    updateRow(row, rowIndex) {\n        if (row.length < this.columns.length) {\n            if (this.hasColumnById('_rowIndex')) {\n                const val = (rowIndex + 1) + '';\n\n                row = [val].concat(row);\n            }\n\n            if (this.hasColumnById('_checkbox')) {\n                const val = '<input type=\"checkbox\" />';\n\n                row = [val].concat(row);\n            }\n        }\n\n        const _row = this.prepareRow(row, {rowIndex});\n        const index = this.rows.findIndex(row => row[0].rowIndex === rowIndex);\n        this.rows[index] = _row;\n\n        return _row;\n    }\n\n    updateCell(colIndex, rowIndex, options) {\n        let cell;\n        if (typeof colIndex === 'object') {\n            // cell object was passed,\n            // must have colIndex, rowIndex\n            cell = colIndex;\n            colIndex = cell.colIndex;\n            rowIndex = cell.rowIndex;\n            // the object passed must be merged with original cell\n            options = cell;\n        }\n        cell = this.getCell(colIndex, rowIndex);\n\n        // mutate object directly\n        for (let key in options) {\n            const newVal = options[key];\n            if (newVal !== undefined) {\n                cell[key] = newVal;\n            }\n        }\n\n        return cell;\n    }\n\n    updateColumn(colIndex, keyValPairs) {\n        const column = this.getColumn(colIndex);\n        for (let key in keyValPairs) {\n            const newVal = keyValPairs[key];\n            if (newVal !== undefined) {\n                column[key] = newVal;\n            }\n        }\n        return column;\n    }\n\n    filterRows(filters) {\n        return this.options.filterRows(this.rows, filters)\n            .then(result => {\n                if (!result) {\n                    result = this.getAllRowIndices();\n                }\n\n                if (!result.then) {\n                    result = Promise.resolve(result);\n                }\n\n                return result.then(rowsToShow => {\n                    this._filteredRows = rowsToShow;\n\n                    const rowsToHide = this.getAllRowIndices()\n                        .filter(index => !rowsToShow.includes(index));\n\n                    return {\n                        rowsToHide,\n                        rowsToShow\n                    };\n                });\n            });\n    }\n\n    getFilteredRowIndices() {\n        return this._filteredRows || this.getAllRowIndices();\n    }\n\n    getAllRowIndices() {\n        return this.rows.map(row => row.meta.rowIndex);\n    }\n\n    getRowCount() {\n        return this.rowCount;\n    }\n\n    _getNextRowCount() {\n        const val = this.rowCount;\n\n        this.rowCount++;\n        return val;\n    }\n\n    getRows(start, end) {\n        return this.rows.slice(start, end);\n    }\n\n    getRowsForView(start, end) {\n        const rows = this.rowViewOrder.map(i => this.rows[i]);\n        return rows.slice(start, end);\n    }\n\n    getColumns(skipStandardColumns) {\n        let columns = this.columns;\n\n        if (skipStandardColumns) {\n            columns = columns.slice(this.getStandardColumnCount());\n        }\n\n        return columns;\n    }\n\n    getStandardColumnCount() {\n        if (this.options.checkboxColumn && this.options.serialNoColumn) {\n            return 2;\n        }\n\n        if (this.options.checkboxColumn || this.options.serialNoColumn) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    getColumnCount(skipStandardColumns) {\n        let val = this.columns.length;\n\n        if (skipStandardColumns) {\n            val = val - this.getStandardColumnCount();\n        }\n\n        return val;\n    }\n\n    getColumn(colIndex) {\n        colIndex = +colIndex;\n\n        if (colIndex < 0) {\n            // negative indexes\n            colIndex = this.columns.length + colIndex;\n        }\n\n        return this.columns.find(col => col.colIndex === colIndex);\n    }\n\n    getColumnById(id) {\n        return this.columns.find(col => col.id === id);\n    }\n\n    getRow(rowIndex) {\n        rowIndex = +rowIndex;\n        return this.rows[rowIndex];\n    }\n\n    getCell(colIndex, rowIndex) {\n        rowIndex = +rowIndex;\n        colIndex = +colIndex;\n        return this.getRow(rowIndex)[colIndex];\n    }\n\n    getChildren(parentRowIndex) {\n        parentRowIndex = +parentRowIndex;\n        const parentIndent = this.getRow(parentRowIndex).meta.indent;\n        const out = [];\n\n        for (let i = parentRowIndex + 1; i < this.rowCount; i++) {\n            const row = this.getRow(i);\n            if (isNaN(row.meta.indent)) continue;\n\n            if (row.meta.indent > parentIndent) {\n                out.push(i);\n            }\n\n            if (row.meta.indent === parentIndent) {\n                break;\n            }\n        }\n\n        return out;\n    }\n\n    getImmediateChildren(parentRowIndex) {\n        parentRowIndex = +parentRowIndex;\n        const parentIndent = this.getRow(parentRowIndex).meta.indent;\n        const out = [];\n        const childIndent = parentIndent + 1;\n\n        for (let i = parentRowIndex + 1; i < this.rowCount; i++) {\n            const row = this.getRow(i);\n            if (isNaN(row.meta.indent) || row.meta.indent > childIndent) continue;\n\n            if (row.meta.indent === childIndent) {\n                out.push(i);\n            }\n\n            if (row.meta.indent === parentIndent) {\n                break;\n            }\n        }\n\n        return out;\n    }\n\n    get() {\n        return {\n            columns: this.columns,\n            rows: this.rows\n        };\n    }\n\n    /**\n     * Returns the original data which was passed\n     * based on rowIndex\n     * @param {Number} rowIndex\n     * @returns Array|Object\n     * @memberof DataManager\n     */\n    getData(rowIndex) {\n        return this.data[rowIndex];\n    }\n\n    hasColumn(name) {\n        return Boolean(this.columns.find(col => col.content === name));\n    }\n\n    hasColumnById(id) {\n        return Boolean(this.columns.find(col => col.id === id));\n    }\n\n    getColumnIndex(name) {\n        return this.columns.findIndex(col => col.content === name);\n    }\n\n    getColumnIndexById(id) {\n        return this.columns.findIndex(col => col.id === id);\n    }\n\n    getCheckboxHTML() {\n        return '<input type=\"checkbox\" />';\n    }\n}\n\n// Custom Errors\nclass DataError extends TypeError {}\n\n/* eslint-disable max-len */\n\n// Icons from https://feathericons.com/\n\nlet icons = {\n    chevronDown: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>',\n    chevronRight: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>'\n};\n\nclass CellManager {\n    constructor(instance) {\n        this.instance = instance;\n        linkProperties(this, this.instance, [\n            'wrapper',\n            'options',\n            'style',\n            'header',\n            'bodyScrollable',\n            'columnmanager',\n            'rowmanager',\n            'datamanager',\n            'keyboard'\n        ]);\n\n        this.bindEvents();\n    }\n\n    bindEvents() {\n        this.bindFocusCell();\n        this.bindEditCell();\n        this.bindKeyboardSelection();\n        this.bindCopyCellContents();\n        this.bindMouseEvents();\n        this.bindTreeEvents();\n    }\n\n    bindFocusCell() {\n        this.bindKeyboardNav();\n    }\n\n    bindEditCell() {\n        this.$editingCell = null;\n\n        $.on(this.bodyScrollable, 'dblclick', '.dt-cell', (e, cell) => {\n            this.activateEditing(cell);\n        });\n\n        this.keyboard.on('enter', () => {\n            if (this.$focusedCell && !this.$editingCell) {\n                // enter keypress on focused cell\n                this.activateEditing(this.$focusedCell);\n            } else if (this.$editingCell) {\n                // enter keypress on editing cell\n                this.deactivateEditing();\n            }\n        });\n    }\n\n    bindKeyboardNav() {\n        const focusLastCell = (direction) => {\n            if (!this.$focusedCell || this.$editingCell) {\n                return false;\n            }\n\n            let $cell = this.$focusedCell;\n            const {\n                rowIndex,\n                colIndex\n            } = $.data($cell);\n\n            if (direction === 'left') {\n                $cell = this.getLeftMostCell$(rowIndex);\n            } else if (direction === 'right') {\n                $cell = this.getRightMostCell$(rowIndex);\n            } else if (direction === 'up') {\n                $cell = this.getTopMostCell$(colIndex);\n            } else if (direction === 'down') {\n                $cell = this.getBottomMostCell$(colIndex);\n            }\n\n            this.focusCell($cell);\n            return true;\n        };\n\n        ['left', 'right', 'up', 'down', 'tab', 'shift+tab']\n            .map(direction => this.keyboard.on(direction, () => this.focusCellInDirection(direction)));\n\n        ['left', 'right', 'up', 'down']\n            .map(direction => this.keyboard.on(`ctrl+${direction}`, () => focusLastCell(direction)));\n\n        this.keyboard.on('esc', () => {\n            this.deactivateEditing(false);\n            this.columnmanager.toggleFilter(false);\n        });\n\n        if (this.options.inlineFilters) {\n            this.keyboard.on('ctrl+f', (e) => {\n                const $cell = $.closest('.dt-cell', e.target);\n                const { colIndex } = $.data($cell);\n\n                this.activateFilter(colIndex);\n                return true;\n            });\n\n            $.on(this.header, 'focusin', '.dt-filter', () => {\n                this.unfocusCell(this.$focusedCell);\n            });\n        }\n    }\n\n    bindKeyboardSelection() {\n        const getNextSelectionCursor = (direction) => {\n            let $selectionCursor = this.getSelectionCursor();\n\n            if (direction === 'left') {\n                $selectionCursor = this.getLeftCell$($selectionCursor);\n            } else if (direction === 'right') {\n                $selectionCursor = this.getRightCell$($selectionCursor);\n            } else if (direction === 'up') {\n                $selectionCursor = this.getAboveCell$($selectionCursor);\n            } else if (direction === 'down') {\n                $selectionCursor = this.getBelowCell$($selectionCursor);\n            }\n\n            return $selectionCursor;\n        };\n\n        ['left', 'right', 'up', 'down']\n            .map(direction =>\n                this.keyboard.on(`shift+${direction}`, () => this.selectArea(getNextSelectionCursor(direction))));\n    }\n\n    bindCopyCellContents() {\n        this.keyboard.on('ctrl+c', () => {\n            const noOfCellsCopied = this.copyCellContents(this.$focusedCell, this.$selectionCursor);\n            const message = this.instance.translate('{count} cells copied', {\n                count: noOfCellsCopied\n            });\n\n            if (noOfCellsCopied) {\n                this.instance.showToastMessage(message, 2);\n            }\n        });\n\n        if (this.options.pasteFromClipboard) {\n            this.keyboard.on('ctrl+v', (e) => {\n                // hack\n                // https://stackoverflow.com/a/2177059/5353542\n                this.instance.pasteTarget.focus();\n\n                setTimeout(() => {\n                    const data = this.instance.pasteTarget.value;\n                    this.instance.pasteTarget.value = '';\n                    this.pasteContentInCell(data);\n                }, 10);\n\n                return false;\n            });\n        }\n    }\n\n    bindMouseEvents() {\n        let mouseDown = null;\n\n        $.on(this.bodyScrollable, 'mousedown', '.dt-cell', (e) => {\n            mouseDown = true;\n            this.focusCell($(e.delegatedTarget));\n        });\n\n        $.on(this.bodyScrollable, 'mouseup', () => {\n            mouseDown = false;\n        });\n\n        const selectArea = (e) => {\n            if (!mouseDown) return;\n            this.selectArea($(e.delegatedTarget));\n        };\n\n        $.on(this.bodyScrollable, 'mousemove', '.dt-cell', throttle$1(selectArea, 50));\n    }\n\n    bindTreeEvents() {\n        $.on(this.bodyScrollable, 'click', '.dt-tree-node__toggle', (e, $toggle) => {\n            const $cell = $.closest('.dt-cell', $toggle);\n            const { rowIndex } = $.data($cell);\n\n            if ($cell.classList.contains('dt-cell--tree-close')) {\n                this.rowmanager.openSingleNode(rowIndex);\n            } else {\n                this.rowmanager.closeSingleNode(rowIndex);\n            }\n        });\n    }\n\n    focusCell($cell, {\n        skipClearSelection = 0,\n        skipDOMFocus = 0,\n        skipScrollToCell = 0\n    } = {}) {\n        if (!$cell) return;\n\n        // don't focus if already editing cell\n        if ($cell === this.$editingCell) return;\n\n        const {\n            colIndex,\n            isHeader\n        } = $.data($cell);\n        if (isHeader) {\n            return;\n        }\n\n        const column = this.columnmanager.getColumn(colIndex);\n        if (column.focusable === false) {\n            return;\n        }\n\n        if (!skipScrollToCell) {\n            this.scrollToCell($cell);\n        }\n\n        this.deactivateEditing();\n        if (!skipClearSelection) {\n            this.clearSelection();\n        }\n\n        if (this.$focusedCell) {\n            this.$focusedCell.classList.remove('dt-cell--focus');\n        }\n\n        this.$focusedCell = $cell;\n        $cell.classList.add('dt-cell--focus');\n\n        if (!skipDOMFocus) {\n            // so that keyboard nav works\n            $cell.focus();\n        }\n\n        this.highlightRowColumnHeader($cell);\n    }\n\n    unfocusCell($cell) {\n        if (!$cell) return;\n\n        // remove cell border\n        $cell.classList.remove('dt-cell--focus');\n        this.$focusedCell = null;\n\n        // reset header background\n        if (this.lastHeaders) {\n            this.lastHeaders.forEach(header => header && header.classList.remove('dt-cell--highlight'));\n        }\n    }\n\n    highlightRowColumnHeader($cell) {\n        const {\n            colIndex,\n            rowIndex\n        } = $.data($cell);\n\n        const srNoColIndex = this.datamanager.getColumnIndexById('_rowIndex');\n        const colHeaderSelector = `.dt-cell--header-${colIndex}`;\n        const rowHeaderSelector = `.dt-cell--${srNoColIndex}-${rowIndex}`;\n\n        if (this.lastHeaders) {\n            this.lastHeaders.forEach(header => header && header.classList.remove('dt-cell--highlight'));\n        }\n\n        const colHeader = $(colHeaderSelector, this.wrapper);\n        const rowHeader = $(rowHeaderSelector, this.wrapper);\n\n        this.lastHeaders = [colHeader, rowHeader];\n        this.lastHeaders.forEach(header => header && header.classList.add('dt-cell--highlight'));\n    }\n\n    selectAreaOnClusterChanged() {\n        if (!(this.$focusedCell && this.$selectionCursor)) return;\n        const {\n            colIndex,\n            rowIndex\n        } = $.data(this.$selectionCursor);\n        const $cell = this.getCell$(colIndex, rowIndex);\n\n        if (!$cell || $cell === this.$selectionCursor) return;\n\n        // selectArea needs $focusedCell\n        const fCell = $.data(this.$focusedCell);\n        this.$focusedCell = this.getCell$(fCell.colIndex, fCell.rowIndex);\n\n        this.selectArea($cell);\n    }\n\n    focusCellOnClusterChanged() {\n        if (!this.$focusedCell) return;\n\n        const {\n            colIndex,\n            rowIndex\n        } = $.data(this.$focusedCell);\n        const $cell = this.getCell$(colIndex, rowIndex);\n\n        if (!$cell) return;\n        // this function is called after hyperlist renders the rows after scroll,\n        // focusCell calls clearSelection which resets the area selection\n        // so a flag to skip it\n        // we also skip DOM focus and scroll to cell\n        // because it fights with the user scroll\n        this.focusCell($cell, {\n            skipClearSelection: 1,\n            skipDOMFocus: 1,\n            skipScrollToCell: 1\n        });\n    }\n\n    selectArea($selectionCursor) {\n        if (!this.$focusedCell) return;\n\n        if (this._selectArea(this.$focusedCell, $selectionCursor)) {\n            // valid selection\n            this.$selectionCursor = $selectionCursor;\n        }\n    }\n\n    _selectArea($cell1, $cell2) {\n        if ($cell1 === $cell2) return false;\n\n        const cells = this.getCellsInRange($cell1, $cell2);\n        if (!cells) return false;\n\n        this.clearSelection();\n        this._selectedCells = cells.map(index => this.getCell$(...index));\n        requestAnimationFrame(() => {\n            this._selectedCells.map($cell => $cell.classList.add('dt-cell--highlight'));\n        });\n        return true;\n    }\n\n    getCellsInRange($cell1, $cell2) {\n        let colIndex1, rowIndex1, colIndex2, rowIndex2;\n\n        if (typeof $cell1 === 'number') {\n            [colIndex1, rowIndex1, colIndex2, rowIndex2] = arguments;\n        } else\n        if (typeof $cell1 === 'object') {\n            if (!($cell1 && $cell2)) {\n                return false;\n            }\n\n            const cell1 = $.data($cell1);\n            const cell2 = $.data($cell2);\n\n            colIndex1 = +cell1.colIndex;\n            rowIndex1 = +cell1.rowIndex;\n            colIndex2 = +cell2.colIndex;\n            rowIndex2 = +cell2.rowIndex;\n        }\n\n        if (rowIndex1 > rowIndex2) {\n            [rowIndex1, rowIndex2] = [rowIndex2, rowIndex1];\n        }\n\n        if (colIndex1 > colIndex2) {\n            [colIndex1, colIndex2] = [colIndex2, colIndex1];\n        }\n\n        if (this.isStandardCell(colIndex1) || this.isStandardCell(colIndex2)) {\n            return false;\n        }\n\n        const cells = [];\n        let colIndex = colIndex1;\n        let rowIndex = rowIndex1;\n        const rowIndices = [];\n\n        while (rowIndex <= rowIndex2) {\n            rowIndices.push(rowIndex);\n            rowIndex += 1;\n        }\n\n        rowIndices.map((rowIndex) => {\n            while (colIndex <= colIndex2) {\n                cells.push([colIndex, rowIndex]);\n                colIndex++;\n            }\n            colIndex = colIndex1;\n        });\n\n        return cells;\n    }\n\n    clearSelection() {\n        (this._selectedCells || [])\n            .forEach($cell => $cell.classList.remove('dt-cell--highlight'));\n\n        this._selectedCells = [];\n        this.$selectionCursor = null;\n    }\n\n    getSelectionCursor() {\n        return this.$selectionCursor || this.$focusedCell;\n    }\n\n    activateEditing($cell) {\n        this.focusCell($cell);\n        const {\n            rowIndex,\n            colIndex\n        } = $.data($cell);\n\n        const col = this.columnmanager.getColumn(colIndex);\n        if (col && (col.editable === false || col.focusable === false)) {\n            return;\n        }\n\n        const cell = this.getCell(colIndex, rowIndex);\n        if (cell && cell.editable === false) {\n            return;\n        }\n\n        if (this.$editingCell) {\n            const {\n                _rowIndex,\n                _colIndex\n            } = $.data(this.$editingCell);\n\n            if (rowIndex === _rowIndex && colIndex === _colIndex) {\n                // editing the same cell\n                return;\n            }\n        }\n\n        this.$editingCell = $cell;\n        $cell.classList.add('dt-cell--editing');\n\n        const $editCell = $('.dt-cell__edit', $cell);\n        $editCell.innerHTML = '';\n\n        const editor = this.getEditor(colIndex, rowIndex, cell.content, $editCell);\n\n        if (editor) {\n            this.currentCellEditor = editor;\n            // initialize editing input with cell value\n            editor.initValue(cell.content, rowIndex, col);\n        }\n    }\n\n    deactivateEditing(submitValue = true) {\n        if (submitValue) {\n            this.submitEditing();\n        }\n        // keep focus on the cell so that keyboard navigation works\n        if (this.$focusedCell) this.$focusedCell.focus();\n\n        if (!this.$editingCell) return;\n        this.$editingCell.classList.remove('dt-cell--editing');\n        this.$editingCell = null;\n    }\n\n    getEditor(colIndex, rowIndex, value, parent) {\n        const column = this.datamanager.getColumn(colIndex);\n        const row = this.datamanager.getRow(rowIndex);\n        const data = this.datamanager.getData(rowIndex);\n        let editor = this.options.getEditor ?\n            this.options.getEditor(colIndex, rowIndex, value, parent, column, row, data) :\n            this.getDefaultEditor(parent);\n\n        if (editor === false) {\n            // explicitly returned false\n            return false;\n        }\n        if (editor === undefined) {\n            // didn't return editor, fallback to default\n            editor = this.getDefaultEditor(parent);\n        }\n\n        return editor;\n    }\n\n    getDefaultEditor(parent) {\n        const $input = $.create('input', {\n            class: 'dt-input',\n            type: 'text',\n            inside: parent\n        });\n\n        return {\n            initValue(value) {\n                $input.focus();\n                $input.value = value;\n            },\n            getValue() {\n                return $input.value;\n            },\n            setValue(value) {\n                $input.value = value;\n            }\n        };\n    }\n\n    submitEditing() {\n        let promise = Promise.resolve();\n        if (!this.$editingCell) return promise;\n\n        const $cell = this.$editingCell;\n        const {\n            rowIndex,\n            colIndex\n        } = $.data($cell);\n        const col = this.datamanager.getColumn(colIndex);\n\n        if ($cell) {\n            const editor = this.currentCellEditor;\n\n            if (editor) {\n                let valuePromise = editor.getValue();\n\n                // convert to stubbed Promise\n                if (!valuePromise.then) {\n                    valuePromise = Promise.resolve(valuePromise);\n                }\n\n                promise = valuePromise.then((value) => {\n                    const done = editor.setValue(value, rowIndex, col);\n                    const oldValue = this.getCell(colIndex, rowIndex).content;\n\n                    // update cell immediately\n                    this.updateCell(colIndex, rowIndex, value);\n                    $cell.focus();\n\n                    if (done && done.then) {\n                        // revert to oldValue if promise fails\n                        done.catch((e) => {\n                            console.log(e);\n                            this.updateCell(colIndex, rowIndex, oldValue);\n                        });\n                    }\n                    return done;\n                });\n            }\n        }\n\n        this.currentCellEditor = null;\n        return promise;\n    }\n\n    copyCellContents($cell1, $cell2) {\n        if (!$cell2 && $cell1) {\n            // copy only focusedCell\n            const {\n                colIndex,\n                rowIndex\n            } = $.data($cell1);\n            const cell = this.getCell(colIndex, rowIndex);\n            copyTextToClipboard(cell.content);\n            return 1;\n        }\n        const cells = this.getCellsInRange($cell1, $cell2);\n\n        if (!cells) return 0;\n\n        const rows = cells\n            // get cell objects\n            .map(index => this.getCell(...index))\n            // convert to array of rows\n            .reduce((acc, curr) => {\n                const rowIndex = curr.rowIndex;\n\n                acc[rowIndex] = acc[rowIndex] || [];\n                acc[rowIndex].push(curr.content);\n\n                return acc;\n            }, []);\n\n        const values = rows\n            // join values by tab\n            .map(row => row.join('\\t'))\n            // join rows by newline\n            .join('\\n');\n\n        copyTextToClipboard(values);\n\n        // return no of cells copied\n        return rows.reduce((total, row) => total + row.length, 0);\n    }\n\n    pasteContentInCell(data) {\n        if (!this.$focusedCell) return;\n\n        const matrix = data\n            .split('\\n')\n            .map(row => row.split('\\t'))\n            .filter(row => row.length && row.every(it => it));\n\n        let { colIndex, rowIndex } = $.data(this.$focusedCell);\n\n        let focusedCell = {\n            colIndex: +colIndex,\n            rowIndex: +rowIndex\n        };\n\n        matrix.forEach((row, i) => {\n            let rowIndex = i + focusedCell.rowIndex;\n            row.forEach((cell, j) => {\n                let colIndex = j + focusedCell.colIndex;\n                this.updateCell(colIndex, rowIndex, cell);\n            });\n        });\n    }\n\n    activateFilter(colIndex) {\n        this.columnmanager.toggleFilter();\n        this.columnmanager.focusFilter(colIndex);\n\n        if (!this.columnmanager.isFilterShown) {\n            // put focus back on cell\n            this.$focusedCell && this.$focusedCell.focus();\n        }\n    }\n\n    updateCell(colIndex, rowIndex, value) {\n        const cell = this.datamanager.updateCell(colIndex, rowIndex, {\n            content: value\n        });\n        this.refreshCell(cell);\n    }\n\n    refreshCell(cell) {\n        const $cell = $(this.selector(cell.colIndex, cell.rowIndex), this.bodyScrollable);\n        $cell.innerHTML = this.getCellContent(cell);\n    }\n\n    toggleTreeButton(rowIndex, flag) {\n        const colIndex = this.columnmanager.getFirstColumnIndex();\n        const $cell = this.getCell$(colIndex, rowIndex);\n        if ($cell) {\n            $cell.classList[flag ? 'remove' : 'add']('dt-cell--tree-close');\n        }\n    }\n\n    isStandardCell(colIndex) {\n        // Standard cells are in Sr. No and Checkbox column\n        return colIndex < this.columnmanager.getFirstColumnIndex();\n    }\n\n    focusCellInDirection(direction) {\n        if (!this.$focusedCell) {\n            return false;\n        } else if (this.$editingCell && ['tab', 'shift+tab'].includes(direction)) {\n            this.deactivateEditing();\n        }\n\n        let $cell = this.$focusedCell;\n\n        if (direction === 'left' || direction === 'shift+tab') {\n            $cell = this.getLeftCell$($cell);\n        } else if (direction === 'right' || direction === 'tab') {\n            $cell = this.getRightCell$($cell);\n        } else if (direction === 'up') {\n            $cell = this.getAboveCell$($cell);\n        } else if (direction === 'down') {\n            $cell = this.getBelowCell$($cell);\n        }\n\n        if (!$cell) {\n            return false;\n        }\n\n        const {\n            colIndex\n        } = $.data($cell);\n        const column = this.columnmanager.getColumn(colIndex);\n\n        if (!column.focusable) {\n            let $prevFocusedCell = this.$focusedCell;\n            this.unfocusCell($prevFocusedCell);\n            this.$focusedCell = $cell;\n            let ret = this.focusCellInDirection(direction);\n            if (!ret) {\n                this.focusCell($prevFocusedCell);\n            }\n            return ret;\n        }\n\n        this.focusCell($cell);\n        return true;\n    }\n\n    getCell$(colIndex, rowIndex) {\n        return $(this.selector(colIndex, rowIndex), this.bodyScrollable);\n    }\n\n    getAboveCell$($cell) {\n        const {\n            colIndex\n        } = $.data($cell);\n\n        let $aboveRow = $cell.parentElement.previousElementSibling;\n        while ($aboveRow && $aboveRow.classList.contains('dt-row--hide')) {\n            $aboveRow = $aboveRow.previousElementSibling;\n        }\n\n        if (!$aboveRow) return $cell;\n        return $(`.dt-cell--col-${colIndex}`, $aboveRow);\n    }\n\n    getBelowCell$($cell) {\n        const {\n            colIndex\n        } = $.data($cell);\n\n        let $belowRow = $cell.parentElement.nextElementSibling;\n        while ($belowRow && $belowRow.classList.contains('dt-row--hide')) {\n            $belowRow = $belowRow.nextElementSibling;\n        }\n\n        if (!$belowRow) return $cell;\n        return $(`.dt-cell--col-${colIndex}`, $belowRow);\n    }\n\n    getLeftCell$($cell) {\n        return $cell.previousElementSibling;\n    }\n\n    getRightCell$($cell) {\n        return $cell.nextElementSibling;\n    }\n\n    getLeftMostCell$(rowIndex) {\n        return this.getCell$(this.columnmanager.getFirstColumnIndex(), rowIndex);\n    }\n\n    getRightMostCell$(rowIndex) {\n        return this.getCell$(this.columnmanager.getLastColumnIndex(), rowIndex);\n    }\n\n    getTopMostCell$(colIndex) {\n        return this.getCell$(colIndex, this.rowmanager.getFirstRowIndex());\n    }\n\n    getBottomMostCell$(colIndex) {\n        return this.getCell$(colIndex, this.rowmanager.getLastRowIndex());\n    }\n\n    getCell(colIndex, rowIndex) {\n        return this.instance.datamanager.getCell(colIndex, rowIndex);\n    }\n\n    getRowHeight() {\n        return $.style($('.dt-row', this.bodyScrollable), 'height');\n    }\n\n    scrollToCell($cell) {\n        if ($.inViewport($cell, this.bodyScrollable)) return false;\n\n        const {\n            rowIndex\n        } = $.data($cell);\n        this.rowmanager.scrollToRow(rowIndex);\n        return false;\n    }\n\n    getRowCountPerPage() {\n        return Math.ceil(this.instance.getViewportHeight() / this.getRowHeight());\n    }\n\n    getCellHTML(cell) {\n        const {\n            rowIndex,\n            colIndex,\n            isHeader,\n            isFilter,\n            isTotalRow\n        } = cell;\n        const dataAttr = makeDataAttributeString({\n            rowIndex,\n            colIndex,\n            isHeader,\n            isFilter,\n            isTotalRow\n        });\n\n        const row = this.datamanager.getRow(rowIndex);\n\n        const isBodyCell = !(isHeader || isFilter || isTotalRow);\n\n        const className = [\n            'dt-cell',\n            'dt-cell--col-' + colIndex,\n            isBodyCell ? `dt-cell--${colIndex}-${rowIndex}` : '',\n            isBodyCell ? 'dt-cell--row-' + rowIndex : '',\n            isHeader ? 'dt-cell--header' : '',\n            isHeader ? `dt-cell--header-${colIndex}` : '',\n            isFilter ? 'dt-cell--filter' : '',\n            isBodyCell && (row && row.meta.isTreeNodeClose) ? 'dt-cell--tree-close' : ''\n        ].join(' ');\n\n        return `\n            <div class=\"${className}\" ${dataAttr} tabindex=\"0\">\n                ${this.getCellContent(cell)}\n            </div>\n        `;\n    }\n\n    getCellContent(cell) {\n        const {\n            isHeader,\n            isFilter,\n            colIndex\n        } = cell;\n\n        const editable = !isHeader && cell.editable !== false;\n        const editCellHTML = editable ? this.getEditCellHTML(colIndex) : '';\n\n        const sortable = isHeader && cell.sortable !== false;\n        const sortIndicator = sortable ?\n            `<span class=\"sort-indicator\">\n                ${this.options.sortIndicator[cell.sortOrder]}\n            </span>` :\n            '';\n\n        const resizable = isHeader && cell.resizable !== false;\n        const resizeColumn = resizable ? '<span class=\"dt-cell__resize-handle\"></span>' : '';\n\n        const hasDropdown = isHeader && cell.dropdown !== false;\n        const dropdown = hasDropdown ? this.columnmanager.getDropdownHTML() : '';\n\n        const customFormatter = cell.format || (cell.column && cell.column.format) || null;\n\n        let contentHTML;\n        if (isHeader || isFilter || !customFormatter) {\n            contentHTML = cell.content;\n        } else {\n            const row = this.datamanager.getRow(cell.rowIndex);\n            const data = this.datamanager.getData(cell.rowIndex);\n            contentHTML = customFormatter(cell.content, row, cell.column, data);\n        }\n\n        cell.html = contentHTML;\n\n        if (this.options.treeView && !(isHeader || isFilter) && cell.indent !== undefined) {\n            const nextRow = this.datamanager.getRow(cell.rowIndex + 1);\n            const addToggle = nextRow && nextRow.meta.indent > cell.indent;\n            const leftPadding = 20;\n            const unit = 'px';\n\n            // Add toggle and indent in the first column\n            const firstColumnIndex = this.datamanager.getColumnIndexById('_rowIndex') + 1;\n            if (firstColumnIndex === cell.colIndex) {\n                const padding = ((cell.indent || 0)) * leftPadding;\n                const toggleHTML = addToggle ?\n                    `<span class=\"dt-tree-node__toggle\" style=\"left: ${padding - leftPadding}${unit}\">\n                        <span class=\"icon-open\">${icons.chevronDown}</span>\n                        <span class=\"icon-close\">${icons.chevronRight}</span>\n                    </span>` : '';\n                contentHTML = `<span class=\"dt-tree-node\" style=\"padding-left: ${padding}${unit}\">\n                    ${toggleHTML}\n                    <span>${contentHTML}</span>\n                </span>`;\n            }\n        }\n\n        const className = [\n            'dt-cell__content',\n            isHeader ? `dt-cell__content--header-${colIndex}` : `dt-cell__content--col-${colIndex}`\n        ].join(' ');\n\n        return `\n            <div class=\"${className}\">\n                ${contentHTML}\n                ${sortIndicator}\n                ${resizeColumn}\n                ${dropdown}\n            </div>\n            ${editCellHTML}\n        `;\n    }\n\n    getEditCellHTML(colIndex) {\n        return `<div class=\"dt-cell__edit dt-cell__edit--col-${colIndex}\"></div>`;\n    }\n\n    selector(colIndex, rowIndex) {\n        return `.dt-cell--${colIndex}-${rowIndex}`;\n    }\n}\n\nclass ColumnManager {\n    constructor(instance) {\n        this.instance = instance;\n\n        linkProperties(this, this.instance, [\n            'options',\n            'fireEvent',\n            'header',\n            'datamanager',\n            'cellmanager',\n            'style',\n            'wrapper',\n            'rowmanager',\n            'bodyScrollable',\n            'bodyRenderer'\n        ]);\n\n        this.bindEvents();\n    }\n\n    renderHeader() {\n        this.header.innerHTML = '<div></div>';\n        this.refreshHeader();\n    }\n\n    refreshHeader() {\n        const columns = this.datamanager.getColumns();\n\n        // refresh html\n        $('div', this.header).innerHTML = this.getHeaderHTML(columns);\n\n        this.$filterRow = $('.dt-row-filter', this.header);\n        if (this.$filterRow) {\n            $.style(this.$filterRow, { display: 'none' });\n        }\n        // reset columnMap\n        this.$columnMap = [];\n        this.bindMoveColumn();\n    }\n\n    getHeaderHTML(columns) {\n        let html = this.rowmanager.getRowHTML(columns, {\n            isHeader: 1\n        });\n        if (this.options.inlineFilters) {\n            html += this.rowmanager.getRowHTML(columns, {\n                isFilter: 1\n            });\n        }\n        return html;\n    }\n\n    bindEvents() {\n        this.bindDropdown();\n        this.bindResizeColumn();\n        this.bindPerfectColumnWidth();\n        this.bindFilter();\n    }\n\n    bindDropdown() {\n        let toggleClass = '.dt-dropdown__toggle';\n        let dropdownClass = '.dt-dropdown__list';\n\n        // attach the dropdown list to container\n        this.instance.dropdownContainer.innerHTML = this.getDropdownListHTML();\n        this.$dropdownList = this.instance.dropdownContainer.firstElementChild;\n\n        $.on(this.header, 'click', toggleClass, e => {\n            this.openDropdown(e);\n        });\n\n        const deactivateDropdownOnBodyClick = (e) => {\n            const selector = [\n                toggleClass, toggleClass + ' *',\n                dropdownClass, dropdownClass + ' *'\n            ].join(',');\n            if (e.target.matches(selector)) return;\n            deactivateDropdown();\n        };\n        $.on(document.body, 'click', deactivateDropdownOnBodyClick);\n        document.addEventListener('scroll', deactivateDropdown, true);\n\n        this.instance.on('onDestroy', () => {\n            $.off(document.body, 'click', deactivateDropdownOnBodyClick);\n            $.off(document, 'scroll', deactivateDropdown);\n        });\n\n        $.on(this.$dropdownList, 'click', '.dt-dropdown__list-item', (e, $item) => {\n            if (!this._dropdownActiveColIndex) return;\n            const dropdownItems = this.options.headerDropdown;\n            const { index } = $.data($item);\n            const colIndex = this._dropdownActiveColIndex;\n            let callback = dropdownItems[index].action;\n\n            callback && callback.call(this.instance, this.getColumn(colIndex));\n            this.hideDropdown();\n        });\n\n        const _this = this;\n        function deactivateDropdown(e) {\n            _this.hideDropdown();\n        }\n\n        this.hideDropdown();\n    }\n\n    openDropdown(e) {\n        if (!this._dropdownWidth) {\n            $.style(this.$dropdownList, { display: '' });\n            this._dropdownWidth = $.style(this.$dropdownList, 'width');\n        }\n        $.style(this.$dropdownList, {\n            display: '',\n            left: (e.clientX - this._dropdownWidth + 4) + 'px',\n            top: (e.clientY + 4) + 'px'\n        });\n        const $cell = $.closest('.dt-cell', e.target);\n        const { colIndex } = $.data($cell);\n        this._dropdownActiveColIndex = colIndex;\n    }\n\n    hideDropdown() {\n        $.style(this.$dropdownList, {\n            display: 'none'\n        });\n        this._dropdownActiveColIndex = null;\n    }\n\n    bindResizeColumn() {\n        let isDragging = false;\n        let $resizingCell, startWidth, startX;\n\n        $.on(this.header, 'mousedown', '.dt-cell .dt-cell__resize-handle', (e, $handle) => {\n            document.body.classList.add('dt-resize');\n            const $cell = $handle.parentNode.parentNode;\n            $resizingCell = $cell;\n            const {\n                colIndex\n            } = $.data($resizingCell);\n            const col = this.getColumn(colIndex);\n\n            if (col && col.resizable === false) {\n                return;\n            }\n\n            isDragging = true;\n            startWidth = $.style($('.dt-cell__content', $resizingCell), 'width');\n            startX = e.pageX;\n        });\n\n        const onMouseup = (e) => {\n            document.body.classList.remove('dt-resize');\n            if (!$resizingCell) return;\n            isDragging = false;\n\n            const {\n                colIndex\n            } = $.data($resizingCell);\n            this.setColumnWidth(colIndex);\n            this.style.setBodyStyle();\n            $resizingCell = null;\n        };\n        $.on(document.body, 'mouseup', onMouseup);\n        this.instance.on('onDestroy', () => {\n            $.off(document.body, 'mouseup', onMouseup);\n        });\n\n        const onMouseMove = (e) => {\n            if (!isDragging) return;\n            let delta = e.pageX - startX;\n            if (this.options.direction === 'rtl') {\n                delta = -1 * delta;\n            }\n            const finalWidth = startWidth + delta;\n            const {\n                colIndex\n            } = $.data($resizingCell);\n\n            let columnMinWidth = this.options.minimumColumnWidth;\n            if (columnMinWidth > finalWidth) {\n                // don't resize past 30 pixels\n                return;\n            }\n            this.datamanager.updateColumn(colIndex, {\n                width: finalWidth\n            });\n            this.setColumnHeaderWidth(colIndex);\n        };\n        $.on(document.body, 'mousemove', onMouseMove);\n        this.instance.on('onDestroy', () => {\n            $.off(document.body, 'mousemove', onMouseMove);\n        });\n    }\n\n    bindPerfectColumnWidth() {\n        $.on(this.header, 'dblclick', '.dt-cell .dt-cell__resize-handle', (e, $handle) => {\n            const $cell = $handle.parentNode.parentNode;\n            const { colIndex } = $.data($cell);\n\n            let longestCell = this.bodyRenderer.visibleRows\n                .map(d => d[colIndex])\n                .reduce((acc, curr) => acc.content.length > curr.content.length ? acc : curr);\n\n            let $longestCellHTML = this.cellmanager.getCellHTML(longestCell);\n            let $div = document.createElement('div');\n            $div.innerHTML = $longestCellHTML;\n            let cellText = $div.querySelector('.dt-cell__content').textContent;\n\n            let {\n                borderLeftWidth,\n                borderRightWidth,\n                paddingLeft,\n                paddingRight\n            } = $.getStyle(this.bodyScrollable.querySelector('.dt-cell__content'));\n\n            let padding = [borderLeftWidth, borderRightWidth, paddingLeft, paddingRight]\n                .map(parseFloat)\n                .reduce((sum, val) => sum + val);\n\n            let width = $.measureTextWidth(cellText) + padding;\n            this.datamanager.updateColumn(colIndex, { width });\n            this.setColumnHeaderWidth(colIndex);\n            this.setColumnWidth(colIndex);\n        });\n    }\n\n    bindMoveColumn() {\n        if (this.options.disableReorderColumn) return;\n\n        const $parent = $('.dt-row', this.header);\n\n        this.sortable = Sortable.create($parent, {\n            onEnd: (e) => {\n                const {\n                    oldIndex,\n                    newIndex\n                } = e;\n                const $draggedCell = e.item;\n                const {\n                    colIndex\n                } = $.data($draggedCell);\n                if (+colIndex === newIndex) return;\n\n                this.switchColumn(oldIndex, newIndex);\n            },\n            preventOnFilter: false,\n            filter: '.dt-cell__resize-handle, .dt-dropdown',\n            chosenClass: 'dt-cell--dragging',\n            animation: 150\n        });\n    }\n\n    sortColumn(colIndex, nextSortOrder) {\n        this.instance.freeze();\n        this.sortRows(colIndex, nextSortOrder)\n            .then(() => {\n                this.refreshHeader();\n                return this.rowmanager.refreshRows();\n            })\n            .then(() => this.instance.unfreeze())\n            .then(() => {\n                this.fireEvent('onSortColumn', this.getColumn(colIndex));\n            });\n    }\n\n    removeColumn(colIndex) {\n        const removedCol = this.getColumn(colIndex);\n        this.instance.freeze();\n        this.datamanager.removeColumn(colIndex)\n            .then(() => {\n                this.refreshHeader();\n                return this.rowmanager.refreshRows();\n            })\n            .then(() => this.instance.unfreeze())\n            .then(() => {\n                this.fireEvent('onRemoveColumn', removedCol);\n            });\n    }\n\n    switchColumn(oldIndex, newIndex) {\n        this.instance.freeze();\n        this.datamanager.switchColumn(oldIndex, newIndex)\n            .then(() => {\n                this.refreshHeader();\n                return this.rowmanager.refreshRows();\n            })\n            .then(() => {\n                this.setColumnWidth(oldIndex);\n                this.setColumnWidth(newIndex);\n                this.instance.unfreeze();\n            })\n            .then(() => {\n                this.fireEvent('onSwitchColumn',\n                    this.getColumn(oldIndex), this.getColumn(newIndex)\n                );\n            });\n    }\n\n    toggleFilter(flag) {\n        if (!this.options.inlineFilters) return;\n\n        let showFilter;\n        if (flag === undefined) {\n            showFilter = !this.isFilterShown;\n        } else {\n            showFilter = flag;\n        }\n\n        if (showFilter) {\n            $.style(this.$filterRow, { display: '' });\n        } else {\n            $.style(this.$filterRow, { display: 'none' });\n        }\n\n        this.isFilterShown = showFilter;\n        this.style.setBodyStyle();\n    }\n\n    focusFilter(colIndex) {\n        if (!this.isFilterShown) return;\n\n        const $filterInput = $(`.dt-cell--col-${colIndex} .dt-filter`, this.$filterRow);\n        $filterInput.focus();\n    }\n\n    bindFilter() {\n        if (!this.options.inlineFilters) return;\n        const handler = e => {\n            this.applyFilter(this.getAppliedFilters());\n        };\n        $.on(this.header, 'keydown', '.dt-filter', debounce$1(handler, 300));\n    }\n\n    applyFilter(filters) {\n        this.datamanager.filterRows(filters)\n            .then(({\n                rowsToShow\n            }) => {\n                this.rowmanager.showRows(rowsToShow);\n            });\n    }\n\n    getAppliedFilters() {\n        const filters = {};\n        $.each('.dt-filter', this.header).map((input) => {\n            const value = input.value;\n            if (value) {\n                filters[input.dataset.colIndex] = value;\n            }\n        });\n        return filters;\n    }\n\n    applyDefaultSortOrder() {\n        // sort rows if any 1 column has a default sortOrder set\n        const columnsToSort = this.getColumns().filter(col => col.sortOrder !== 'none');\n\n        if (columnsToSort.length === 1) {\n            const column = columnsToSort[0];\n            this.sortColumn(column.colIndex, column.sortOrder);\n        }\n    }\n\n    sortRows(colIndex, sortOrder) {\n        return this.datamanager.sortRows(colIndex, sortOrder);\n    }\n\n    getColumn(colIndex) {\n        return this.datamanager.getColumn(colIndex);\n    }\n\n    getColumns() {\n        return this.datamanager.getColumns();\n    }\n\n    setColumnWidth(colIndex, width) {\n        colIndex = +colIndex;\n\n        let columnWidth = width || this.getColumn(colIndex).width;\n\n        const selector = [\n            `.dt-cell__content--col-${colIndex}`,\n            `.dt-cell__edit--col-${colIndex}`\n        ].join(', ');\n\n        const styles = {\n            width: columnWidth + 'px'\n        };\n\n        this.style.setStyle(selector, styles);\n    }\n\n    setColumnHeaderWidth(colIndex) {\n        colIndex = +colIndex;\n        this.$columnMap = this.$columnMap || [];\n        const selector = `.dt-cell__content--header-${colIndex}`;\n        const {\n            width\n        } = this.getColumn(colIndex);\n\n        let $column = this.$columnMap[colIndex];\n        if (!$column) {\n            $column = this.header.querySelector(selector);\n            this.$columnMap[colIndex] = $column;\n        }\n\n        $column.style.width = width + 'px';\n    }\n\n    getColumnMinWidth(colIndex) {\n        colIndex = +colIndex;\n        return this.getColumn(colIndex).minWidth || 24;\n    }\n\n    getFirstColumnIndex() {\n        return this.datamanager.getColumnIndexById('_rowIndex') + 1;\n    }\n\n    getHeaderCell$(colIndex) {\n        return $(`.dt-cell--header-${colIndex}`, this.header);\n    }\n\n    getLastColumnIndex() {\n        return this.datamanager.getColumnCount() - 1;\n    }\n\n    getDropdownHTML() {\n        const { dropdownButton } = this.options;\n\n        return `\n            <div class=\"dt-dropdown\">\n                <div class=\"dt-dropdown__toggle\">${dropdownButton}</div>\n            </div>\n      `;\n    }\n\n    getDropdownListHTML() {\n        const { headerDropdown: dropdownItems } = this.options;\n\n        return `\n            <div class=\"dt-dropdown__list\">\n            ${dropdownItems.map((d, i) => `\n                <div class=\"dt-dropdown__list-item\" data-index=\"${i}\">${d.label}</div>\n            `).join('')}\n            </div>\n        `;\n    }\n}\n\nclass RowManager {\n    constructor(instance) {\n        this.instance = instance;\n        linkProperties(this, this.instance, [\n            'options',\n            'fireEvent',\n            'wrapper',\n            'bodyScrollable',\n            'bodyRenderer',\n            'style'\n        ]);\n\n        this.bindEvents();\n        this.refreshRows = nextTick(this.refreshRows, this);\n    }\n\n    get datamanager() {\n        return this.instance.datamanager;\n    }\n\n    get cellmanager() {\n        return this.instance.cellmanager;\n    }\n\n    bindEvents() {\n        this.bindCheckbox();\n    }\n\n    bindCheckbox() {\n        if (!this.options.checkboxColumn) return;\n\n        // map of checked rows\n        this.checkMap = [];\n\n        $.on(this.wrapper, 'click', '.dt-cell--col-0 [type=\"checkbox\"]', (e, $checkbox) => {\n            const $cell = $checkbox.closest('.dt-cell');\n            const {\n                rowIndex,\n                isHeader\n            } = $.data($cell);\n            const checked = $checkbox.checked;\n\n            if (isHeader) {\n                this.checkAll(checked);\n            } else {\n                this.checkRow(rowIndex, checked);\n            }\n        });\n    }\n\n    refreshRows() {\n        this.instance.renderBody();\n        this.instance.setDimensions();\n    }\n\n    refreshRow(row, rowIndex) {\n        const _row = this.datamanager.updateRow(row, rowIndex);\n\n        _row.forEach(cell => {\n            this.cellmanager.refreshCell(cell);\n        });\n    }\n\n    getCheckedRows() {\n        if (!this.checkMap) {\n            return [];\n        }\n\n        let out = [];\n        for (let rowIndex in this.checkMap) {\n            const checked = this.checkMap[rowIndex];\n            if (checked === 1) {\n                out.push(rowIndex);\n            }\n        }\n\n        return out;\n    }\n\n    highlightCheckedRows() {\n        this.getCheckedRows()\n            .map(rowIndex => this.checkRow(rowIndex, true));\n    }\n\n    checkRow(rowIndex, toggle) {\n        const value = toggle ? 1 : 0;\n        const selector = rowIndex => `.dt-cell--0-${rowIndex} [type=\"checkbox\"]`;\n        // update internal map\n        this.checkMap[rowIndex] = value;\n        // set checkbox value explicitly\n        $.each(selector(rowIndex), this.bodyScrollable)\n            .map(input => {\n                input.checked = toggle;\n            });\n        // highlight row\n        this.highlightRow(rowIndex, toggle);\n        this.showCheckStatus();\n        this.fireEvent('onCheckRow', this.datamanager.getRow(rowIndex));\n    }\n\n    checkAll(toggle) {\n        const value = toggle ? 1 : 0;\n\n        // update internal map\n        if (toggle) {\n            this.checkMap = Array.from(Array(this.getTotalRows())).map(c => value);\n        } else {\n            this.checkMap = [];\n        }\n        // set checkbox value\n        $.each('.dt-cell--col-0 [type=\"checkbox\"]', this.bodyScrollable)\n            .map(input => {\n                input.checked = toggle;\n            });\n        // highlight all\n        this.highlightAll(toggle);\n        this.showCheckStatus();\n        this.fireEvent('onCheckRow');\n    }\n\n    showCheckStatus() {\n        if (!this.options.checkedRowStatus) return;\n        const checkedRows = this.getCheckedRows();\n        const count = checkedRows.length;\n        if (count > 0) {\n            let message = this.instance.translate('{count} rows selected', {\n                count: count\n            });\n            this.bodyRenderer.showToastMessage(message);\n        } else {\n            this.bodyRenderer.clearToastMessage();\n        }\n    }\n\n    highlightRow(rowIndex, toggle = true) {\n        const $row = this.getRow$(rowIndex);\n        if (!$row) return;\n\n        if (!toggle && this.bodyScrollable.classList.contains('dt-scrollable--highlight-all')) {\n            $row.classList.add('dt-row--unhighlight');\n            return;\n        }\n\n        if (toggle && $row.classList.contains('dt-row--unhighlight')) {\n            $row.classList.remove('dt-row--unhighlight');\n        }\n\n        this._highlightedRows = this._highlightedRows || {};\n\n        if (toggle) {\n            $row.classList.add('dt-row--highlight');\n            this._highlightedRows[rowIndex] = $row;\n        } else {\n            $row.classList.remove('dt-row--highlight');\n            delete this._highlightedRows[rowIndex];\n        }\n    }\n\n    highlightAll(toggle = true) {\n        if (toggle) {\n            this.bodyScrollable.classList.add('dt-scrollable--highlight-all');\n        } else {\n            this.bodyScrollable.classList.remove('dt-scrollable--highlight-all');\n            for (const rowIndex in this._highlightedRows) {\n                const $row = this._highlightedRows[rowIndex];\n                $row.classList.remove('dt-row--highlight');\n            }\n            this._highlightedRows = {};\n        }\n    }\n\n    showRows(rowIndices) {\n        rowIndices = ensureArray(rowIndices);\n        const rows = rowIndices.map(rowIndex => this.datamanager.getRow(rowIndex));\n        this.bodyRenderer.renderRows(rows);\n    }\n\n    showAllRows() {\n        const rowIndices = this.datamanager.getAllRowIndices();\n        this.showRows(rowIndices);\n    }\n\n    getChildrenToShowForNode(rowIndex) {\n        const row = this.datamanager.getRow(rowIndex);\n        row.meta.isTreeNodeClose = false;\n\n        return this.datamanager.getImmediateChildren(rowIndex);\n    }\n\n    openSingleNode(rowIndex) {\n        const childrenToShow = this.getChildrenToShowForNode(rowIndex);\n        const visibleRowIndices = this.bodyRenderer.visibleRowIndices;\n        const rowsToShow = uniq$1([...childrenToShow, ...visibleRowIndices]).sort(numberSortAsc);\n\n        this.showRows(rowsToShow);\n    }\n\n    getChildrenToHideForNode(rowIndex) {\n        const row = this.datamanager.getRow(rowIndex);\n        row.meta.isTreeNodeClose = true;\n\n        const rowsToHide = this.datamanager.getChildren(rowIndex);\n        rowsToHide.forEach(rowIndex => {\n            const row = this.datamanager.getRow(rowIndex);\n            if (!row.meta.isLeaf) {\n                row.meta.isTreeNodeClose = true;\n            }\n        });\n\n        return rowsToHide;\n    }\n\n    closeSingleNode(rowIndex) {\n        const rowsToHide = this.getChildrenToHideForNode(rowIndex);\n        const visibleRows = this.bodyRenderer.visibleRowIndices;\n        const rowsToShow = visibleRows\n            .filter(rowIndex => !rowsToHide.includes(rowIndex))\n            .sort(numberSortAsc);\n\n        this.showRows(rowsToShow);\n    }\n\n    expandAllNodes() {\n        let rows = this.datamanager.getRows();\n        let rootNodes = rows.filter(row => !row.meta.isLeaf);\n\n        const childrenToShow = rootNodes.map(row => this.getChildrenToShowForNode(row.meta.rowIndex)).flat();\n        const visibleRowIndices = this.bodyRenderer.visibleRowIndices;\n        const rowsToShow = uniq$1([...childrenToShow, ...visibleRowIndices]).sort(numberSortAsc);\n\n        this.showRows(rowsToShow);\n    }\n\n    collapseAllNodes() {\n        let rows = this.datamanager.getRows();\n        let rootNodes = rows.filter(row => row.meta.indent === 0);\n\n        const rowsToHide = rootNodes.map(row => this.getChildrenToHideForNode(row.meta.rowIndex)).flat();\n        const visibleRows = this.bodyRenderer.visibleRowIndices;\n        const rowsToShow = visibleRows\n            .filter(rowIndex => !rowsToHide.includes(rowIndex))\n            .sort(numberSortAsc);\n\n        this.showRows(rowsToShow);\n    }\n\n    setTreeDepth(depth) {\n        let rows = this.datamanager.getRows();\n\n        const rowsToOpen = rows.filter(row => row.meta.indent < depth);\n        const rowsToClose = rows.filter(row => row.meta.indent >= depth);\n        const rowsToHide = rowsToClose.filter(row => row.meta.indent > depth);\n\n        rowsToClose.forEach(row => {\n            if (!row.meta.isLeaf) {\n                row.meta.isTreeNodeClose = true;\n            }\n        });\n        rowsToOpen.forEach(row => {\n            if (!row.meta.isLeaf) {\n                row.meta.isTreeNodeClose = false;\n            }\n        });\n\n        const rowsToShow = rows\n            .filter(row => !rowsToHide.includes(row))\n            .map(row => row.meta.rowIndex)\n            .sort(numberSortAsc);\n        this.showRows(rowsToShow);\n    }\n\n    getRow$(rowIndex) {\n        return $(this.selector(rowIndex), this.bodyScrollable);\n    }\n\n    getTotalRows() {\n        return this.datamanager.getRowCount();\n    }\n\n    getFirstRowIndex() {\n        return 0;\n    }\n\n    getLastRowIndex() {\n        return this.datamanager.getRowCount() - 1;\n    }\n\n    scrollToRow(rowIndex) {\n        rowIndex = +rowIndex;\n        this._lastScrollTo = this._lastScrollTo || 0;\n        const $row = this.getRow$(rowIndex);\n        if ($.inViewport($row, this.bodyScrollable)) return;\n\n        const {\n            height\n        } = $row.getBoundingClientRect();\n        const {\n            top,\n            bottom\n        } = this.bodyScrollable.getBoundingClientRect();\n        const rowsInView = Math.floor((bottom - top) / height);\n\n        let offset = 0;\n        if (rowIndex > this._lastScrollTo) {\n            offset = height * ((rowIndex + 1) - rowsInView);\n        } else {\n            offset = height * ((rowIndex + 1) - 1);\n        }\n\n        this._lastScrollTo = rowIndex;\n        $.scrollTop(this.bodyScrollable, offset);\n    }\n\n    getRowHTML(row, props) {\n        const dataAttr = makeDataAttributeString(props);\n        let rowIdentifier = props.rowIndex;\n\n        if (props.isFilter) {\n            row = row.map(cell => (Object.assign({}, cell, {\n                content: this.getFilterInput({\n                    colIndex: cell.colIndex\n                }),\n                isFilter: 1,\n                isHeader: undefined,\n                editable: false\n            })));\n\n            rowIdentifier = 'filter';\n        }\n\n        if (props.isHeader) {\n            rowIdentifier = 'header';\n        }\n\n        return `\n            <div class=\"dt-row dt-row-${rowIdentifier}\" ${dataAttr}>\n                ${row.map(cell => this.cellmanager.getCellHTML(cell)).join('')}\n            </div>\n        `;\n    }\n\n    getFilterInput(props) {\n        const dataAttr = makeDataAttributeString(props);\n        return `<input class=\"dt-filter dt-input\" type=\"text\" ${dataAttr} tabindex=\"1\" />`;\n    }\n\n    selector(rowIndex) {\n        return `.dt-row-${rowIndex}`;\n    }\n}\n\nvar hyperlist = createCommonjsModule(function (module, exports) {\n(function(f){{module.exports=f();}})(function(){return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof commonjsRequire==\"function\"&&commonjsRequire;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r);}return n[o].exports}var i=typeof commonjsRequire==\"function\"&&commonjsRequire;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\n// Default configuration.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  width: '100%',\n  height: '100%'\n};\n\n// Check for valid number.\nvar isNumber = function isNumber(input) {\n  return Number(input) === Number(input);\n};\n\n/**\n * Creates a HyperList instance that virtually scrolls very large amounts of\n * data effortlessly.\n */\n\nvar HyperList = function () {\n  _createClass(HyperList, null, [{\n    key: 'create',\n    value: function create(element, userProvidedConfig) {\n      return new HyperList(element, userProvidedConfig);\n    }\n\n    /**\n     * Merge given css style on an element\n     * @param {DOMElement} element\n     * @param {Object} style\n     */\n\n  }, {\n    key: 'mergeStyle',\n    value: function mergeStyle(element, style) {\n      for (var i in style) {\n        if (element.style[i] !== style[i]) {\n          element.style[i] = style[i];\n        }\n      }\n    }\n  }, {\n    key: 'getMaxBrowserHeight',\n    value: function getMaxBrowserHeight() {\n      // Create two elements, the wrapper is `1px` tall and is transparent and\n      // positioned at the top of the page. Inside that is an element that gets\n      // set to 1 billion pixels. Then reads the max height the browser can\n      // calculate.\n      var wrapper = document.createElement('div');\n      var fixture = document.createElement('div');\n\n      // As said above, these values get set to put the fixture elements into the\n      // right visual state.\n      HyperList.mergeStyle(wrapper, { position: 'absolute', height: '1px', opacity: 0 });\n      HyperList.mergeStyle(fixture, { height: '1e7px' });\n\n      // Add the fixture into the wrapper element.\n      wrapper.appendChild(fixture);\n\n      // Apply to the page, the values won't kick in unless this is attached.\n      document.body.appendChild(wrapper);\n\n      // Get the maximum element height in pixels.\n      var maxElementHeight = fixture.offsetHeight;\n\n      // Remove the element immediately after reading the value.\n      document.body.removeChild(wrapper);\n\n      return maxElementHeight;\n    }\n  }]);\n\n  function HyperList(element, userProvidedConfig) {\n    var _this = this;\n\n    _classCallCheck(this, HyperList);\n\n    this._config = {};\n    this._lastRepaint = null;\n    this._maxElementHeight = HyperList.getMaxBrowserHeight();\n\n    this.refresh(element, userProvidedConfig);\n\n    var config = this._config;\n\n    // Create internal render loop.\n    var render = function render() {\n      var scrollTop = _this._getScrollPosition();\n      var lastRepaint = _this._lastRepaint;\n\n      _this._renderAnimationFrame = window.requestAnimationFrame(render);\n\n      if (scrollTop === lastRepaint) {\n        return;\n      }\n\n      if (!lastRepaint || Math.abs(scrollTop - lastRepaint) > _this._averageHeight) {\n        var rendered = _this._renderChunk();\n\n        _this._lastRepaint = scrollTop;\n\n        if (rendered !== false && typeof config.afterRender === 'function') {\n          config.afterRender();\n        }\n      }\n    };\n\n    render();\n  }\n\n  _createClass(HyperList, [{\n    key: 'destroy',\n    value: function destroy() {\n      window.cancelAnimationFrame(this._renderAnimationFrame);\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh(element, userProvidedConfig) {\n      var _this2 = this;\n\n      Object.assign(this._config, defaultConfig, userProvidedConfig);\n\n      if (!element || element.nodeType !== 1) {\n        throw new Error('HyperList requires a valid DOM Node container');\n      }\n\n      this._element = element;\n\n      var config = this._config;\n\n      var scroller = this._scroller || config.scroller || document.createElement(config.scrollerTagName || 'tr');\n\n      // Default configuration option `useFragment` to `true`.\n      if (typeof config.useFragment !== 'boolean') {\n        this._config.useFragment = true;\n      }\n\n      if (!config.generate) {\n        throw new Error('Missing required `generate` function');\n      }\n\n      if (!isNumber(config.total)) {\n        throw new Error('Invalid required `total` value, expected number');\n      }\n\n      if (!Array.isArray(config.itemHeight) && !isNumber(config.itemHeight)) {\n        throw new Error('\\n        Invalid required `itemHeight` value, expected number or array\\n      '.trim());\n      } else if (isNumber(config.itemHeight)) {\n        this._itemHeights = Array(config.total).fill(config.itemHeight);\n      } else {\n        this._itemHeights = config.itemHeight;\n      }\n\n      // Width and height should be coerced to string representations. Either in\n      // `%` or `px`.\n      Object.keys(defaultConfig).filter(function (prop) {\n        return prop in config;\n      }).forEach(function (prop) {\n        var value = config[prop];\n        var isValueNumber = isNumber(value);\n        var isValuePercent = isValueNumber ? false : value.slice(-1) === '%';\n\n        if (value && typeof value !== 'string' && typeof value !== 'number') {\n          var msg = 'Invalid optional `' + prop + '`, expected string or number';\n          throw new Error(msg);\n        } else if (isValueNumber) {\n          config[prop] = value + 'px';\n        }\n\n        if (prop !== 'height') {\n          return;\n        }\n\n        // Compute the containerHeight as number\n        var numberValue = isValueNumber ? value : parseInt(value.replace(/px|%/, ''), 10);\n\n        if (isValuePercent) {\n          _this2._containerHeight = window.innerHeight * numberValue / 100;\n        } else {\n          _this2._containerHeight = isNumber(value) ? value : numberValue;\n        }\n      });\n\n      // Decorate the container element with styles that will match\n      // the user supplied configuration.\n      var elementStyle = {\n        width: '' + config.width,\n        height: '' + config.height,\n        overflow: 'auto',\n        position: 'relative'\n      };\n\n      HyperList.mergeStyle(element, elementStyle);\n\n      var scrollerHeight = config.itemHeight * config.total;\n      var maxElementHeight = this._maxElementHeight;\n\n      if (scrollerHeight > maxElementHeight) {\n        console.warn(['HyperList: The maximum element height', maxElementHeight + 'px has', 'been exceeded; please reduce your item height.'].join(' '));\n      }\n\n      var scrollerStyle = {\n        opacity: '0',\n        position: 'absolute',\n        width: '1px',\n        height: scrollerHeight + 'px'\n      };\n\n      HyperList.mergeStyle(scroller, scrollerStyle);\n\n      // Only append the scroller element once.\n      if (!this._scroller) {\n        element.appendChild(scroller);\n      }\n\n      // Set the scroller instance.\n      this._scroller = scroller;\n      this._scrollHeight = this._computeScrollHeight();\n\n      // Reuse the item positions if refreshed, otherwise set to empty array.\n      this._itemPositions = this._itemPositions || Array(config.total).fill(0);\n\n      // Each index in the array should represent the position in the DOM.\n      this._computePositions(0);\n\n      // Render after refreshing. Force render if we're calling refresh manually.\n      this._renderChunk(this._lastRepaint !== null);\n\n      if (typeof config.afterRender === 'function') {\n        config.afterRender();\n      }\n    }\n  }, {\n    key: '_getRow',\n    value: function _getRow(i) {\n      var config = this._config;\n      var item = config.generate(i);\n      var height = item.height;\n\n      if (height !== undefined && isNumber(height)) {\n        item = item.element;\n\n        // The height isn't the same as predicted, compute positions again\n        if (height !== this._itemHeights) {\n          this._itemHeights[i] = height;\n          this._computePositions(i);\n          this._scrollHeight = this._computeScrollHeight(i);\n        }\n      } else {\n        height = this._itemHeights[i];\n      }\n\n      if (!item || item.nodeType !== 1) {\n        throw new Error('Generator did not return a DOM Node for index: ' + i);\n      }\n\n      var oldClass = item.getAttribute('class') || '';\n      item.setAttribute('class', oldClass + ' ' + (config.rowClassName || 'vrow'));\n\n      var top = this._itemPositions[i];\n\n      HyperList.mergeStyle(item, {\n        position: 'absolute',\n        top: top + 'px'\n      });\n\n      return item;\n    }\n  }, {\n    key: '_getScrollPosition',\n    value: function _getScrollPosition() {\n      var config = this._config;\n\n      if (typeof config.overrideScrollPosition === 'function') {\n        return config.overrideScrollPosition();\n      }\n\n      return this._element.scrollTop;\n    }\n  }, {\n    key: '_renderChunk',\n    value: function _renderChunk(force) {\n      var config = this._config;\n      var element = this._element;\n      var scrollTop = this._getScrollPosition();\n      var total = config.total;\n\n      var from = config.reverse ? this._getReverseFrom(scrollTop) : this._getFrom(scrollTop) - 1;\n\n      if (from < 0 || from - this._screenItemsLen < 0) {\n        from = 0;\n      }\n\n      if (!force && this._lastFrom === from) {\n        return false;\n      }\n\n      this._lastFrom = from;\n\n      var to = from + this._cachedItemsLen;\n\n      if (to > total || to + this._cachedItemsLen > total) {\n        to = total;\n      }\n\n      // Append all the new rows in a document fragment that we will later append\n      // to the parent node\n      var fragment = config.useFragment ? document.createDocumentFragment() : []\n      // Sometimes you'll pass fake elements to this tool and Fragments require\n      // real elements.\n\n\n      // The element that forces the container to scroll.\n      ;var scroller = this._scroller;\n\n      // Keep the scroller in the list of children.\n      fragment[config.useFragment ? 'appendChild' : 'push'](scroller);\n\n      for (var i = from; i < to; i++) {\n        var row = this._getRow(i);\n\n        fragment[config.useFragment ? 'appendChild' : 'push'](row);\n      }\n\n      if (config.applyPatch) {\n        return config.applyPatch(element, fragment);\n      }\n\n      element.innerHTML = '';\n      element.appendChild(fragment);\n    }\n  }, {\n    key: '_computePositions',\n    value: function _computePositions() {\n      var from = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\n      var config = this._config;\n      var total = config.total;\n      var reverse = config.reverse;\n\n      if (from < 1 && !reverse) {\n        from = 1;\n      }\n\n      for (var i = from; i < total; i++) {\n        if (reverse) {\n          if (i === 0) {\n            this._itemPositions[0] = this._scrollHeight - this._itemHeights[0];\n          } else {\n            this._itemPositions[i] = this._itemPositions[i - 1] - this._itemHeights[i];\n          }\n        } else {\n          this._itemPositions[i] = this._itemHeights[i - 1] + this._itemPositions[i - 1];\n        }\n      }\n    }\n  }, {\n    key: '_computeScrollHeight',\n    value: function _computeScrollHeight() {\n      var _this3 = this;\n\n      var config = this._config;\n      var total = config.total;\n      var scrollHeight = this._itemHeights.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      HyperList.mergeStyle(this._scroller, {\n        opacity: 0,\n        position: 'absolute',\n        width: '1px',\n        height: scrollHeight + 'px'\n      });\n\n      // Calculate the height median\n      var sortedItemHeights = this._itemHeights.slice(0).sort(function (a, b) {\n        return a - b;\n      });\n      var middle = Math.floor(total / 2);\n      var averageHeight = total % 2 === 0 ? (sortedItemHeights[middle] + sortedItemHeights[middle - 1]) / 2 : sortedItemHeights[middle];\n\n      var containerHeight = this._element.clientHeight ? this._element.clientHeight : this._containerHeight;\n      this._screenItemsLen = Math.ceil(containerHeight / averageHeight);\n      this._containerHeight = containerHeight;\n\n      // Cache 3 times the number of items that fit in the container viewport.\n      this._cachedItemsLen = Math.max(this._cachedItemsLen || 0, this._screenItemsLen * 3);\n      this._averageHeight = averageHeight;\n\n      if (config.reverse) {\n        window.requestAnimationFrame(function () {\n          _this3._element.scrollTop = scrollHeight;\n        });\n      }\n\n      return scrollHeight;\n    }\n  }, {\n    key: '_getFrom',\n    value: function _getFrom(scrollTop) {\n      var i = 0;\n\n      while (this._itemPositions[i] < scrollTop) {\n        i++;\n      }\n\n      return i;\n    }\n  }, {\n    key: '_getReverseFrom',\n    value: function _getReverseFrom(scrollTop) {\n      var i = this._config.total - 1;\n\n      while (i > 0 && this._itemPositions[i] < scrollTop + this._containerHeight) {\n        i--;\n      }\n\n      return i;\n    }\n  }]);\n\n  return HyperList;\n}();\n\nexports.default = HyperList;\nmodule.exports = exports['default'];\n\n},{}]},{},[1])(1)\n});\n});\n\nvar HyperList = unwrapExports(hyperlist);\n\nclass BodyRenderer {\n    constructor(instance) {\n        this.instance = instance;\n        this.options = instance.options;\n        this.datamanager = instance.datamanager;\n        this.rowmanager = instance.rowmanager;\n        this.cellmanager = instance.cellmanager;\n        this.bodyScrollable = instance.bodyScrollable;\n        this.footer = this.instance.footer;\n        this.log = instance.log;\n    }\n\n    renderRows(rows) {\n        this.visibleRows = rows;\n        this.visibleRowIndices = rows.map(row => row.meta.rowIndex);\n\n        if (rows.length === 0) {\n            this.bodyScrollable.innerHTML = this.getNoDataHTML();\n            return;\n        }\n\n        const rowViewOrder = this.datamanager.rowViewOrder.map(index => {\n            if (this.visibleRowIndices.includes(index)) {\n                return index;\n            }\n            return null;\n        }).filter(index => index !== null);\n\n        const computedStyle = getComputedStyle(this.bodyScrollable);\n\n        let config = {\n            width: computedStyle.width,\n            height: computedStyle.height,\n            itemHeight: this.options.cellHeight,\n            total: rows.length,\n            generate: (index) => {\n                const el = document.createElement('div');\n                const rowIndex = rowViewOrder[index];\n                const row = this.datamanager.getRow(rowIndex);\n                const rowHTML = this.rowmanager.getRowHTML(row, row.meta);\n                el.innerHTML = rowHTML;\n                return el.children[0];\n            },\n            afterRender: () => {\n                this.restoreState();\n            }\n        };\n\n        if (!this.hyperlist) {\n            this.hyperlist = new HyperList(this.bodyScrollable, config);\n        } else {\n            this.hyperlist.refresh(this.bodyScrollable, config);\n        }\n\n        this.renderFooter();\n    }\n\n    render() {\n        const rows = this.datamanager.getRowsForView();\n        this.renderRows(rows);\n        // setDimensions requires atleast 1 row to exist in dom\n        this.instance.setDimensions();\n    }\n\n    renderFooter() {\n        if (!this.options.showTotalRow) return;\n\n        const totalRow = this.getTotalRow();\n        let html = this.rowmanager.getRowHTML(totalRow, { isTotalRow: 1, rowIndex: 'totalRow' });\n\n        this.footer.innerHTML = html;\n    }\n\n    getTotalRow() {\n        const columns = this.datamanager.getColumns();\n        const totalRowTemplate = columns.map(col => {\n            let content = null;\n            if (['_rowIndex', '_checkbox'].includes(col.id)) {\n                content = '';\n            }\n            return {\n                content,\n                isTotalRow: 1,\n                colIndex: col.colIndex,\n                column: col\n            };\n        });\n\n        const totalRow = totalRowTemplate.map((cell, i) => {\n            if (cell.content === '') return cell;\n\n            if (this.options.hooks.columnTotal) {\n                const columnValues = this.visibleRows.map(row => row[i].content);\n                const result = this.options.hooks.columnTotal.call(this.instance, columnValues, cell);\n                if (result != null) {\n                    cell.content = result;\n                    return cell;\n                }\n            }\n\n            cell.content = this.visibleRows.reduce((acc, prevRow) => {\n                const prevCell = prevRow[i];\n                if (typeof prevCell.content === 'number') {\n                    if (acc == null) acc = 0;\n                    return acc + prevCell.content;\n                }\n                return acc;\n            }, cell.content);\n\n            return cell;\n        });\n\n        return totalRow;\n    }\n\n    restoreState() {\n        this.rowmanager.highlightCheckedRows();\n        this.cellmanager.selectAreaOnClusterChanged();\n        this.cellmanager.focusCellOnClusterChanged();\n    }\n\n    showToastMessage(message, hideAfter) {\n        this.instance.toastMessage.innerHTML = this.getToastMessageHTML(message);\n\n        if (hideAfter) {\n            setTimeout(() => {\n                this.clearToastMessage();\n            }, hideAfter * 1000);\n        }\n    }\n\n    clearToastMessage() {\n        this.instance.toastMessage.innerHTML = '';\n    }\n\n    getNoDataHTML() {\n        return `<div class=\"dt-scrollable__no-data\">${this.options.noDataMessage}</div>`;\n    }\n\n    getToastMessageHTML(message) {\n        return `<span class=\"dt-toast__message\">${message}</span>`;\n    }\n}\n\nclass Style {\n    constructor(instance) {\n        this.instance = instance;\n\n        linkProperties(this, this.instance, [\n            'options', 'datamanager', 'columnmanager',\n            'header', 'footer', 'bodyScrollable', 'datatableWrapper',\n            'getColumn', 'bodyRenderer'\n        ]);\n\n        this.scopeClass = 'dt-instance-' + instance.constructor.instances;\n        instance.datatableWrapper.classList.add(this.scopeClass);\n\n        const styleEl = document.createElement('style');\n        instance.wrapper.insertBefore(styleEl, instance.datatableWrapper);\n        this.styleEl = styleEl;\n\n        this.bindResizeWindow();\n        this.bindScrollHeader();\n    }\n\n    get stylesheet() {\n        return this.styleEl.sheet;\n    }\n\n    bindResizeWindow() {\n        this.onWindowResize = this.onWindowResize.bind(this);\n        this.onWindowResize = throttle$1(this.onWindowResize, 300);\n\n        if (this.options.layout === 'fluid') {\n            $.on(window, 'resize', this.onWindowResize);\n        }\n    }\n\n    bindScrollHeader() {\n        this._settingHeaderPosition = false;\n\n        $.on(this.bodyScrollable, 'scroll', (e) => {\n            if (this._settingHeaderPosition) return;\n\n            this._settingHeaderPosition = true;\n\n            requestAnimationFrame(() => {\n                const left = -e.target.scrollLeft;\n\n                $.style(this.header, {\n                    transform: `translateX(${left}px)`\n                });\n                $.style(this.footer, {\n                    transform: `translateX(${left}px)`\n                });\n                this._settingHeaderPosition = false;\n            });\n        });\n    }\n\n    onWindowResize() {\n        this.distributeRemainingWidth();\n        this.refreshColumnWidth();\n        this.setBodyStyle();\n    }\n\n    destroy() {\n        this.styleEl.remove();\n        $.off(window, 'resize', this.onWindowResize);\n    }\n\n    setStyle(selector, styleObject) {\n        if (selector.includes(',')) {\n            selector.split(',')\n                .map(s => s.trim())\n                .forEach(selector => {\n                    this.setStyle(selector, styleObject);\n                });\n            return;\n        }\n\n        selector = selector.trim();\n        if (!selector) return;\n\n        this._styleRulesMap = this._styleRulesMap || {};\n        const prefixedSelector = this._getPrefixedSelector(selector);\n\n        if (this._styleRulesMap[prefixedSelector]) {\n            this.removeStyle(selector);\n\n            // merge with old styleobject\n            styleObject = Object.assign({}, this._styleRulesMap[prefixedSelector], styleObject);\n        }\n\n        const styleString = this._getRuleString(styleObject);\n        const ruleString = `${prefixedSelector} { ${styleString} }`;\n\n        this._styleRulesMap[prefixedSelector] = styleObject;\n        this.stylesheet.insertRule(ruleString);\n    }\n\n    removeStyle(selector) {\n        if (selector.includes(',')) {\n            selector.split(',')\n                .map(s => s.trim())\n                .forEach(selector => {\n                    this.removeStyle(selector);\n                });\n            return;\n        }\n\n        selector = selector.trim();\n        if (!selector) return;\n\n        // find and remove\n        const prefixedSelector = this._getPrefixedSelector(selector);\n        const index = Array.from(this.stylesheet.cssRules)\n            .findIndex(rule => rule.selectorText === prefixedSelector);\n\n        if (index === -1) return;\n        this.stylesheet.deleteRule(index);\n    }\n\n    _getPrefixedSelector(selector) {\n        return `.${this.scopeClass} ${selector}`;\n    }\n\n    _getRuleString(styleObject) {\n        return Object.keys(styleObject)\n            .map(prop => {\n                let dashed = prop;\n                if (!prop.includes('-')) {\n                    dashed = camelCaseToDash(prop);\n                }\n                return `${dashed}:${styleObject[prop]};`;\n            })\n            .join('');\n    }\n\n    setDimensions() {\n        this.setCellHeight();\n        this.setupMinWidth();\n        this.setupNaturalColumnWidth();\n        this.setupColumnWidth();\n        this.distributeRemainingWidth();\n        this.setColumnStyle();\n        this.setBodyStyle();\n    }\n\n    setCellHeight() {\n        this.setStyle('.dt-cell', {\n            height: this.options.cellHeight + 'px'\n        });\n    }\n\n    setupMinWidth() {\n        $.each('.dt-cell--header', this.header).map(col => {\n            const { colIndex } = $.data(col);\n            const column = this.getColumn(colIndex);\n\n            if (!column.minWidth) {\n                const width = $.style($('.dt-cell__content', col), 'width');\n                // only set this once\n                column.minWidth = width;\n            }\n        });\n    }\n\n    setupNaturalColumnWidth() {\n        if (!$('.dt-row')) return;\n\n        $.each('.dt-row-header .dt-cell', this.header).map($headerCell => {\n            const { colIndex } = $.data($headerCell);\n            const column = this.datamanager.getColumn(colIndex);\n            let width = $.style($('.dt-cell__content', $headerCell), 'width');\n            if (typeof width === 'number' && width >= this.options.minimumColumnWidth) {\n                column.naturalWidth = width;\n            } else {\n                column.naturalWidth = this.options.minimumColumnWidth;\n            }\n        });\n\n        // set initial width as naturally calculated by table's first row\n        $.each('.dt-row-0 .dt-cell', this.bodyScrollable).map($cell => {\n            const {\n                colIndex\n            } = $.data($cell);\n            const column = this.datamanager.getColumn(colIndex);\n\n            let naturalWidth = $.style($('.dt-cell__content', $cell), 'width');\n\n            if (typeof naturalWidth === 'number' && naturalWidth >= column.naturalWidth) {\n                column.naturalWidth = naturalWidth;\n            } else {\n                column.naturalWidth = column.naturalWidth;\n            }\n        });\n    }\n\n    setupColumnWidth() {\n        if (this.options.layout === 'ratio') {\n            let totalWidth = $.style(this.datatableWrapper, 'width');\n\n            if (this.options.serialNoColumn) {\n                const rowIndexColumn = this.datamanager.getColumnById('_rowIndex');\n                totalWidth = totalWidth - rowIndexColumn.width - 1;\n            }\n\n            if (this.options.checkboxColumn) {\n                const rowIndexColumn = this.datamanager.getColumnById('_checkbox');\n                totalWidth = totalWidth - rowIndexColumn.width - 1;\n            }\n\n            const totalParts = this.datamanager.getColumns()\n                .map(column => {\n                    if (column.id === '_rowIndex' || column.id === '_checkbox') {\n                        return 0;\n                    }\n                    if (!column.width) {\n                        column.width = 1;\n                    }\n                    column.ratioWidth = parseInt(column.width, 10);\n                    return column.ratioWidth;\n                })\n                .reduce((a, c) => a + c);\n\n            const onePart = totalWidth / totalParts;\n\n            this.datamanager.getColumns()\n                .map(column => {\n                    if (column.id === '_rowIndex' || column.id === '_checkbox') return;\n                    column.width = Math.floor(onePart * column.ratioWidth) - 1;\n                });\n        } else {\n            this.datamanager.getColumns()\n                .map(column => {\n                    if (!column.width) {\n                        column.width = column.naturalWidth;\n                    }\n                    if (column.id === '_rowIndex') {\n                        column.width = this.getRowIndexColumnWidth();\n                    }\n                    if (column.width < this.options.minimumColumnWidth) {\n                        column.width = this.options.minimumColumnWidth;\n                    }\n                });\n        }\n    }\n\n    distributeRemainingWidth() {\n        if (this.options.layout !== 'fluid') return;\n\n        const wrapperWidth = $.style(this.instance.datatableWrapper, 'width');\n        let firstRow = $('.dt-row', this.bodyScrollable);\n        let firstRowWidth = wrapperWidth;\n        if (!firstRow) {\n            let headerRow = $('.dt-row', this.instance.header);\n            let cellWidths = Array.from(headerRow.children)\n                .map(cell => cell.offsetWidth);\n            firstRowWidth = cellWidths.reduce((sum, a) => sum + a, 0);\n        } else {\n            firstRowWidth = $.style(firstRow, 'width');\n        }\n        const resizableColumns = this.datamanager.getColumns().filter(col => col.resizable);\n        const deltaWidth = (wrapperWidth - firstRowWidth) / resizableColumns.length;\n\n        resizableColumns.map(col => {\n            const width = $.style(this.getColumnHeaderElement(col.colIndex), 'width');\n            let finalWidth = Math.floor(width + deltaWidth) - 2;\n\n            this.datamanager.updateColumn(col.colIndex, {\n                width: finalWidth\n            });\n        });\n    }\n\n    setColumnStyle() {\n        // align columns\n        this.datamanager.getColumns()\n            .map(column => {\n                // alignment\n                if (!column.align) {\n                    column.align = 'left';\n                }\n                if (!['left', 'center', 'right'].includes(column.align)) {\n                    column.align = 'left';\n                }\n                this.setStyle(`.dt-cell--col-${column.colIndex}`, {\n                    'text-align': column.align\n                });\n\n                // width\n                this.columnmanager.setColumnHeaderWidth(column.colIndex);\n                this.columnmanager.setColumnWidth(column.colIndex);\n            });\n    }\n\n    refreshColumnWidth() {\n        this.datamanager.getColumns()\n            .map(column => {\n                this.columnmanager.setColumnHeaderWidth(column.colIndex);\n                this.columnmanager.setColumnWidth(column.colIndex);\n            });\n    }\n\n    setBodyStyle() {\n        const bodyWidth = $.style(this.datatableWrapper, 'width');\n        const firstRow = $('.dt-row', this.bodyScrollable);\n        if (!firstRow) return;\n        const rowWidth = $.style(firstRow, 'width');\n\n        let width = bodyWidth > rowWidth ? rowWidth : bodyWidth;\n        $.style(this.bodyScrollable, {\n            width: width + 'px'\n        });\n\n        // remove the body height, so that it resets to it's original\n        $.removeStyle(this.bodyScrollable, 'height');\n\n        // when there are less rows than the container\n        // adapt the container height\n        let bodyHeight = $.getStyle(this.bodyScrollable, 'height');\n        const scrollHeight = (this.bodyRenderer.hyperlist || {})._scrollHeight || Infinity;\n        const hasHorizontalOverflow = $.hasHorizontalOverflow(this.bodyScrollable);\n\n        let height;\n\n        if (scrollHeight < bodyHeight) {\n            height = scrollHeight;\n\n            // account for scrollbar size when\n            // there is horizontal overflow\n            if (hasHorizontalOverflow) {\n                height += $.scrollbarSize();\n            }\n\n            $.style(this.bodyScrollable, {\n                height: height + 'px'\n            });\n        }\n\n        const verticalOverflow = this.bodyScrollable.scrollHeight - this.bodyScrollable.offsetHeight;\n        if (verticalOverflow < $.scrollbarSize()) {\n            // if verticalOverflow is less than scrollbar size\n            // then most likely scrollbar is causing the scroll\n            // which is not needed\n            $.style(this.bodyScrollable, {\n                overflowY: 'hidden'\n            });\n        }\n\n        if (this.options.layout === 'fluid') {\n            $.style(this.bodyScrollable, {\n                overflowX: 'hidden'\n            });\n        }\n    }\n\n    getColumnHeaderElement(colIndex) {\n        colIndex = +colIndex;\n        if (colIndex < 0) return null;\n        return $(`.dt-cell--col-${colIndex}`, this.header);\n    }\n\n    getRowIndexColumnWidth() {\n        const rowCount = this.datamanager.getRowCount();\n        const padding = 22;\n        return $.measureTextWidth(rowCount + '') + padding;\n    }\n}\n\nconst KEYCODES = {\n    13: 'enter',\n    91: 'meta',\n    16: 'shift',\n    17: 'ctrl',\n    18: 'alt',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down',\n    9: 'tab',\n    27: 'esc',\n    67: 'c',\n    70: 'f',\n    86: 'v'\n};\n\nclass Keyboard {\n    constructor(element) {\n        this.listeners = {};\n        $.on(element, 'keydown', this.handler.bind(this));\n    }\n\n    handler(e) {\n        let key = KEYCODES[e.keyCode];\n\n        if (e.shiftKey && key !== 'shift') {\n            key = 'shift+' + key;\n        }\n\n        if ((e.ctrlKey && key !== 'ctrl') || (e.metaKey && key !== 'meta')) {\n            key = 'ctrl+' + key;\n        }\n\n        const listeners = this.listeners[key];\n\n        if (listeners && listeners.length > 0) {\n            for (let listener of listeners) {\n                const preventBubbling = listener(e);\n                if (preventBubbling === undefined || preventBubbling === true) {\n                    e.preventDefault();\n                }\n            }\n        }\n    }\n\n    on(key, listener) {\n        const keys = key.split(',').map(k => k.trim());\n\n        keys.map(key => {\n            this.listeners[key] = this.listeners[key] || [];\n            this.listeners[key].push(listener);\n        });\n    }\n}\n\nvar en = {\n\t\"Sort Ascending\": \"Sort Ascending\",\n\t\"Sort Descending\": \"Sort Descending\",\n\t\"Reset sorting\": \"Reset sorting\",\n\t\"Remove column\": \"Remove column\",\n\t\"No Data\": \"No Data\",\n\t\"{count} cells copied\": {\"1\":\"{count} cell copied\",\"default\":\"{count} cells copied\"},\n\t\"{count} rows selected\": {\"1\":\"{count} row selected\",\"default\":\"{count} rows selected\"}\n};\n\nvar de = {\n\t\"Sort Ascending\": \"Aufsteigend sortieren\",\n\t\"Sort Descending\": \"Absteigend sortieren\",\n\t\"Reset sorting\": \"Sortierung zur\u00FCcksetzen\",\n\t\"Remove column\": \"Spalte entfernen\",\n\t\"No Data\": \"Keine Daten\",\n\t\"{count} cells copied\": {\"1\":\"{count} Zelle kopiert\",\"default\":\"{count} Zellen kopiert\"},\n\t\"{count} rows selected\": {\"1\":\"{count} Zeile ausgew\u00E4hlt\",\"default\":\"{count} Zeilen ausgew\u00E4hlt\"}\n};\n\nvar fr = {\n\t\"Sort Ascending\": \"Trier par ordre croissant\",\n\t\"Sort Descending\": \"Trier par ordre d\u00E9croissant\",\n\t\"Reset sorting\": \"R\u00E9initialiser le tri\",\n\t\"Remove column\": \"Supprimer colonne\",\n\t\"No Data\": \"Pas de donn\u00E9es\",\n\t\"{count} cells copied\": {\"1\":\"{count} cellule copi\u00E9e\",\"default\":\"{count} cellules copi\u00E9es\"},\n\t\"{count} rows selected\": {\"1\":\"{count} ligne s\u00E9lectionn\u00E9e\",\"default\":\"{count} lignes s\u00E9lectionn\u00E9es\"}\n};\n\nvar it = {\n\t\"Sort Ascending\": \"Ordinamento ascendente\",\n\t\"Sort Descending\": \"Ordinamento decrescente\",\n\t\"Reset sorting\": \"Azzeramento ordinamento\",\n\t\"Remove column\": \"Rimuovi colonna\",\n\t\"No Data\": \"Nessun dato\",\n\t\"{count} cells copied\": {\"1\":\"Copiato {count} cella\",\"default\":\"{count} celle copiate\"},\n\t\"{count} rows selected\": {\"1\":\"{count} linea selezionata\",\"default\":\"{count} linee selezionate\"}\n};\n\nfunction getTranslations() {\n    return {\n        en,\n        de,\n        fr,\n        it,\n    };\n}\n\nclass TranslationManager {\n    constructor(language) {\n        this.language = language;\n        this.translations = getTranslations();\n    }\n\n    addTranslations(translations) {\n        this.translations = Object.assign(this.translations, translations);\n    }\n\n    translate(sourceText, args) {\n        let translation = (this.translations[this.language] &&\n            this.translations[this.language][sourceText]) || sourceText;\n\n        if (typeof translation === 'object') {\n            translation = args && args.count ?\n                this.getPluralizedTranslation(translation, args.count) :\n                sourceText;\n        }\n\n        return format(translation, args || {});\n    }\n\n    getPluralizedTranslation(translations, count) {\n        return translations[count] || translations['default'];\n    }\n}\n\nfunction filterRows(rows, filters) {\n    let filteredRowIndices = [];\n\n    if (Object.keys(filters).length === 0) {\n        return rows.map(row => row.meta.rowIndex);\n    }\n\n    for (let colIndex in filters) {\n        const keyword = filters[colIndex];\n\n        const filteredRows = filteredRowIndices.length ?\n            filteredRowIndices.map(i => rows[i]) :\n            rows;\n\n        const cells = filteredRows.map(row => row[colIndex]);\n\n        let filter = guessFilter(keyword);\n        let filterMethod = getFilterMethod(filter);\n\n        if (filterMethod) {\n            filteredRowIndices = filterMethod(filter.text, cells);\n        } else {\n            filteredRowIndices = cells.map(cell => cell.rowIndex);\n        }\n    }\n\n    return filteredRowIndices;\n}\nfunction getFilterMethod(filter) {\n    const stringCompareValue = cell =>\n        String(stripHTML(cell.html || '') || cell.content || '').toLowerCase();\n\n    const numberCompareValue = cell => parseFloat(cell.content);\n\n    const getCompareValues = (cell, keyword) => {\n        if (cell.column.compareValue) {\n            const compareValues = cell.column.compareValue(cell, keyword);\n            if (compareValues && Array.isArray(compareValues)) return compareValues;\n        }\n\n        // check if it can be converted to number\n        const float = numberCompareValue(cell);\n        if (!isNaN(float)) {\n            return [float, keyword];\n        }\n\n        return [stringCompareValue(cell), keyword];\n    };\n\n    let filterMethodMap = {\n        contains(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    const hay = stringCompareValue(cell);\n                    const needle = (keyword || '').toLowerCase();\n                    return !needle || hay.includes(needle);\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        greaterThan(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    const [compareValue, keywordValue] = getCompareValues(cell, keyword);\n                    return compareValue > keywordValue;\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        lessThan(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    const [compareValue, keywordValue] = getCompareValues(cell, keyword);\n                    return compareValue < keywordValue;\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        equals(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    const value = parseFloat(cell.content);\n                    return value === keyword;\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        notEquals(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    const value = parseFloat(cell.content);\n                    return value !== keyword;\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        range(rangeValues, cells) {\n            return cells\n                .filter(cell => {\n                    const values1 = getCompareValues(cell, rangeValues[0]);\n                    const values2 = getCompareValues(cell, rangeValues[1]);\n                    const value = values1[0];\n                    return value >= values1[1] && value <= values2[1];\n                })\n                .map(cell => cell.rowIndex);\n        },\n\n        containsNumber(keyword, cells) {\n            return cells\n                .filter(cell => {\n                    let number = parseFloat(keyword, 10);\n                    let string = keyword;\n                    let hayNumber = numberCompareValue(cell);\n                    let hayString = stringCompareValue(cell);\n\n                    return number === hayNumber || hayString.includes(string);\n                })\n                .map(cell => cell.rowIndex);\n        }\n    };\n\n    return filterMethodMap[filter.type];\n}\n\nfunction guessFilter(keyword = '') {\n    if (keyword.length === 0) return {};\n\n    let compareString = keyword;\n\n    if (['>', '<', '='].includes(compareString[0])) {\n        compareString = keyword.slice(1);\n    } else if (compareString.startsWith('!=')) {\n        compareString = keyword.slice(2);\n    }\n\n    if (keyword.startsWith('>')) {\n        if (compareString) {\n            return {\n                type: 'greaterThan',\n                text: compareString.trim()\n            };\n        }\n    }\n\n    if (keyword.startsWith('<')) {\n        if (compareString) {\n            return {\n                type: 'lessThan',\n                text: compareString.trim()\n            };\n        }\n    }\n\n    if (keyword.startsWith('=')) {\n        if (isNumber(compareString)) {\n            return {\n                type: 'equals',\n                text: Number(keyword.slice(1).trim())\n            };\n        }\n    }\n\n    if (isNumber(compareString)) {\n        return {\n            type: 'containsNumber',\n            text: compareString\n        };\n    }\n\n    if (keyword.startsWith('!=')) {\n        if (isNumber(compareString)) {\n            return {\n                type: 'notEquals',\n                text: Number(keyword.slice(2).trim())\n            };\n        }\n    }\n\n    if (keyword.split(':').length === 2) {\n        compareString = keyword.split(':');\n        return {\n            type: 'range',\n            text: compareString.map(v => v.trim())\n        };\n    }\n\n    return {\n        type: 'contains',\n        text: compareString.toLowerCase()\n    };\n}\n\nfunction getDefaultOptions(instance) {\n    return {\n        columns: [],\n        data: [],\n        dropdownButton: icons.chevronDown,\n        headerDropdown: [\n            {\n                label: instance.translate('Sort Ascending'),\n                action: function (column) {\n                    this.sortColumn(column.colIndex, 'asc');\n                }\n            },\n            {\n                label: instance.translate('Sort Descending'),\n                action: function (column) {\n                    this.sortColumn(column.colIndex, 'desc');\n                }\n            },\n            {\n                label: instance.translate('Reset sorting'),\n                action: function (column) {\n                    this.sortColumn(column.colIndex, 'none');\n                }\n            },\n            {\n                label: instance.translate('Remove column'),\n                action: function (column) {\n                    this.removeColumn(column.colIndex);\n                }\n            }\n        ],\n        events: {\n            onRemoveColumn(column) {},\n            onSwitchColumn(column1, column2) {},\n            onSortColumn(column) {},\n            onCheckRow(row) {},\n            onDestroy() {}\n        },\n        hooks: {\n            columnTotal: null\n        },\n        sortIndicator: {\n            asc: '\u2191',\n            desc: '\u2193',\n            none: ''\n        },\n        overrideComponents: {\n            // ColumnManager: CustomColumnManager\n        },\n        filterRows: filterRows,\n        freezeMessage: '',\n        getEditor: null,\n        serialNoColumn: true,\n        checkboxColumn: false,\n        clusterize: true,\n        logs: false,\n        layout: 'fixed', // fixed, fluid, ratio\n        noDataMessage: instance.translate('No Data'),\n        cellHeight: 40,\n        minimumColumnWidth: 30,\n        inlineFilters: false,\n        treeView: false,\n        checkedRowStatus: true,\n        dynamicRowHeight: false,\n        pasteFromClipboard: false,\n        showTotalRow: false,\n        direction: 'ltr',\n        disableReorderColumn: false\n    };\n}\n\nlet defaultComponents = {\n    DataManager,\n    CellManager,\n    ColumnManager,\n    RowManager,\n    BodyRenderer,\n    Style,\n    Keyboard\n};\n\nclass DataTable {\n    constructor(wrapper, options) {\n        DataTable.instances++;\n\n        if (typeof wrapper === 'string') {\n            // css selector\n            wrapper = document.querySelector(wrapper);\n        }\n        this.wrapper = wrapper;\n        if (!(this.wrapper instanceof HTMLElement)) {\n            throw new Error('Invalid argument given for `wrapper`');\n        }\n\n        this.initializeTranslations(options);\n        this.setDefaultOptions();\n        this.buildOptions(options);\n        this.prepare();\n        this.initializeComponents();\n\n        if (this.options.data) {\n            this.refresh();\n            this.columnmanager.applyDefaultSortOrder();\n        }\n    }\n\n    initializeTranslations(options) {\n        this.language = options.language || 'en';\n        this.translationManager = new TranslationManager(this.language);\n\n        if (options.translations) {\n            this.translationManager.addTranslations(options.translations);\n        }\n    }\n\n    setDefaultOptions() {\n        this.DEFAULT_OPTIONS = getDefaultOptions(this);\n    }\n\n    buildOptions(options) {\n        this.options = this.options || {};\n\n        this.options = Object.assign(\n            {}, this.DEFAULT_OPTIONS,\n            this.options || {}, options\n        );\n\n        options.headerDropdown = options.headerDropdown || [];\n        this.options.headerDropdown = [\n            ...this.DEFAULT_OPTIONS.headerDropdown,\n            ...options.headerDropdown\n        ];\n\n        // custom user events\n        this.events = Object.assign(\n            {}, this.DEFAULT_OPTIONS.events,\n            this.options.events || {},\n            options.events || {}\n        );\n        this.fireEvent = this.fireEvent.bind(this);\n    }\n\n    prepare() {\n        this.prepareDom();\n        this.unfreeze();\n    }\n\n    initializeComponents() {\n        let components = Object.assign({}, defaultComponents, this.options.overrideComponents);\n        let {\n            Style: Style$$1,\n            Keyboard: Keyboard$$1,\n            DataManager: DataManager$$1,\n            RowManager: RowManager$$1,\n            ColumnManager: ColumnManager$$1,\n            CellManager: CellManager$$1,\n            BodyRenderer: BodyRenderer$$1\n        } = components;\n\n        this.style = new Style$$1(this);\n        this.keyboard = new Keyboard$$1(this.wrapper);\n        this.datamanager = new DataManager$$1(this.options);\n        this.rowmanager = new RowManager$$1(this);\n        this.columnmanager = new ColumnManager$$1(this);\n        this.cellmanager = new CellManager$$1(this);\n        this.bodyRenderer = new BodyRenderer$$1(this);\n    }\n\n    prepareDom() {\n        this.wrapper.innerHTML = `\n            <div class=\"datatable\" dir=\"${this.options.direction}\">\n                <div class=\"dt-header\"></div>\n                <div class=\"dt-scrollable\"></div>\n                <div class=\"dt-footer\"></div>\n                <div class=\"dt-freeze\">\n                    <span class=\"dt-freeze__message\">\n                        ${this.options.freezeMessage}\n                    </span>\n                </div>\n                <div class=\"dt-toast\"></div>\n                <div class=\"dt-dropdown-container\"></div>\n                <textarea class=\"dt-paste-target\"></textarea>\n            </div>\n        `;\n\n        this.datatableWrapper = $('.datatable', this.wrapper);\n        this.header = $('.dt-header', this.wrapper);\n        this.footer = $('.dt-footer', this.wrapper);\n        this.bodyScrollable = $('.dt-scrollable', this.wrapper);\n        this.freezeContainer = $('.dt-freeze', this.wrapper);\n        this.toastMessage = $('.dt-toast', this.wrapper);\n        this.pasteTarget = $('.dt-paste-target', this.wrapper);\n        this.dropdownContainer = $('.dt-dropdown-container', this.wrapper);\n    }\n\n    refresh(data, columns) {\n        this.datamanager.init(data, columns);\n        this.render();\n        this.setDimensions();\n    }\n\n    destroy() {\n        this.wrapper.innerHTML = '';\n        this.style.destroy();\n        this.fireEvent('onDestroy');\n    }\n\n    appendRows(rows) {\n        this.datamanager.appendRows(rows);\n        this.rowmanager.refreshRows();\n    }\n\n    refreshRow(row, rowIndex) {\n        this.rowmanager.refreshRow(row, rowIndex);\n    }\n\n    render() {\n        this.renderHeader();\n        this.renderBody();\n    }\n\n    renderHeader() {\n        this.columnmanager.renderHeader();\n    }\n\n    renderBody() {\n        this.bodyRenderer.render();\n    }\n\n    setDimensions() {\n        this.style.setDimensions();\n    }\n\n    showToastMessage(message, hideAfter) {\n        this.bodyRenderer.showToastMessage(message, hideAfter);\n    }\n\n    clearToastMessage() {\n        this.bodyRenderer.clearToastMessage();\n    }\n\n    getColumn(colIndex) {\n        return this.datamanager.getColumn(colIndex);\n    }\n\n    getColumns() {\n        return this.datamanager.getColumns();\n    }\n\n    getRows() {\n        return this.datamanager.getRows();\n    }\n\n    getCell(colIndex, rowIndex) {\n        return this.datamanager.getCell(colIndex, rowIndex);\n    }\n\n    getColumnHeaderElement(colIndex) {\n        return this.columnmanager.getColumnHeaderElement(colIndex);\n    }\n\n    getViewportHeight() {\n        if (!this.viewportHeight) {\n            this.viewportHeight = $.style(this.bodyScrollable, 'height');\n        }\n\n        return this.viewportHeight;\n    }\n\n    sortColumn(colIndex, sortOrder) {\n        this.columnmanager.sortColumn(colIndex, sortOrder);\n    }\n\n    removeColumn(colIndex) {\n        this.columnmanager.removeColumn(colIndex);\n    }\n\n    scrollToLastColumn() {\n        this.datatableWrapper.scrollLeft = 9999;\n    }\n\n    freeze() {\n        $.style(this.freezeContainer, {\n            display: ''\n        });\n    }\n\n    unfreeze() {\n        $.style(this.freezeContainer, {\n            display: 'none'\n        });\n    }\n\n    updateOptions(options) {\n        this.buildOptions(options);\n    }\n\n    fireEvent(eventName, ...args) {\n        // fire internalEventHandlers if any\n        // and then user events\n        const handlers = [\n            ...(this._internalEventHandlers[eventName] || []),\n            this.events[eventName]\n        ].filter(Boolean);\n\n        for (let handler of handlers) {\n            handler.apply(this, args);\n        }\n    }\n\n    on(event, handler) {\n        this._internalEventHandlers = this._internalEventHandlers || {};\n        this._internalEventHandlers[event] = this._internalEventHandlers[event] || [];\n        this._internalEventHandlers[event].push(handler);\n    }\n\n    log() {\n        if (this.options.logs) {\n            console.log.apply(console, arguments);\n        }\n    }\n\n    translate(str, args) {\n        return this.translationManager.translate(str, args);\n    }\n}\n\nDataTable.instances = 0;\n\nvar name = \"frappe-datatable\";\nvar version = \"0.0.0-development\";\nvar description = \"A modern datatable library for the web\";\nvar main = \"dist/frappe-datatable.cjs.js\";\nvar unpkg = \"dist/frappe-datatable.min.js\";\nvar jsdelivr = \"dist/frappe-datatable.min.js\";\nvar scripts = {\"start\":\"yarn run dev\",\"build\":\"rollup -c && NODE_ENV=production rollup -c\",\"dev\":\"rollup -c -w\",\"cy:server\":\"http-server -p 8989\",\"cy:open\":\"cypress open\",\"cy:run\":\"cypress run\",\"test\":\"start-server-and-test cy:server http://localhost:8989 cy:run\",\"test-local\":\"start-server-and-test cy:server http://localhost:8989 cy:open\",\"travis-deploy-once\":\"travis-deploy-once\",\"semantic-release\":\"semantic-release\",\"lint\":\"eslint src\",\"lint-and-build\":\"yarn lint && yarn build\",\"commit\":\"npx git-cz\"};\nvar files = [\"dist\",\"src\"];\nvar devDependencies = {\"autoprefixer\":\"^9.0.0\",\"chai\":\"3.5.0\",\"cypress\":\"^9.2.0\",\"cz-conventional-changelog\":\"^2.1.0\",\"deepmerge\":\"^2.0.1\",\"eslint\":\"^5.0.1\",\"eslint-config-airbnb\":\"^16.1.0\",\"eslint-config-airbnb-base\":\"^12.1.0\",\"eslint-plugin-import\":\"^2.11.0\",\"http-server\":\"^0.11.1\",\"mocha\":\"3.3.0\",\"postcss-custom-properties\":\"^7.0.0\",\"postcss-nested\":\"^3.0.0\",\"rollup\":\"^0.59.4\",\"rollup-plugin-commonjs\":\"^8.3.0\",\"rollup-plugin-eslint\":\"^4.0.0\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.3\",\"rollup-plugin-postcss\":\"^1.2.8\",\"rollup-plugin-uglify-es\":\"^0.0.1\",\"semantic-release\":\"^17.1.1\",\"start-server-and-test\":\"^1.4.1\",\"travis-deploy-once\":\"^5.0.1\"};\nvar repository = {\"type\":\"git\",\"url\":\"https://github.com/frappe/datatable.git\"};\nvar keywords = [\"datatable\",\"data\",\"grid\",\"table\"];\nvar author = \"Faris Ansari\";\nvar license = \"MIT\";\nvar bugs = {\"url\":\"https://github.com/frappe/datatable/issues\"};\nvar homepage = \"https://frappe.github.io/datatable\";\nvar dependencies = {\"hyperlist\":\"^1.0.0-beta\",\"lodash\":\"^4.17.5\",\"sortablejs\":\"^1.7.0\"};\nvar config = {\"commitizen\":{\"path\":\"cz-conventional-changelog\"}};\nvar packageJson = {\n\tname: name,\n\tversion: version,\n\tdescription: description,\n\tmain: main,\n\tunpkg: unpkg,\n\tjsdelivr: jsdelivr,\n\tscripts: scripts,\n\tfiles: files,\n\tdevDependencies: devDependencies,\n\trepository: repository,\n\tkeywords: keywords,\n\tauthor: author,\n\tlicense: license,\n\tbugs: bugs,\n\thomepage: homepage,\n\tdependencies: dependencies,\n\tconfig: config\n};\n\nDataTable.__version__ = packageJson.version;\n\nmodule.exports = DataTable;\n", "import \"./lib/clusterize.min.js\";\nimport \"./frappe/views/reports/report_factory.js\";\nimport \"./frappe/views/reports/report_view.js\";\nimport \"./frappe/views/reports/query_report.js\";\nimport \"./frappe/views/reports/print_grid.html\";\nimport \"./frappe/views/reports/print_tree.html\";\nimport \"./frappe/ui/group_by/group_by.html\";\nimport \"./frappe/ui/group_by/group_by.js\";\nimport \"./frappe/views/reports/report_utils.js\";\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.views.ReportFactory = class ReportFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tconst _route = ['List', route[1], 'Report'];\n\n\t\tif (route[2]) {\n\t\t\t// custom report\n\t\t\t_route.push(route[2]);\n\t\t}\n\n\t\tfrappe.set_route(_route);\n\t}\n}\n", "/**\n * frappe.views.ReportView\n */\nimport DataTable from 'frappe-datatable';\n\nwindow.DataTable = DataTable;\nfrappe.provide('frappe.views');\n\nfrappe.views.ReportView = class ReportView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Report';\n\t}\n\n\trender_header() {\n\t\t// Override List View Header\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __('Report:') + ' ' + this.page_title;\n\t\tthis.view = 'Report';\n\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 4) {\n\t\t\tthis.report_name = route[3];\n\t\t}\n\n\t\tif (this.report_name) {\n\t\t\treturn this.get_report_doc()\n\t\t\t\t.then(doc => {\n\t\t\t\t\tthis.report_doc = doc;\n\t\t\t\t\tthis.report_doc.json = JSON.parse(this.report_doc.json);\n\n\t\t\t\t\tthis.filters = this.report_doc.json.filters;\n\t\t\t\t\tthis.order_by = this.report_doc.json.order_by;\n\t\t\t\t\tthis.add_totals_row = this.report_doc.json.add_totals_row;\n\t\t\t\t\tthis.page_title = this.report_name;\n\t\t\t\t\tthis.page_length = this.report_doc.json.page_length || 20;\n\t\t\t\t\tthis.order_by = this.report_doc.json.order_by || 'modified desc';\n\t\t\t\t\tthis.chart_args = this.report_doc.json.chart_args;\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.add_totals_row = this.view_user_settings.add_totals_row || 0;\n\t\t\tthis.chart_args = this.view_user_settings.chart_args;\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tsuper.setup_new_doc_event();\n\t\tthis.page.main.addClass('report-view');\n\t}\n\n\tsetup_page() {\n\t\tthis.menu_items = this.report_menu_items();\n\t\tsuper.setup_page();\n\t}\n\n\ttoggle_side_bar() {\n\t\tsuper.toggle_side_bar();\n\t\t// refresh datatable when sidebar is toggled to accomodate extra space\n\t\tthis.render(true);\n\t}\n\n\tsetup_result_area() {\n\t\tsuper.setup_result_area();\n\t\tthis.setup_charts_area();\n\t\tthis.$datatable_wrapper = $('<div class=\"datatable-wrapper\">');\n\t\tthis.$result.append(this.$datatable_wrapper);\n\t}\n\n\tsetup_charts_area() {\n\t\tthis.$charts_wrapper = $(`<div class=\"charts-wrapper hidden\">\n\t\t\t<div class=\"text-right\"><button class=\"btn btn-default btn-xs btn-chart-configure\"\n\t\t\t\tstyle=\"margin-right: 15px; margin-top: 15px\">Configure</button></div>\n\t\t\t<div class=\"charts-inner-wrapper\"></div>\n\t\t</div>`);\n\t\tthis.$result.append(this.$charts_wrapper);\n\t\tthis.$charts_wrapper.find('.btn-chart-configure').on('click', () => {\n\t\t\tthis.setup_charts();\n\t\t});\n\t}\n\n\tsetup_paging_area() {\n\t\tsuper.setup_paging_area();\n\t\tconst message = __('For comparison, use >5, <10 or =324. For ranges, use 5:10 (for values between 5 & 10).');\n\t\tthis.$paging_area.find('.level-left').append(\n\t\t\t`<span class=\"comparison-message text-muted\">${message}</span>`\n\t\t)\n\t}\n\n\tsetup_sort_selector() {\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.filter_area.$filter_list_wrapper,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: this.order_by,\n\t\t\tonchange: this.on_sort_change.bind(this)\n\t\t});\n\n\t\t//Setup groupby for reports\n\t\tthis.group_by_control = new frappe.ui.GroupBy(this);\n\t\tif (this.report_doc && this.report_doc.json.group_by) {\n\t\t\tthis.group_by_control.apply_settings(this.report_doc.json.group_by);\n\t\t}\n\t\tif (this.view_user_settings && this.view_user_settings.group_by) {\n\t\t\tthis.group_by_control.apply_settings(this.view_user_settings.group_by);\n\t\t}\n\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\t\tdelete args.group_by;\n\t\tthis.group_by_control.set_args(args);\n\n\t\treturn args;\n\t}\n\n\tbefore_refresh() {\n\t\tif (this.report_doc) {\n\t\t\t// don't parse frappe.route_options if this is a Custom Report\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn super.before_refresh();\n\t}\n\n\tafter_render() {\n\t\tif (!this.report_doc) {\n\t\t\tthis.save_report_settings();\n\t\t} else if (!$.isEmptyObject(this.report_doc.json)) {\n\t\t\tthis.set_dirty_state_for_custom_report();\n\t\t}\n\n\t\tif (!this.group_by) {\n\t\t\tthis.init_chart();\n\t\t}\n\t}\n\n\tset_dirty_state_for_custom_report() {\n\t\tlet current_settings = {\n\t\t\tfilters: this.filter_area.get(),\n\t\t\tfields: this.fields,\n\t\t\torder_by: this.sort_selector.get_sql_string(),\n\t\t\tadd_totals_row: this.add_totals_row,\n\t\t\tpage_length: this.page_length,\n\t\t\tcolumn_widths: this.get_column_widths(),\n\t\t\tgroup_by: this.group_by_control.get_settings(),\n\t\t\tchart_args: this.get_chart_settings()\n\t\t};\n\n\t\tlet report_settings = {\n\t\t\tfilters: this.report_doc.json.filters,\n\t\t\tfields: this.report_doc.json.fields,\n\t\t\torder_by: this.report_doc.json.order_by,\n\t\t\tadd_totals_row: this.report_doc.json.add_totals_row,\n\t\t\tpage_length: this.report_doc.json.page_length,\n\t\t\tcolumn_widths: this.report_doc.json.column_widths,\n\t\t\tgroup_by: this.report_doc.json.group_by,\n\t\t\tchart_args: this.report_doc.json.chart_args\n\t\t};\n\n\t\tif (!frappe.utils.deep_equal(current_settings, report_settings)) {\n\t\t\tthis.page.set_indicator(__('Not Saved'), 'orange');\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_report_settings() {\n\t\tfrappe.model.user_settings.save(this.doctype, 'last_view', this.view_name);\n\n\t\tif (!this.report_name) {\n\t\t\tthis.save_view_user_settings({\n\t\t\t\tfields: this.fields,\n\t\t\t\tfilters: this.filter_area.get(),\n\t\t\t\torder_by: this.sort_selector.get_sql_string(),\n\t\t\t\tgroup_by: this.group_by_control.get_settings(),\n\t\t\t\tchart_args: this.get_chart_settings(),\n\t\t\t\tadd_totals_row: this.add_totals_row\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\t\tdata = frappe.utils.dict(data.keys, data.values);\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\t}\n\n\trender(force) {\n\t\tif (this.data.length === 0) return;\n\t\tthis.render_count();\n\t\tthis.setup_columns();\n\n\t\tif (this.group_by) {\n\t\t\tthis.$charts_wrapper.addClass('hidden');\n\t\t} else if (this.chart) {\n\t\t\tthis.refresh_charts();\n\t\t}\n\n\t\tif (this.datatable && !force) {\n\t\t\tthis.datatable.refresh(this.get_data(this.data), this.columns);\n\t\t\treturn;\n\t\t}\n\t\tthis.setup_datatable(this.data);\n\t}\n\n\trender_count() {\n\t\tlet $list_count = this.$paging_area.find('.list-count');\n\t\tif (!$list_count.length) {\n\t\t\t$list_count = $('<span>')\n\t\t\t\t.addClass('text-muted list-count')\n\t\t\t\t.prependTo(this.$paging_area.find('.level-right'));\n\t\t}\n\t\tthis.get_count_str()\n\t\t\t.then(str => {\n\t\t\t\t$list_count.text(str);\n\t\t\t});\n\t}\n\n\ton_update(data) {\n\t\tif (this.doctype === data.doctype && data.name) {\n\t\t\t// flash row when doc is updated by some other user\n\t\t\tconst flash_row = data.user !== frappe.session.user;\n\t\t\tif (this.data.find(d => d.name === data.name)) {\n\t\t\t\t// update existing\n\t\t\t\tfrappe.db.get_doc(data.doctype, data.name)\n\t\t\t\t\t.then(doc => this.update_row(doc, flash_row));\n\t\t\t} else {\n\t\t\t\t// refresh\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate_row(doc, flash_row) {\n\t\tconst to_refresh = [];\n\n\t\tthis.data = this.data.map((d, i) => {\n\t\t\tif (d.name === doc.name) {\n\t\t\t\tfor (let fieldname in d) {\n\t\t\t\t\tif (fieldname.includes(':')) {\n\t\t\t\t\t\t// child table field\n\t\t\t\t\t\tconst [cdt, _field] = fieldname.split(':');\n\t\t\t\t\t\tconst cdt_row = Object.keys(doc)\n\t\t\t\t\t\t\t.filter(key =>\n\t\t\t\t\t\t\t\tArray.isArray(doc[key])\n\t\t\t\t\t\t\t\t&& doc[key].length\n\t\t\t\t\t\t\t\t&& doc[key][0].doctype === cdt\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.map(key => doc[key])\n\t\t\t\t\t\t\t.map(a => a[0])\n\t\t\t\t\t\t\t.filter(cdoc => cdoc.name === d[cdt + ':name'])[0];\n\t\t\t\t\t\tif (cdt_row) {\n\t\t\t\t\t\t\td[fieldname] = cdt_row[_field];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\td[fieldname] = doc[fieldname];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tto_refresh.push([d, i]);\n\t\t\t}\n\t\t\treturn d;\n\t\t});\n\n\t\t// indicate row update\n\t\tconst _flash_row = (rowIndex) => {\n\t\t\tif (!flash_row) return;\n\t\t\tconst $row = this.$result.find(`.dt-row[data-row-index=\"${rowIndex}\"]`);\n\t\t\t$row.addClass('row-update');\n\t\t\tsetTimeout(() => $row.removeClass('row-update'), 500);\n\t\t};\n\n\t\tto_refresh.forEach(([data, rowIndex]) => {\n\t\t\tconst new_row = this.build_row(data);\n\t\t\tthis.datatable.refreshRow(new_row, rowIndex);\n\t\t\t_flash_row(rowIndex);\n\t\t});\n\t}\n\n\tsetup_datatable(values) {\n\t\tthis.$datatable_wrapper.empty();\n\t\tthis.datatable = new DataTable(this.$datatable_wrapper[0], {\n\t\t\tcolumns: this.columns,\n\t\t\tdata: this.get_data(values),\n\t\t\tgetEditor: this.get_editing_object.bind(this),\n\t\t\tlanguage: frappe.boot.lang,\n\t\t\ttranslations: frappe.utils.datatable.get_translations(),\n\t\t\tcheckboxColumn: true,\n\t\t\tinlineFilters: true,\n\t\t\tcellHeight: 35,\n\t\t\tdirection: frappe.utils.is_rtl() ? 'rtl' : 'ltr',\n\t\t\tevents: {\n\t\t\t\tonRemoveColumn: (column) => {\n\t\t\t\t\tthis.remove_column_from_datatable(column);\n\t\t\t\t},\n\t\t\t\tonSwitchColumn: (column1, column2) => {\n\t\t\t\t\tthis.switch_column(column1, column2);\n\t\t\t\t},\n\t\t\t\tonCheckRow: () => {\n\t\t\t\t\tconst checked_items = this.get_checked_items();\n\t\t\t\t\tthis.toggle_actions_menu_button(checked_items.length > 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\thooks: {\n\t\t\t\tcolumnTotal: frappe.utils.report_column_total\n\t\t\t},\n\t\t\theaderDropdown: [{\n\t\t\t\tlabel: __('Add Column'),\n\t\t\t\taction: (datatabe_col) => {\n\t\t\t\t\tlet columns_in_picker = [];\n\t\t\t\t\tconst columns = this.get_columns_for_picker();\n\n\t\t\t\t\tcolumns_in_picker = columns[this.doctype]\n\t\t\t\t\t\t.filter(df => !this.is_column_added(df))\n\t\t\t\t\t\t.map(df => ({\n\t\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\t\tvalue: df.fieldname\n\t\t\t\t\t\t}));\n\n\t\t\t\t\tdelete columns[this.doctype];\n\n\t\t\t\t\tfor (let cdt in columns) {\n\t\t\t\t\t\tcolumns[cdt]\n\t\t\t\t\t\t\t.filter(df => !this.is_column_added(df))\n\t\t\t\t\t\t\t.map(df => ({\n\t\t\t\t\t\t\t\tlabel: __(df.label) + ` (${cdt})`,\n\t\t\t\t\t\t\t\tvalue: df.fieldname + ',' + cdt\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.forEach(df => columns_in_picker.push(df));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Add Column'),\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __('Select Column'),\n\t\t\t\t\t\t\t\tfieldname: 'column',\n\t\t\t\t\t\t\t\tfieldtype: 'Autocomplete',\n\t\t\t\t\t\t\t\toptions: columns_in_picker\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __('Insert Column Before {0}', [__(datatabe_col.docfield.label).bold()]),\n\t\t\t\t\t\t\t\tfieldname: 'insert_before',\n\t\t\t\t\t\t\t\tfieldtype: 'Check'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprimary_action: ({ column, insert_before }) => {\n\t\t\t\t\t\t\tif (!columns_in_picker.map(col => col.value).includes(column)) {\n\t\t\t\t\t\t\t\tfrappe.show_alert({message: __('Invalid column'), indicator: 'orange'});\n\t\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet doctype = this.doctype;\n\t\t\t\t\t\t\tif (column.includes(',')) {\n\t\t\t\t\t\t\t\t[column, doctype] = column.split(',');\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tlet index = datatabe_col.colIndex;\n\t\t\t\t\t\t\tif (insert_before) {\n\t\t\t\t\t\t\t\tindex = index - 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.add_column_to_datatable(column, doctype, index);\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\td.show();\n\t\t\t\t}\n\t\t\t}]\n\t\t});\n\t}\n\n\ttoggle_charts() {\n\t\t// add\n\t\tif (!this.chart) {\n\t\t\tthis.setup_charts();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.$charts_wrapper.hasClass('hidden')) {\n\t\t\t// reload chart\n\t\t\tthis.$charts_wrapper.removeClass('hidden');\n\t\t\tthis.refresh_charts();\n\t\t} else {\n\t\t\t// remove chart\n\t\t\tthis.$charts_wrapper.addClass('hidden');\n\t\t\tthis.save_view_user_settings(\n\t\t\t\t{ chart_args: null });\n\t\t\tthis.chart_args = null;\n\t\t}\n\t}\n\n\tinit_chart() {\n\t\t// show chart if saved via report or user settings\n\t\tif (!this.chart) {\n\t\t\tif (this.chart_args) {\n\t\t\t\tthis.build_chart_args(this.chart_args.x_axis,\n\t\t\t\t\tthis.chart_args.y_axes,\n\t\t\t\t\tthis.chart_args.chart_type);\n\n\t\t\t\tthis.make_chart();\n\t\t\t}\n\t\t}\n\t}\n\n\tsetup_charts() {\n\t\t// get fields from columns\n\t\tlet x_fields = [], y_fields = [];\n\t\tfor (let col of this.columns) {\n\t\t\t// all options in x\n\t\t\tx_fields.push({\n\t\t\t\tlabel: col.content,\n\t\t\t\tfieldname: col.id,\n\t\t\t\tvalue: col.id,\n\t\t\t});\n\n\t\t\t// numeric values in y\n\t\t\tif (col.docfield && frappe.model.numeric_fieldtypes.includes(col.docfield.fieldtype)) {\n\t\t\t\ty_fields.push({\n\t\t\t\t\tlabel: col.content,\n\t\t\t\t\tfieldname: col.id,\n\t\t\t\t\tvalue: col.id\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst defaults = this.chart_args || {};\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Configure Chart'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __('X Axis Field'),\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'x_axis',\n\t\t\t\t\toptions: x_fields,\n\t\t\t\t\tdefault: defaults.x_axis\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Y Axis Fields'),\n\t\t\t\t\tfieldtype: 'MultiSelect',\n\t\t\t\t\tfieldname: 'y_axes',\n\t\t\t\t\toptions: y_fields,\n\t\t\t\t\tdescription: __('Showing only Numeric fields from Report'),\n\t\t\t\t\tdefault: defaults.y_axes ? defaults.y_axes.join(', ') : null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Chart Type'),\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Bar', 'Line', 'Pie', 'Percentage', 'Donut'],\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tdefault: defaults.chart_type ?\n\t\t\t\t\t\tfrappe.utils.to_title_case(defaults.chart_type) :\n\t\t\t\t\t\t'Bar'\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action: (data) => {\n\t\t\t\tdata.y_axes = data.y_axes.split(',').map(d => d.trim()).filter(Boolean);\n\n\t\t\t\tthis.build_chart_args(data.x_axis, data.y_axes, data.chart_type);\n\t\t\t\tthis.make_chart();\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tbuild_chart_args(x_axis, y_axes, chart_type) {\n\t\tlet datasets = y_axes.map(y_axis => ({\n\t\t\tname: this.columns_map[y_axis].content,\n\t\t\tvalues: this.data.map(d => d[y_axis])\n\t\t}));\n\n\t\tthis.chart_args = {\n\t\t\tchart_type: chart_type.toLowerCase(),\n\t\t\tx_axis: x_axis,\n\t\t\ty_axes: y_axes,\n\t\t\tlabels: this.data.map(d => d[x_axis]),\n\t\t\tdatasets: datasets\n\t\t};\n\n\t\tthis.save_view_user_settings(\n\t\t\t{ chart_args: this.get_chart_settings() });\n\t}\n\n\tget_chart_settings() {\n\t\tif (this.chart_args) {\n\t\t\treturn {\n\t\t\t\tchart_type: this.chart_args.chart_type,\n\t\t\t\tx_axis: this.chart_args.x_axis,\n\t\t\t\ty_axes: this.chart_args.y_axes,\n\t\t\t};\n\t\t}\n\t}\n\n\tmake_chart() {\n\t\tconst args = this.chart_args;\n\t\tlet data = {\n\t\t\tlabels: args.labels,\n\t\t\tdatasets: args.datasets\n\t\t};\n\n\t\tthis.last_chart_type = args.chart_type;\n\n\t\tconst get_df = (field) => this.columns_map[field].docfield;\n\t\tconst get_doc = (value, field) => this.data.find(d => d[field] === value);\n\n\t\tthis.$charts_wrapper.removeClass('hidden');\n\n\t\tthis.chart = new frappe.Chart(this.$charts_wrapper.find('.charts-inner-wrapper')[0], {\n\t\t\ttitle: __(\"{0} Chart\", [this.doctype]),\n\t\t\tdata: data,\n\t\t\ttype: args.chart_type,\n\t\t\ttruncateLegends: 1,\n\t\t\tcolors: ['#70E078', 'light-blue', 'orange', 'red'],\n\t\t\taxisOptions: {\n\t\t\t\tshortenYAxisNumbers: 1\n\t\t\t},\n\t\t\ttooltipOptions: {\n\t\t\t\tformatTooltipY: value => frappe.format(value, get_df(this.chart_args.y_axes[0]), { always_show_decimals: true, inline: true }, get_doc(value.doc))\n\t\t\t}\n\t\t});\n\t}\n\n\trefresh_charts() {\n\t\tif (!this.chart || !this.chart_args) return;\n\t\tthis.$charts_wrapper.removeClass('hidden');\n\t\tconst { x_axis, y_axes, chart_type } = this.chart_args;\n\t\tthis.build_chart_args(x_axis, y_axes, chart_type);\n\t\tthis.chart.update(this.chart_args);\n\t}\n\n\tget_editing_object(colIndex, rowIndex, value, parent) {\n\t\tconst control = this.render_editing_input(colIndex, value, parent);\n\t\tif (!control) return false;\n\n\t\tcontrol.df.change = () => control.set_focus();\n\n\t\treturn {\n\t\t\tinitValue: (value) => {\n\t\t\t\treturn control.set_value(value);\n\t\t\t},\n\t\t\tsetValue: (value) => {\n\t\t\t\tconst cell = this.datatable.getCell(colIndex, rowIndex);\n\t\t\t\tlet fieldname = this.datatable.getColumn(colIndex).docfield.fieldname;\n\t\t\t\tlet docname = cell.name;\n\t\t\t\tlet doctype = cell.doctype;\n\n\t\t\t\tcontrol.set_value(value);\n\t\t\t\treturn this.set_control_value(doctype, docname, fieldname, value)\n\t\t\t\t\t.then((updated_doc) => {\n\t\t\t\t\t\tconst _data = this.data\n\t\t\t\t\t\t\t.filter(b => b.name === updated_doc.name)\n\t\t\t\t\t\t\t.find(a =>\n\t\t\t\t\t\t\t\t// child table cell\n\t\t\t\t\t\t\t\t(doctype != updated_doc.doctype && a[doctype + \":name\"] == docname)\n\t\t\t\t\t\t\t\t|| doctype == updated_doc.doctype\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfor (let field in _data) {\n\t\t\t\t\t\t\tif (field.includes(':')) {\n\t\t\t\t\t\t\t\t// child table field\n\t\t\t\t\t\t\t\tconst [cdt, _field] = field.split(':');\n\t\t\t\t\t\t\t\tconst cdt_row = Object.keys(updated_doc)\n\t\t\t\t\t\t\t\t\t.filter(key =>\n\t\t\t\t\t\t\t\t\t\tArray.isArray(updated_doc[key])\n\t\t\t\t\t\t\t\t\t\t&& updated_doc[key].length\n\t\t\t\t\t\t\t\t\t\t&& updated_doc[key][0].doctype === cdt\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.map(key => updated_doc[key])[0]\n\t\t\t\t\t\t\t\t\t.filter(cdoc => cdoc.name === _data[cdt + ':name'])[0];\n\t\t\t\t\t\t\t\tif (cdt_row) {\n\t\t\t\t\t\t\t\t\t_data[field] = cdt_row[_field];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_data[field] = updated_doc[field];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => this.refresh_charts());\n\t\t\t},\n\t\t\tgetValue: () => {\n\t\t\t\treturn control.get_value();\n\t\t\t}\n\t\t};\n\t}\n\n\tset_control_value(doctype, docname, fieldname, value) {\n\t\tthis.last_updated_doc = docname;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfrappe.db.set_value(doctype, docname, {[fieldname]: value})\n\t\t\t\t.then(r => {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tresolve(r.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(reject);\n\t\t});\n\t}\n\n\trender_editing_input(colIndex, value, parent) {\n\t\tconst col = this.datatable.getColumn(colIndex);\n\t\tlet control = null;\n\n\t\tif (col.docfield.fieldtype === 'Text Editor') {\n\t\t\tconst d = new frappe.ui.Dialog({\n\t\t\t\ttitle: __('Edit {0}', [col.docfield.label]),\n\t\t\t\tfields: [col.docfield],\n\t\t\t\tprimary_action: () => {\n\t\t\t\t\tthis.datatable.cellmanager.submitEditing();\n\t\t\t\t\tthis.datatable.cellmanager.deactivateEditing();\n\t\t\t\t\td.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t\td.show();\n\t\t\tcontrol = d.fields_dict[col.docfield.fieldname];\n\t\t} else {\n\t\t\t// make control\n\t\t\tcontrol = frappe.ui.form.make_control({\n\t\t\t\tdf: col.docfield,\n\t\t\t\tparent: parent,\n\t\t\t\trender_input: true\n\t\t\t});\n\t\t\tcontrol.set_value(value);\n\t\t\tcontrol.toggle_label(false);\n\t\t\tcontrol.toggle_description(false);\n\t\t}\n\n\t\treturn control;\n\t}\n\n\tis_editable(df, data) {\n\t\tif (df\n\t\t\t&& frappe.model.can_write(this.doctype)\n\t\t\t// not a submitted doc or field is allowed to edit after submit\n\t\t\t&& (data.docstatus !== 1 || df.allow_on_submit)\n\t\t\t// not a cancelled doc\n\t\t\t&& data.docstatus !== 2\n\t\t\t&& !df.read_only\n\t\t\t&& !df.is_virtual\n\t\t\t&& !df.hidden\n\t\t\t// not a standard field i.e., owner, modified_by, etc.\n\t\t\t&& frappe.model.is_non_std_field(df.fieldname))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tget_data(values) {\n\t\treturn this.build_rows(values);\n\t}\n\n\tset_fields() {\n\t\t// default fields\n\t\t['name', 'docstatus'].map((f) => this._add_field(f));\n\n\t\tif (this.report_name && this.report_doc.json.fields) {\n\t\t\tlet fields = this.report_doc.json.fields.slice();\n\t\t\tfields.forEach(f => this._add_field(f[0], f[1]));\n\t\t\treturn;\n\t\t} else if (this.view_user_settings.fields) {\n\t\t\t// get from user_settings\n\t\t\tlet fields = this.view_user_settings.fields;\n\t\t\tfields.forEach(f => this._add_field(f[0], f[1]));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.set_default_fields();\n\t}\n\n\tset_default_fields() {\n\t\t// get fields from meta\n\t\tthis.fields = this.fields || [];\n\t\tconst add_field = f => this._add_field(f);\n\n\t\t// default fields\n\t\t[\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field\n\t\t].map(add_field);\n\n\t\t// fields in_list_view or in_standard_filter\n\t\tconst fields = this.meta.fields.filter(df => {\n\t\t\treturn (df.in_list_view || df.in_standard_filter)\n\t\t\t\t&& frappe.perm.has_perm(this.doctype, df.permlevel, 'read')\n\t\t\t\t&& frappe.model.is_value_type(df.fieldtype)\n\t\t\t\t&& !df.report_hide;\n\t\t});\n\n\t\tfields.map(add_field);\n\n\t\t// currency fields\n\t\tfields.filter(\n\t\t\tdf => df.fieldtype === 'Currency' && df.options\n\t\t).map(df => {\n\t\t\tif (df.options.includes(':')) {\n\t\t\t\tadd_field(df.options.split(':')[1]);\n\t\t\t} else {\n\t\t\t\tadd_field(df.options);\n\t\t\t}\n\t\t});\n\n\t\t// fields in listview_settings\n\t\t(this.settings.add_fields || []).map(add_field);\n\t}\n\n\tbuild_fields() {\n\t\tsuper.build_fields();\n\t}\n\n\treorder_fields() {\n\t\t// generate table fields in the required format [\"name\", \"DocType\"]\n\t\t// these are fields in the column before adding new fields\n\t\tlet table_fields = this.columns.map(df => [df.field, df.docfield.parent]);\n\n\t\t// filter fields that are already in table\n\t\t// iterate over table_fields to preserve the existing order of fields\n\t\t// The filter will ensure the unchecked fields are removed\n\t\tlet fields_already_in_table = table_fields.filter(df => {\n\t\t\treturn this.fields.find((field) => {\n\t\t\t\treturn df[0] == field[0] && df[1] == field[1]\n\t\t\t})\n\t\t})\n\n\t\t// find new fields that didn't already exists\n\t\t// This will be appended to the end of the table\n\t\tlet fields_to_add = this.fields.filter(df => {\n\t\t\treturn !table_fields.find((field) => {\n\t\t\t\treturn df[0] == field[0] && df[1] == field[1];\n\t\t\t});\n\t\t});\n\n\t\t// rebuild fields\n\t\tthis.fields = [...fields_already_in_table, ...fields_to_add];\n\t}\n\n\tget_fields() {\n\t\tlet fields = this.fields.map(f => {\n\t\t\tlet column_name = frappe.model.get_full_column_name(f[0], f[1]);\n\t\t\tif (f[1] !== this.doctype) {\n\t\t\t\t// child table field\n\t\t\t\tcolumn_name = column_name + ' as ' + `'${f[1]}:${f[0]}'`;\n\t\t\t}\n\t\t\treturn column_name;\n\t\t});\n\t\tconst cdt_name_fields =\n\t\t\tthis.get_unique_cdt_in_view()\n\t\t\t\t.map(cdt => frappe.model.get_full_column_name('name', cdt) + ' as ' + `'${cdt}:name'`);\n\t\tfields = fields.concat(cdt_name_fields);\n\n\t\treturn fields;\n\t}\n\n\tget_unique_cdt_in_view() {\n\t\treturn this.fields\n\t\t\t.filter(f => f[1] !== this.doctype)\n\t\t\t.map(f => f[1])\n\t\t\t.uniqBy(d => d);\n\t}\n\n\tadd_column_to_datatable(fieldname, doctype, col_index) {\n\t\tconst field = [fieldname, doctype];\n\t\tthis.fields.splice(col_index, 0, field);\n\n\t\tthis.add_currency_column(fieldname, doctype, col_index);\n\n\t\tthis.build_fields();\n\t\tthis.setup_columns();\n\n\t\tif (this.datatable) this.datatable.destroy();\n\t\tthis.datatable = null;\n\t\tthis.refresh();\n\t}\n\n\tadd_currency_column(fieldname, doctype, col_index) {\n\t\t// Adds dependent currency field if required\n\t\tconst df = frappe.meta.get_docfield(doctype, fieldname);\n\t\tif (df && df.fieldtype === 'Currency' && df.options &&\n\t\t\t!df.options.includes(':') && frappe.meta.has_field(doctype, df.options)\n\t\t) {\n\t\t\tconst field = [df.options, doctype];\n\t\t\tif (col_index === undefined) {\n\t\t\t\tthis.fields.push(field);\n\t\t\t} else {\n\t\t\t\tthis.fields.splice(col_index, 0, field);\n\t\t\t}\n\t\t\tconst field_label = frappe.meta.get_label(doctype, field[0]);\n\t\t\tfrappe.show_alert(\n\t\t\t\t__('Also adding the dependent currency field {0}', [__(field_label).bold()])\n\t\t\t);\n\t\t}\n\t}\n\n\tadd_status_dependency_column(col, doctype) {\n\t\t// Adds dependent column from which status is derived if required\n\t\tif (!this.fields.find(f => f[0] === col)) {\n\t\t\tconst field = [col, doctype];\n\t\t\tthis.fields.push(field);\n\t\t\tthis.refresh();\n\t\t\tconst field_label = frappe.meta.get_label(doctype, field[0]);\n\t\t\tfrappe.show_alert(\n\t\t\t\t__('Also adding the status dependency field {0}', [__(field_label).bold()])\n\t\t\t);\n\t\t}\n\t}\n\n\tremove_column_from_datatable(column) {\n\t\tconst index = this.fields.findIndex(f => column.field === f[0]);\n\t\tif (index === -1) return;\n\t\tconst field = this.fields[index];\n\n\t\tif (field[0] === 'name') {\n\t\t\tthis.refresh();\n\t\t\tfrappe.throw(__('Cannot remove ID field'));\n\t\t}\n\n\t\tthis.fields.splice(index, 1);\n\t\tthis.build_fields();\n\t\tthis.setup_columns();\n\t\tthis.refresh();\n\t}\n\n\tswitch_column(col1, col2) {\n\t\tconst index1 = this.fields.findIndex(f => col1.field === f[0]);\n\t\tconst index2 = this.fields.findIndex(f => col2.field === f[0]);\n\t\tconst _fields = this.fields.slice();\n\n\t\tlet temp = _fields[index1];\n\t\t_fields[index1] = _fields[index2];\n\t\t_fields[index2] = temp;\n\n\t\tthis.fields = _fields;\n\t\tthis.build_fields();\n\t\tthis.setup_columns();\n\t\tthis.refresh();\n\t}\n\n\tget_columns_for_picker() {\n\t\tlet out = {};\n\n\t\tconst standard_fields_filter = df => !in_list(frappe.model.no_value_type, df.fieldtype);\n\n\t\tlet doctype_fields = frappe.meta.get_docfields(this.doctype).filter(standard_fields_filter);\n\n\t\t// filter out docstatus field from picker\n\t\tlet std_fields = frappe.model.std_fields.filter( df => df.fieldname !== 'docstatus');\n\n\t\t// add status field derived from docstatus, if status is not a standard field\n\t\tlet has_status_values = false;\n\n\t\tif (this.data) {\n\t\t\thas_status_values = frappe.get_indicator(this.data[0], this.doctype);\n\t\t}\n\n\t\tif (!frappe.meta.has_field(this.doctype, 'status') && has_status_values) {\n\t\t\tdoctype_fields = [{\n\t\t\t\tlabel: __('Status'),\n\t\t\t\tfieldname: 'docstatus',\n\t\t\t\tfieldtype: 'Data'\n\t\t\t}].concat(doctype_fields);\n\t\t}\n\n\t\tdoctype_fields = [{\n\t\t\tlabel: __('ID', null, 'Label of name column in report'),\n\t\t\tfieldname: 'name',\n\t\t\tfieldtype: 'Data',\n\t\t\treqd: 1\n\t\t}].concat(doctype_fields, std_fields);\n\n\t\tout[this.doctype] = doctype_fields;\n\n\t\tconst table_fields = frappe.meta.get_table_fields(this.doctype);\n\n\t\ttable_fields.forEach(df => {\n\t\t\tconst cdt = df.options;\n\t\t\tconst child_table_fields = frappe.meta.get_docfields(cdt).filter(standard_fields_filter);\n\n\t\t\tout[cdt] = child_table_fields;\n\n\t\t\t// add index column for child tables\n\t\t\tout[cdt].push({\n\t\t\t\tlabel: __('Index'),\n\t\t\t\tfieldname: 'idx',\n\t\t\t\tfieldtype: 'Int',\n\t\t\t\tparent: cdt\n\t\t\t});\n\t\t});\n\t\treturn out;\n\t}\n\n\tget_dialog_fields() {\n\t\tconst dialog_fields = [];\n\t\tconst columns = this.get_columns_for_picker();\n\n\t\tdialog_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: this.doctype,\n\t\t\tfieldtype: 'MultiCheck',\n\t\t\tcolumns: 2,\n\t\t\toptions: columns[this.doctype]\n\t\t\t\t.filter(df => {\n\t\t\t\t\treturn !df.hidden && df.fieldname !== 'name';\n\t\t\t\t})\n\t\t\t\t.map(df => ({\n\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\tvalue: df.fieldname,\n\t\t\t\t\tchecked: this.fields.find(f => f[0] === df.fieldname && f[1] === this.doctype)\n\t\t\t\t}))\n\t\t});\n\n\t\tdelete columns[this.doctype];\n\n\t\tconst table_fields = frappe.meta.get_table_fields(this.doctype)\n\t\t\t.filter(df => !df.hidden);\n\n\t\ttable_fields.forEach(df => {\n\t\t\tconst cdt = df.options;\n\n\t\t\tdialog_fields.push({\n\t\t\t\tlabel: __(df.label) + ` (${__(cdt)})`,\n\t\t\t\tfieldname: df.options,\n\t\t\t\tfieldtype: 'MultiCheck',\n\t\t\t\tcolumns: 2,\n\t\t\t\toptions: columns[cdt]\n\t\t\t\t\t.filter(df => {\n\t\t\t\t\t\treturn !df.hidden;\n\t\t\t\t\t})\n\t\t\t\t\t.map(df => ({\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\tvalue: df.fieldname,\n\t\t\t\t\t\tchecked: this.fields.find(f => f[0] === df.fieldname && f[1] === cdt)\n\t\t\t\t\t}))\n\t\t\t});\n\t\t});\n\n\t\treturn dialog_fields;\n\t}\n\n\tis_column_added(df) {\n\t\treturn Boolean(\n\t\t\tthis.fields.find(f => f[0] === df.fieldname && df.parent === f[1])\n\t\t);\n\t}\n\n\tsetup_columns() {\n\t\t// apply previous column width\n\t\tlet column_widths = null;\n\t\tif (this.columns) {\n\t\t\tcolumn_widths = this.get_column_widths();\n\t\t}\n\n\t\tthis.columns = [];\n\t\tthis.columns_map = {};\n\n\t\tfor (let f of this.fields) {\n\t\t\tlet column;\n\t\t\tif (f[0]!=='docstatus') {\n\t\t\t\tcolumn = this.build_column(f);\n\t\t\t} else {\n\t\t\t\t// if status is not in fields append status column derived from docstatus\n\t\t\t\tif (!this.fields.includes(['status', this.doctype]) && !frappe.meta.has_field(this.doctype, 'status')) {\n\t\t\t\t\tcolumn = this.build_column(['docstatus', this.doctype]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (column) {\n\t\t\t\tif (column_widths) {\n\t\t\t\t\tcolumn.width = column_widths[column.id] || column.width || 120;\n\t\t\t\t}\n\t\t\t\tthis.columns.push(column);\n\t\t\t\tthis.columns_map[column.id] = column;\n\t\t\t}\n\t\t}\n\t}\n\n\tbuild_column(c) {\n\n\t\tlet [fieldname, doctype] = c;\n\t\tlet docfield = frappe.meta.docfield_map[doctype || this.doctype][fieldname];\n\n\t\t// group by column\n\t\tif (fieldname === '_aggregate_column') {\n\t\t\tdocfield = this.group_by_control.get_group_by_docfield();\n\t\t}\n\n\t\t// child table index column\n\t\tif (fieldname === 'idx' && doctype !== this.doctype) {\n\t\t\tdocfield = {\n\t\t\t\tlabel: \"Index\",\n\t\t\t\tfieldtype: \"Int\",\n\t\t\t\tparent: doctype,\n\t\t\t};\n\t\t}\n\n\t\tif (!docfield) {\n\t\t\tdocfield = frappe.model.get_std_field(fieldname, true);\n\n\t\t\tif (docfield) {\n\t\t\t\tif(!docfield.label) {\n\t\t\t\t\tdocfield.label = toTitle(fieldname);\n\t\t\t\t\tif(docfield.label.includes('_')) {\n\t\t\t\t\t\tdocfield.label = docfield.label.replace('_',' ');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdocfield.parent = this.doctype;\n\t\t\t\tif (fieldname == 'name') {\n\t\t\t\t\tdocfield.options = this.doctype;\n\t\t\t\t}\n\t\t\t\tif (fieldname == 'docstatus' && !frappe.meta.has_field(this.doctype, 'status')) {\n\t\t\t\t\tdocfield.label = 'Status';\n\t\t\t\t\tdocfield.fieldtype = 'Data';\n\t\t\t\t\tdocfield.name = 'status';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!docfield || docfield.report_hide) return;\n\n\t\tlet title = __(docfield.label);\n\t\tif (doctype !== this.doctype) {\n\t\t\ttitle += ` (${__(doctype)})`;\n\t\t}\n\n\t\tconst editable = frappe.model.is_non_std_field(fieldname) && !docfield.read_only && !docfield.is_virtual;\n\n\t\tconst align = (() => {\n\t\t\tconst is_numeric = frappe.model.is_numeric_field(docfield);\n\t\t\tif (is_numeric) {\n\t\t\t\treturn 'right';\n\t\t\t}\n\t\t\treturn docfield.fieldtype === 'Date' ? 'right' : 'left';\n\t\t})();\n\n\t\tlet id = fieldname;\n\n\t\t// child table column\n\t\tif (doctype !== this.doctype && fieldname !== '_aggregate_column') {\n\t\t\tid = `${doctype}:${fieldname}`;\n\t\t}\n\n\t\tlet width = (docfield ? cint(docfield.width) : null) || null;\n\t\tif (this.report_doc) {\n\t\t\t// load the user saved column width\n\t\t\tlet saved_column_widths = this.report_doc.json.column_widths || {};\n\t\t\twidth = saved_column_widths[id] || width;\n\t\t}\n\n\t\tlet compareFn = null;\n\t\tif (docfield.fieldtype === 'Date') {\n\t\t\tcompareFn = (cell, keyword) => {\n\t\t\t\tif (!cell.content) return null;\n\t\t\t\tif (keyword.length !== 'YYYY-MM-DD'.length) return null;\n\n\t\t\t\tconst keywordValue = frappe.datetime.user_to_obj(keyword);\n\t\t\t\tconst cellValue = frappe.datetime.str_to_obj(cell.content);\n\t\t\t\treturn [+cellValue, +keywordValue];\n\t\t\t}\n\t\t}\n\n\n\t\treturn {\n\t\t\tid: id,\n\t\t\tfield: fieldname,\n\t\t\tname: title,\n\t\t\tcontent: title,\n\t\t\tdocfield,\n\t\t\twidth,\n\t\t\teditable,\n\t\t\talign,\n\t\t\tcompareValue: compareFn,\n\t\t\tformat: (value, row, column, data) => {\n\t\t\t\tlet doc = null;\n\t\t\t\tif (Array.isArray(row)) {\n\t\t\t\t\tdoc = row.reduce((acc, curr) => {\n\t\t\t\t\t\tif (!curr.column.docfield) return acc;\n\t\t\t\t\t\tacc[curr.column.docfield.fieldname] = curr.content;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\t\t\t\t} else {\n\t\t\t\t\tdoc = row;\n\t\t\t\t}\n\n\t\t\t\treturn frappe.format(value, column.docfield, { always_show_decimals: true }, doc);\n\t\t\t}\n\t\t};\n\t}\n\n\tbuild_rows(data) {\n\t\tconst out = data.map(d => this.build_row(d));\n\n\t\tif (this.add_totals_row) {\n\t\t\tconst totals = this.get_columns_totals(data);\n\t\t\tconst totals_row = this.columns.map((col, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: __('Totals Row'),\n\t\t\t\t\tcontent: totals[col.id],\n\t\t\t\t\tformat: value => {\n\t\t\t\t\t\tlet formatted_value = frappe.format(value, col.docfield, {\n\t\t\t\t\t\t\talways_show_decimals: true\n\t\t\t\t\t\t}, data[0]);\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\treturn this.format_total_cell(formatted_value, col);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn formatted_value;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tout.push(totals_row);\n\t\t}\n\t\treturn out;\n\t}\n\n\tformat_total_cell(formatted_value, df) {\n\t\tlet cell_value = __('Totals').bold();\n\t\tif (frappe.model.is_numeric_field(df.docfield)) {\n\t\t\tcell_value = `<span class=\"flex justify-between\">\n\t\t\t\t${cell_value} ${$(formatted_value).text()}\n\t\t\t</span>`;\n\t\t}\n\t\treturn cell_value;\n\t}\n\n\tbuild_row(d) {\n\t\treturn this.columns.map(col => {\n\t\t\tif (col.docfield.parent !== this.doctype) {\n\t\t\t\t// child table field\n\t\t\t\tconst cdt_field = f => `${col.docfield.parent}:${f}`;\n\t\t\t\tconst name = d[cdt_field('name')];\n\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tdoctype: col.docfield.parent,\n\t\t\t\t\tcontent: d[cdt_field(col.field)] || d[col.field],\n\t\t\t\t\teditable: Boolean(name && this.is_editable(col.docfield, d)),\n\t\t\t\t\tformat: value => {\n\t\t\t\t\t\treturn frappe.format(value, col.docfield, { always_show_decimals: true }, d);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (col.field === 'docstatus' && !frappe.meta.has_field(this.doctype, 'status')) {\n\t\t\t\t// get status from docstatus\n\t\t\t\tlet status = frappe.get_indicator(d, this.doctype);\n\t\t\t\tif (status) {\n\t\t\t\t\tif (!status[0]) {\n\t\t\t\t\t\t// get_indicator returns the dependent field's condition as the 3rd parameter\n\t\t\t\t\t\tlet dependent_col = status[2].split(',')[0];\n\t\t\t\t\t\t// add status dependency column\n\t\t\t\t\t\tthis.add_status_dependency_column(dependent_col, this.doctype);\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: d.name,\n\t\t\t\t\t\tdoctype: col.docfield.parent,\n\t\t\t\t\t\tcontent: status[0],\n\t\t\t\t\t\teditable: false\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// no status values found\n\t\t\t\t\tthis.remove_column_from_datatable(col);\n\t\t\t\t}\n\t\t\t} else if (col.field in d) {\n\t\t\t\tconst value = d[col.field];\n\t\t\t\treturn {\n\t\t\t\t\tname: d.name,\n\t\t\t\t\tdoctype: col.docfield.parent,\n\t\t\t\t\tcontent: value,\n\t\t\t\t\teditable: this.is_editable(col.docfield, d)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcontent: ''\n\t\t\t};\n\t\t});\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst indexes = this.datatable.rowmanager.getCheckedRows();\n\t\tconst items = indexes.map(i => this.data[i]).filter(i => i != undefined);\n\n\t\tif (only_docnames) {\n\t\t\treturn items.map(d => d.name);\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tsave_report(save_type) {\n\t\tconst _save_report = (name) => {\n\t\t\t// callback\n\t\t\tconst report_settings = {\n\t\t\t\tfilters: this.filter_area.get(),\n\t\t\t\tfields: this.fields,\n\t\t\t\torder_by: this.sort_selector.get_sql_string(),\n\t\t\t\tadd_totals_row: this.add_totals_row,\n\t\t\t\tpage_length: this.page_length,\n\t\t\t\tcolumn_widths: this.get_column_widths(),\n\t\t\t\tgroup_by: this.group_by_control.get_settings(),\n\t\t\t\tchart_args: this.get_chart_settings()\n\t\t\t};\n\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: 'frappe.desk.reportview.save_report',\n\t\t\t\targs: {\n\t\t\t\t\tname: name,\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\treport_settings: JSON.stringify(report_settings)\n\t\t\t\t},\n\t\t\t\tcallback:(r) => {\n\t\t\t\t\tif(r.exc) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"Report was not saved (there were errors)\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(r.message != this.report_name) {\n\t\t\t\t\t\t// Rerender the reports dropdown,\n\t\t\t\t\t\t// so that this report is included in the dropdown as well.\n\t\t\t\t\t\tfrappe.boot.user.all_reports[r.message] = {\n\t\t\t\t\t\t\tref_doctype: this.doctype,\n\t\t\t\t\t\t\treport_type: \"Report Builder\",\n\t\t\t\t\t\t\ttitle: r.message,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfrappe.set_route('List', this.doctype, 'Report', r.message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// update state\n\t\t\t\t\tthis.report_doc.json = report_settings;\n\t\t\t\t\tthis.set_dirty_state_for_custom_report();\n\t\t\t\t}\n\t\t\t});\n\n\t\t};\n\n\t\tif(this.report_name && save_type == \"save\") {\n\t\t\t_save_report(this.report_name);\n\t\t} else {\n\t\t\tfrappe.prompt({fieldname: 'name', label: __('New Report name'), reqd: 1, fieldtype: 'Data'}, (data) => {\n\t\t\t\t_save_report(data.name);\n\t\t\t}, __('Save As'));\n\t\t}\n\t}\n\n\tdelete_report() {\n\t\treturn frappe.call({\n\t\t\tmethod: 'frappe.desk.reportview.delete_report',\n\t\t\targs: { name: this.report_name },\n\t\t\tcallback(response) {\n\t\t\t\tif (response.exc) return;\n\t\t\t\twindow.history.back();\n\t\t\t}\n\t\t});\n\t}\n\n\tget_column_widths() {\n\t\tif (this.datatable) {\n\t\t\treturn this.datatable\n\t\t\t\t.datamanager\n\t\t\t\t.getColumns(true)\n\t\t\t\t.reduce((acc, curr) => {\n\t\t\t\t\tacc[curr.id] = parseInt(curr.width);\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {});\n\t\t}\n\n\t\treturn {};\n\t}\n\n\tget_report_doc() {\n\t\treturn new Promise(resolve => {\n\t\t\tfrappe.model.with_doc('Report', this.report_name, () => {\n\t\t\t\tresolve(frappe.get_doc('Report', this.report_name));\n\t\t\t});\n\t\t});\n\t}\n\n\tget_filters_html_for_print() {\n\t\tconst filters = this.filter_area.get();\n\n\t\treturn filters.map(f => {\n\t\t\tconst [doctype, fieldname, condition, value] = f;\n\t\t\tif (condition !== '=') return '';\n\n\t\t\tconst label = frappe.meta.get_label(doctype, fieldname);\n\t\t\treturn `<h6>${__(label)}: ${value}</h6>`;\n\t\t}).join('');\n\t}\n\n\tget_columns_totals(data) {\n\t\tif (!this.add_totals_row) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst row_totals = {};\n\n\t\tthis.columns.forEach((col, i) => {\n\t\t\tconst totals = data.reduce((totals, d) => {\n\t\t\t\tif (col.id in d && frappe.model.is_numeric_field(col.docfield)) {\n\t\t\t\t\ttotals += flt(d[col.id]);\n\t\t\t\t\treturn totals;\n\t\t\t\t}\n\t\t\t}, 0);\n\n\t\t\trow_totals[col.id] = totals;\n\t\t});\n\n\t\treturn row_totals;\n\t}\n\n\treport_menu_items() {\n\t\tlet items = [\n\t\t\t{\n\t\t\t\tlabel: __('Show Totals'),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.add_totals_row = !this.add_totals_row;\n\t\t\t\t\tthis.save_view_user_settings({\n\t\t\t\t\t\tadd_totals_row: this.add_totals_row\n\t\t\t\t\t});\n\t\t\t\t\tthis.datatable.refresh(this.get_data(this.data));\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: () => {\n\t\t\t\t\t// prepare rows in their current state, sorted and filtered\n\t\t\t\t\tconst rows_in_order = this.datatable.datamanager.rowViewOrder.map(index => {\n\t\t\t\t\t\tif (this.datatable.bodyRenderer.visibleRowIndices.includes(index)) {\n\t\t\t\t\t\t\treturn this.data[index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}).filter(Boolean);\n\n\t\t\t\t\tif (this.add_totals_row) {\n\t\t\t\t\t\tconst total_data = this.get_columns_totals(this.data);\n\n\t\t\t\t\t\ttotal_data['name'] = __('Totals').bold();\n\t\t\t\t\t\trows_in_order.push(total_data);\n\t\t\t\t\t}\n\n\t\t\t\t\tfrappe.ui.get_print_settings(false, (print_settings) => {\n\t\t\t\t\t\tvar title =  this.report_name || __(this.doctype);\n\t\t\t\t\t\tfrappe.render_grid({\n\t\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\t\tsubtitle: this.get_filters_html_for_print(),\n\t\t\t\t\t\t\tprint_settings: print_settings,\n\t\t\t\t\t\t\tcolumns: this.columns,\n\t\t\t\t\t\t\tdata: rows_in_order\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Toggle Chart'),\n\t\t\t\taction: () => this.toggle_charts()\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Toggle Sidebar'),\n\t\t\t\taction: () => this.toggle_side_bar(),\n\t\t\t\tshortcut: 'Ctrl+K',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Pick Columns'),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Pick Columns'),\n\t\t\t\t\t\tfields: this.get_dialog_fields(),\n\t\t\t\t\t\tprimary_action: (values) => {\n\t\t\t\t\t\t\t// doctype fields\n\t\t\t\t\t\t\tlet fields = values[this.doctype].map(f => [f, this.doctype]);\n\t\t\t\t\t\t\tdelete values[this.doctype];\n\n\t\t\t\t\t\t\t// child table fields\n\t\t\t\t\t\t\tfor (let cdt in values) {\n\t\t\t\t\t\t\t\tfields = fields.concat(values[cdt].map(f => [f, cdt]));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// always keep name (ID) column\n\t\t\t\t\t\t\tthis.fields = [[\"name\", this.doctype], ...fields];\n\n\t\t\t\t\t\t\tthis.fields.map(f => this.add_currency_column(f[0], f[1]));\n\n\t\t\t\t\t\t\tthis.reorder_fields();\n\t\t\t\t\t\t\tthis.build_fields();\n\t\t\t\t\t\t\tthis.setup_columns();\n\n\t\t\t\t\t\t\tthis.datatable.destroy();\n\t\t\t\t\t\t\tthis.datatable = null;\n\t\t\t\t\t\t\tthis.refresh();\n\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\td.$body.prepend(`\n\t\t\t\t\t\t<div class=\"columns-search\">\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"${__('Search')}\" data-element=\"search\" class=\"form-control input-xs\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`);\n\n\t\t\t\t\tfrappe.utils.setup_search(d.$body, '.unit-checkbox', '.label-area');\n\t\t\t\t\td.show();\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tif (frappe.model.can_export(this.doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __('Export'),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst args = this.get_args();\n\t\t\t\t\tconst selected_items = this.get_checked_items(true);\n\t\t\t\t\tlet fields = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\t\t\tlabel: __('Select File Type'),\n\t\t\t\t\t\t\tfieldname:'file_format_type',\n\t\t\t\t\t\t\toptions: ['Excel', 'CSV'],\n\t\t\t\t\t\t\tdefault: 'Excel'\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\tif (this.total_count > this.count_without_children || args.page_length) {\n\t\t\t\t\t\tfields.push({\n\t\t\t\t\t\t\tfieldtype: 'Check',\n\t\t\t\t\t\t\tfieldname: 'export_all_rows',\n\t\t\t\t\t\t\tlabel: __('Export All {0} rows?', [(this.total_count + \"\").bold()])\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __(\"Export Report: {0}\",[__(this.doctype)]),\n\t\t\t\t\t\tfields: fields,\n\t\t\t\t\t\tprimary_action_label: __('Download'),\n\t\t\t\t\t\tprimary_action: (data) => {\n\t\t\t\t\t\t\targs.cmd = 'frappe.desk.reportview.export_query';\n\t\t\t\t\t\t\targs.file_format_type = data.file_format_type;\n\t\t\t\t\t\t\targs.title = this.report_name || this.doctype;\n\n\t\t\t\t\t\t\tif(this.add_totals_row) {\n\t\t\t\t\t\t\t\targs.add_totals_row = 1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(selected_items.length > 0) {\n\t\t\t\t\t\t\t\targs.selected_items = selected_items;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!data.export_all_rows) {\n\t\t\t\t\t\t\t\targs.start = 0;\n\t\t\t\t\t\t\t\targs.page_length = this.data.length;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete args.start;\n\t\t\t\t\t\t\t\tdelete args.page_length;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\topen_url_post(frappe.request.url, args);\n\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\td.show();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Setup Auto Email\"),\n\t\t\taction: () => {\n\t\t\t\tif(this.report_name) {\n\t\t\t\t\tfrappe.set_route('List', 'Auto Email Report', {'report' : this.report_name});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__('Please save the report first'));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst can_edit_or_delete = (action) => {\n\t\t\tconst method = action == \"delete\" ? \"can_delete\" : \"can_write\";\n\t\t\treturn (\n\t\t\t\tthis.report_doc\n\t\t\t\t&& this.report_doc.is_standard !== \"Yes\"\n\t\t\t\t&& (\n\t\t\t\t\tfrappe.model[method](\"Report\")\n\t\t\t\t\t|| this.report_doc.owner === frappe.session.user\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\t// A user with role Report Manager or Report Owner can save\n\t\tif (can_edit_or_delete()) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Save\"),\n\t\t\t\taction: () => this.save_report('save')\n\t\t\t});\n\t\t}\n\n\t\t// anyone can save as\n\t\titems.push({\n\t\t\tlabel: __('Save As'),\n\t\t\taction: () => this.save_report('save_as')\n\t\t});\n\n\t\t// A user with role Report Manager or Report Owner can delete\n\t\tif (can_edit_or_delete(\"delete\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Delete\"),\n\t\t\t\taction: () => frappe.confirm(\n\t\t\t\t\t\"Are you sure you want to delete this report?\",\n\t\t\t\t\t() => this.delete_report(),\n\t\t\t\t),\n\t\t\t\tshortcut: \"Shift+Ctrl+D\"\n\t\t\t});\n\t\t}\n\n\t\t// user permissions\n\t\tif(this.report_name && frappe.model.can_set_user_permissions(\"Report\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst args = {\n\t\t\t\t\t\tdoctype: \"Report\",\n\t\t\t\t\t\tname: this.report_name\n\t\t\t\t\t};\n\t\t\t\t\tfrappe.set_route('List', 'User Permission', args);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn items.map(i => Object.assign(i, { standard: true }));\n\t}\n\n};\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport DataTable from 'frappe-datatable';\n\nfrappe.provide('frappe.widget.utils');\nfrappe.provide('frappe.views');\nfrappe.provide('frappe.query_reports');\n\nfrappe.standard_pages['query-report'] = function() {\n\tvar wrapper = frappe.container.add_page('query-report');\n\n\tfrappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: __('Query Report'),\n\t\tsingle_column: true,\n\t});\n\n\tfrappe.query_report = new frappe.views.QueryReport({\n\t\tparent: wrapper,\n\t});\n\n\t$(wrapper).bind('show', function() {\n\t\tfrappe.query_report.show();\n\t});\n};\n\nfrappe.views.QueryReport = class QueryReport extends frappe.views.BaseList {\n\tshow() {\n\t\tthis.init().then(() => this.load());\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) {\n\t\t\treturn this.init_promise;\n\t\t}\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_report_wrapper,\n\t\t\tthis.setup_events\n\t\t].map(fn => fn.bind(this));\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.route = frappe.get_route();\n\t\tthis.page_name = frappe.get_route_str();\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\n\t\t// throttle refresh for 300ms\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 300);\n\n\t\tthis.menu_items = [];\n\t}\n\n\tset_default_secondary_action() {\n\t\tthis.refresh_button && this.refresh_button.remove();\n\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\tthis.setup_progress_bar();\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_no_result_message() {\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"/assets/frappe/images/ui-states/list-empty-state.svg\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${__('Nothing to show')}</p>\n\t\t</div>`;\n\t}\n\n\tsetup_events() {\n\t\tfrappe.realtime.on(\"report_generated\", (data) => {\n\t\t\tthis.toggle_primary_button_disabled(false);\n\t\t\tif(data.report_name) {\n\t\t\t\tthis.prepared_report_action = \"Rebuild\";\n\t\t\t\t// If generated report and currently active Prepared Report has same fiters\n\t\t\t\t// then refresh the Prepared Report\n\t\t\t\t// Otherwise show alert with the link to the Prepared Report\n\t\t\t\tif(data.name == this.prepared_report_doc_name) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t} else {\n\t\t\t\t\tlet alert_message = `Report ${this.report_name} generated.\n\t\t\t\t\t\t<a href=\"#query-report/${this.report_name}/?prepared_report_name=${data.name}\">View</a>`;\n\t\t\t\t\tfrappe.show_alert({message: alert_message, indicator: 'orange'});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.page.wrapper.on('click', '[data-action]', (e) => {\n\t\t\tlet action_name = $(e.currentTarget).data('action');\n\t\t\tlet action = this[action_name];\n\t\t\tif (action.call) {\n\t\t\t\taction.call(this, e);\n\t\t\t}\n\t\t});\n\t}\n\n\tload() {\n\t\tif (frappe.get_route().length < 2) {\n\t\t\tthis.toggle_nothing_to_show(true);\n\t\t\treturn;\n\t\t}\n\n\t\tlet route_options = {};\n\t\troute_options = Object.assign(route_options, frappe.route_options);\n\n\t\tif (this.report_name !== frappe.get_route()[1]) {\n\t\t\t// different report\n\t\t\tthis.load_report(route_options);\n\t\t}\n\t\telse if (frappe.has_route_options()) {\n\t\t\t// filters passed through routes\n\t\t\t// so refresh report again\n\t\t\tthis.refresh_report(route_options);\n\t\t} else {\n\t\t\t// same report\n\t\t\t// don't do anything to preserve state\n\t\t\t// like filters and datatable column widths\n\t\t}\n\t}\n\n\tload_report(route_options) {\n\t\tthis.page.clear_inner_toolbar();\n\t\tthis.route = frappe.get_route();\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.report_name = this.route[1];\n\t\tthis.page_title = __(this.report_name);\n\t\tthis.show_save = false;\n\t\tthis.menu_items = this.get_menu_items();\n\t\tthis.datatable = null;\n\t\tthis.prepared_report_action = \"New\";\n\n\t\tfrappe.run_serially([\n\t\t\t() => this.get_report_doc(),\n\t\t\t() => this.get_report_settings(),\n\t\t\t() => this.setup_progress_bar(),\n\t\t\t() => this.setup_page_head(),\n\t\t\t() => this.refresh_report(route_options),\n\t\t\t() => this.add_chart_buttons_to_toolbar(true),\n\t\t\t() => this.add_card_button_to_toolbar(true),\n\t\t]);\n\t}\n\n\tadd_card_button_to_toolbar() {\n\t\tthis.page.add_inner_button(__(\"Create Card\"), () => {\n\t\t\tthis.add_card_to_dashboard();\n\t\t});\n\t}\n\n\tadd_chart_buttons_to_toolbar(show) {\n\t\tif (show) {\n\t\t\tthis.create_chart_button && this.create_chart_button.remove();\n\t\t\tthis.create_chart_button = this.page.add_button(__(\"Set Chart\"), () => {\n\t\t\t\tthis.open_create_chart_dialog();\n\t\t\t});\n\n\t\t\tif (this.chart_fields || this.chart_options) {\n\t\t\t\tthis.add_to_dashboard_button && this.add_to_dashboard_button.remove();\n\t\t\t\tthis.add_to_dashboard_button = this.page.add_button(__(\"Add Chart to Dashboard\"), () => {\n\t\t\t\t\tthis.add_chart_to_dashboard();\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.create_chart_button && this.create_chart_button.remove();\n\t\t\tthis.add_to_dashboard_button && this.add_to_dashboard_button.remove();\n\t\t}\n\t}\n\n\tadd_card_to_dashboard() {\n\t\tlet field_options = frappe.report_utils.get_field_options_from_report(this.columns, this.raw_data);\n\t\tconst dashboard_field = frappe.dashboard_utils.get_dashboard_link_field();\n\t\tconst set_standard = frappe.boot.developer_mode;\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Create Card'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'report_field',\n\t\t\t\t\tlabel: __('Field'),\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: field_options.numeric_fields,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'report_function',\n\t\t\t\t\tlabel: __('Function'),\n\t\t\t\t\toptions: ['Sum', 'Average', 'Minimum', 'Maximum'],\n\t\t\t\t\tfieldtype: 'Select'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_1',\n\t\t\t\t\tlabel: __('Add to Dashboard'),\n\t\t\t\t\tfieldtype: 'Section Break'\n\t\t\t\t},\n\t\t\t\tdashboard_field,\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'label',\n\t\t\t\t\tlabel: __('Card Label'),\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action_label: __('Add'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tif (!values.label) {\n\t\t\t\t\tvalues.label = `${values.report_function} of ${toTitle(values.report_field)}`;\n\t\t\t\t}\n\t\t\t\tthis.create_number_card(values, values.dashboard, values.label, set_standard);\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\n\t}\n\n\tadd_chart_to_dashboard() {\n\t\tif (this.chart_fields || this.chart_options) {\n\t\t\tconst dashboard_field = frappe.dashboard_utils.get_dashboard_link_field();\n\t\t\tconst set_standard = frappe.boot.developer_mode;\n\n\t\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\t\ttitle: __('Create Chart'),\n\t\t\t\tfields: [\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldname: 'dashboard_chart_name',\n\t\t\t\t\t\tlabel: 'Chart Name',\n\t\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\t},\n\t\t\t\t\tdashboard_field,\n\t\t\t\t],\n\t\t\t\tprimary_action_label: __('Add'),\n\t\t\t\tprimary_action: (values) => {\n\t\t\t\t\tthis.create_dashboard_chart(\n\t\t\t\t\t\tthis.chart_fields || this.chart_options,\n\t\t\t\t\t\tvalues.dashboard,\n\t\t\t\t\t\tvalues.dashboard_chart_name,\n\t\t\t\t\t\tset_standard\n\t\t\t\t\t);\n\t\t\t\t\tdialog.hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__('Please Set Chart'));\n\t\t}\n\t}\n\n\tcreate_number_card(values, dashboard_name, card_name, set_standard) {\n\t\tlet args = {\n\t\t\t'dashboard': dashboard_name || null,\n\t\t\t'type': 'Report',\n\t\t\t'report_name': this.report_name,\n\t\t\t'filters_json': JSON.stringify(this.get_filter_values()),\n\t\t\tset_standard: set_standard,\n\t\t};\n\t\tObject.assign(args, values);\n\n\t\tthis.add_to_dashboard(\n\t\t\t'frappe.desk.doctype.number_card.number_card.create_report_number_card',\n\t\t\targs,\n\t\t\tdashboard_name,\n\t\t\tcard_name,\n\t\t\t'Number Card'\n\t\t);\n\t}\n\n\tcreate_dashboard_chart(chart_args, dashboard_name, chart_name, set_standard) {\n\t\tlet args = {\n\t\t\t'dashboard': dashboard_name || null,\n\t\t\t'chart_type': 'Report',\n\t\t\t'report_name': this.report_name,\n\t\t\t'type': chart_args.chart_type || frappe.model.unscrub(chart_args.type),\n\t\t\t'color': chart_args.color,\n\t\t\t'filters_json': JSON.stringify(this.get_filter_values()),\n\t\t\t'custom_options': {},\n\t\t\t'set_standard': set_standard,\n\t\t};\n\n\t\tfor (let key in chart_args) {\n\t\t\tif (key != \"data\") {\n\t\t\t\targs['custom_options'][key] = chart_args[key];\n\t\t\t}\n\t\t}\n\n\t\tif (this.chart_fields) {\n\t\t\tlet x_field_title = toTitle(chart_args.x_field);\n\t\t\tlet y_field_title = toTitle(chart_args.y_fields[0]);\n\t\t\tchart_name = chart_name || (`${this.report_name}: ${x_field_title} vs ${y_field_title}`);\n\n\t\t\tObject.assign(args,\n\t\t\t\t{\n\t\t\t\t\t'chart_name': chart_name,\n\t\t\t\t\t'x_field': chart_args.x_field,\n\t\t\t\t\t'y_axis': chart_args.y_axis_fields.map(f => {\n\t\t\t\t\t\treturn {'y_field': f.y_field, 'color': f.color};\n\t\t\t\t\t}),\n\t\t\t\t\t'use_report_chart': 0\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tchart_name = chart_name || this.report_name;\n\t\t\tObject.assign(args,\n\t\t\t\t{\n\t\t\t\t\t'chart_name': chart_name,\n\t\t\t\t\t'use_report_chart': 1\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.add_to_dashboard(\n\t\t\t'frappe.desk.doctype.dashboard_chart.dashboard_chart.create_report_chart',\n\t\t\targs,\n\t\t\tdashboard_name,\n\t\t\tchart_name,\n\t\t\t'Dashboard Chart'\n\t\t);\n\t}\n\n\tadd_to_dashboard(method, args, dashboard_name, name, doctype) {\n\t\tfrappe.xcall(\n\t\t\tmethod,\n\t\t\t{args: args}\n\t\t).then(() => {\n\t\t\tlet message;\n\t\t\tif (dashboard_name) {\n\t\t\t\tlet dashboard_route_html = `<a href=\"#dashboard-view/${dashboard_name}\">${dashboard_name}</a>`;\n\t\t\t\tmessage = __(\"New {0} {1} added to Dashboard {2}\", [__(doctype), name, dashboard_route_html]);\n\t\t\t} else {\n\t\t\t\tmessage = __(\"New {0} {1} created\", [__(doctype), name]);\n\t\t\t}\n\n\t\t\tfrappe.msgprint(message, __(\"New {0} Created\", [__(doctype)]));\n\t\t});\n\t}\n\n\trefresh_report(route_options) {\n\t\tthis.toggle_message(true);\n\t\tthis.toggle_report(false);\n\n\t\treturn frappe.run_serially([\n\t\t\t() => this.setup_filters(),\n\t\t\t() => this.set_route_filters(route_options),\n\t\t\t() => this.page.clear_custom_actions(),\n\t\t\t() => this.report_settings.onload && this.report_settings.onload(this),\n\t\t\t() => this.refresh()\n\t\t]);\n\t}\n\n\tget_report_doc() {\n\t\treturn frappe.model.with_doc('Report', this.report_name)\n\t\t\t.then(doc => {\n\t\t\t\tthis.report_doc = doc;\n\t\t\t})\n\t\t\t.then(() => frappe.model.with_doctype(this.report_doc.ref_doctype));\n\t}\n\n\tget_report_settings() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (frappe.query_reports[this.report_name]) {\n\t\t\t\tthis.report_settings = frappe.query_reports[this.report_name];\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tfrappe.xcall('frappe.desk.query_report.get_script', {\n\t\t\t\t\treport_name: this.report_name\n\t\t\t\t}).then(settings => {\n\t\t\t\t\tfrappe.dom.eval(settings.script || '');\n\t\t\t\t\tfrappe.after_ajax(() => {\n\t\t\t\t\t\tthis.report_settings = this.get_local_report_settings();\n\t\t\t\t\t\tthis.report_settings.html_format = settings.html_format;\n\t\t\t\t\t\tthis.report_settings.execution_time = settings.execution_time || 0;\n\t\t\t\t\t\tfrappe.query_reports[this.report_name] = this.report_settings;\n\n\t\t\t\t\t\tif (this.report_doc.filters && !this.report_settings.filters) {\n\t\t\t\t\t\t\t// add configured filters\n\t\t\t\t\t\t\tthis.report_settings.filters = this.report_doc.filters;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t\t}).catch(reject);\n\t\t\t}\n\t\t});\n\t}\n\n\tget_local_report_settings() {\n\t\tlet report_script_name = this.report_doc.report_type === 'Custom Report'\n\t\t\t? this.report_doc.reference_report\n\t\t\t: this.report_name;\n\t\treturn frappe.query_reports[report_script_name] || {};\n\t}\n\n\tsetup_progress_bar() {\n\t\tlet seconds_elapsed = 0;\n\t\tconst execution_time = this.report_settings.execution_time || 0;\n\n\t\tif (execution_time < 5) return;\n\n\t\tthis.interval = setInterval(function()  {\n\t\t\tseconds_elapsed += 1;\n\t\t\tfrappe.show_progress(__('Preparing Report'), seconds_elapsed, execution_time);\n\t\t}, 1000);\n\t}\n\n\trefresh_filters_dependency() {\n\t\tthis.filters.forEach(filter => {\n\t\t\tfilter.guardian_has_value = true;\n\n\t\t\tif (filter.df.depends_on) {\n\t\t\t\tfilter.guardian_has_value =\n\t\t\t\t\tthis.evaluate_depends_on_value(filter.df.depends_on, filter.df.label);\n\n\t\t\t\tif (filter.guardian_has_value) {\n\t\t\t\t\tif (filter.df.hidden_due_to_dependency) {\n\t\t\t\t\t\tfilter.df.hidden_due_to_dependency = false;\n\t\t\t\t\t\tthis.toggle_filter_display(filter.df.fieldname, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!filter.df.hidden_due_to_dependency) {\n\t\t\t\t\t\tfilter.df.hidden_due_to_dependency = true;\n\t\t\t\t\t\tthis.toggle_filter_display(filter.df.fieldname, true);\n\t\t\t\t\t\tfilter.set_value(filter.df.default || null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t}\n\n\tevaluate_depends_on_value(expression, filter_label) {\n\t\tlet out = null;\n\t\tlet doc = this.get_filter_values();\n\t\tif (doc) {\n\t\t\tif (typeof expression === 'boolean') {\n\t\t\t\tout = expression;\n\t\t\t} else if (expression.substr(0, 5) == 'eval:') {\n\t\t\t\ttry {\n\t\t\t\t\tout = frappe.utils.eval(expression.substr(5), { doc });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tfrappe.throw(__('Invalid \"depends_on\" expression set in filter {0}', [filter_label]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = doc[expression];\n\t\t\t\tif ($.isArray(value)) {\n\t\t\t\t\tout = !!value.length;\n\t\t\t\t} else {\n\t\t\t\t\tout = !!value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\tsetup_filters() {\n\t\tthis.clear_filters();\n\t\tconst { filters = [] } = this.report_settings;\n\n\t\tlet filter_area = this.page.page_form;\n\n\t\tthis.filters = filters.map(df => {\n\t\t\tif (df.fieldtype === 'Break') return;\n\n\t\t\tlet f = this.page.add_field(df, filter_area);\n\n\t\t\tif (df.default) {\n\t\t\t\tf.set_input(df.default);\n\t\t\t}\n\n\t\t\tif (df.get_query) f.get_query = df.get_query;\n\t\t\tif (df.on_change) f.on_change = df.on_change;\n\n\t\t\tdf.onchange = () => {\n\t\t\t\tthis.refresh_filters_dependency();\n\n\t\t\t\tlet current_filters = this.get_filter_values();\n\t\t\t\tif (this.previous_filters\n\t\t\t\t\t&& (JSON.stringify(this.previous_filters) === JSON.stringify(current_filters))) {\n\t\t\t\t\t// filter values have not changed\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// clear previous_filters after 10 seconds, to allow refresh for new data\n\t\t\t\tthis.previous_filters = current_filters;\n\t\t\t\tsetTimeout(() => this.previous_filters = null, 10000);\n\n\t\t\t\tif (f.on_change) {\n\t\t\t\t\tf.on_change(this);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.prepared_report) {\n\t\t\t\t\t\tthis.reset_report_view();\n\t\t\t\t\t}\n\t\t\t\t\telse if (!this._no_refresh) {\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tf = Object.assign(f, df);\n\n\t\t\treturn f;\n\n\t\t}).filter(Boolean);\n\n\t\tthis.refresh_filters_dependency();\n\t\tif (this.filters.length === 0) {\n\t\t\t// hide page form if no filters\n\t\t\tthis.page.hide_form();\n\t\t} else {\n\t\t\tthis.page.show_form();\n\t\t}\n\t}\n\n\tset_filters(filters) {\n\t\tthis.filters.map(f => {\n\t\t\tf.set_input(filters[f.fieldname]);\n\t\t});\n\t}\n\n\tset_route_filters(route_options) {\n\t\tif (!route_options) route_options = frappe.route_options;\n\n\t\tif (route_options) {\n\t\t\tconst fields = Object.keys(route_options);\n\n\t\t\tconst filters_to_set = this.filters.filter(f => fields.includes(f.df.fieldname));\n\n\t\t\tconst promises = filters_to_set.map(f => {\n\t\t\t\treturn () => {\n\t\t\t\t\tconst value = route_options[f.df.fieldname];\n\t\t\t\t\tf.set_value(value);\n\t\t\t\t};\n\t\t\t});\n\t\t\tpromises.push(() => {\n\t\t\t\tfrappe.route_options = null;\n\t\t\t});\n\n\t\t\treturn frappe.run_serially(promises);\n\t\t}\n\t}\n\n\tclear_filters() {\n\t\tthis.page.clear_fields();\n\t}\n\n\trefresh() {\n\t\tthis.toggle_message(true);\n\t\tthis.toggle_report(false);\n\t\tthis.show_loading_screen();\n\t\tlet filters = this.get_filter_values(true);\n\n\t\t// only one refresh at a time\n\t\tif (this.last_ajax) {\n\t\t\tthis.last_ajax.abort();\n\t\t}\n\n\t\tconst query_params = this.get_query_params();\n\n\t\tif (query_params.prepared_report_name) {\n\t\t\tfilters.prepared_report_name = query_params.prepared_report_name;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.last_ajax = frappe.call({\n\t\t\t\tmethod: 'frappe.desk.query_report.run',\n\t\t\t\ttype: 'GET',\n\t\t\t\targs: {\n\t\t\t\t\treport_name: this.report_name,\n\t\t\t\t\tfilters: filters,\n\t\t\t\t\tis_tree: this.report_settings.tree,\n\t\t\t\t\tparent_field: this.report_settings.parent_field\n\t\t\t\t},\n\t\t\t\tcallback: resolve,\n\t\t\t\talways: () => this.page.btn_secondary.prop('disabled', false)\n\t\t\t});\n\t\t}).then(r => {\n\t\t\tlet data = r.message;\n\t\t\tthis.hide_status();\n\t\t\tclearInterval(this.interval);\n\n\t\t\tthis.execution_time = data.execution_time || 0.1;\n\n\t\t\tif (data.prepared_report) {\n\t\t\t\tthis.prepared_report = true;\n\t\t\t\t// If query_string contains prepared_report_name then set filters\n\t\t\t\t// to match the mentioned prepared report doc and disable editing\n\t\t\t\tif (query_params.prepared_report_name) {\n\t\t\t\t\tthis.prepared_report_action = \"Edit\";\n\t\t\t\t\tconst filters_from_report = JSON.parse(data.doc.filters);\n\t\t\t\t\tObject.values(this.filters).forEach(function(field) {\n\t\t\t\t\t\tif (filters_from_report[field.fieldname]) {\n\t\t\t\t\t\t\tfield.set_input(filters_from_report[field.fieldname]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (field.input) {\n\t\t\t\t\t\t\tfield.input.disabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.add_prepared_report_buttons(data.doc);\n\t\t\t}\n\n\t\t\tif (data.report_summary) {\n\t\t\t\tthis.$summary.empty();\n\t\t\t\tthis.render_summary(data.report_summary);\n\t\t\t}\n\n\t\t\tif (data.message && !data.prepared_report) this.show_status(data.message);\n\n\t\t\tthis.toggle_message(false);\n\t\t\tif (data.result && data.result.length) {\n\t\t\t\tthis.prepare_report_data(data);\n\t\t\t\tthis.chart_options = this.get_chart_options(data);\n\n\t\t\t\tthis.$chart.empty();\n\t\t\t\tif (this.chart_options) {\n\t\t\t\t\tthis.render_chart(this.chart_options);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.$chart.empty();\n\t\t\t\t\tif (this.chart_fields) {\n\t\t\t\t\t\tthis.chart_options =\n\t\t\t\t\t\t\tfrappe.report_utils.make_chart_options(\n\t\t\t\t\t\t\t\tthis.columns,\n\t\t\t\t\t\t\t\tthis.raw_data,\n\t\t\t\t\t\t\t\tthis.chart_fields\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.chart_options && this.render_chart(this.chart_options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.render_datatable();\n\t\t\t\tthis.add_chart_buttons_to_toolbar(true);\n\t\t\t\tthis.add_card_button_to_toolbar();\n\t\t\t\tthis.$report.show();\n\t\t\t} else {\n\t\t\t\tthis.data = [];\n\t\t\t\tthis.toggle_nothing_to_show(true);\n\t\t\t\tthis.add_chart_buttons_to_toolbar(false);\n\t\t\t}\n\n\t\t\tthis.show_footer_message();\n\t\t\tfrappe.hide_progress();\n\t\t}).finally(() => {\n\t\t\tthis.hide_loading_screen();\n\t\t});\n\t}\n\n\trender_summary(data) {\n\t\tdata.forEach((summary) => {\n\t\t\tfrappe.utils.build_summary_item(summary).appendTo(this.$summary);\n\t\t})\n\n\t\tthis.$summary.show();\n\t}\n\n\tget_query_params() {\n\t\tconst query_string = frappe.utils.get_query_string(frappe.get_route_str());\n\t\tconst query_params = frappe.utils.get_query_params(query_string);\n\t\treturn query_params;\n\t}\n\n\tadd_prepared_report_buttons(doc) {\n\t\tif (doc) {\n\t\t\tthis.page.add_inner_button(__(\"Download Report\"), function (){\n\t\t\t\twindow.open(\n\t\t\t\t\tfrappe.urllib.get_full_url(\n\t\t\t\t\t\t\"/api/method/frappe.core.doctype.prepared_report.prepared_report.download_attachment?\"\n\t\t\t\t\t\t+\"dn=\"+encodeURIComponent(doc.name)));\n\t\t\t});\n\n\t\t\tconst part1 = __('This report was generated {0}.', [frappe.datetime.comment_when(doc.report_end_time)]);\n\t\t\tconst part2 = __('To get the updated report, click on {0}.', [__('Rebuild')]);\n\t\t\tconst part3 = __('See all past reports.');\n\n\t\t\tthis.show_status(`\n\t\t\t\t<div class=\"indicator orange\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t${part1}\n\t\t\t\t\t\t${part2}\n\t\t\t\t\t\t<a href=\"/app/List/Prepared%20Report?report_name=${this.report_name}\"> ${part3}</a>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t};\n\n\t\t// Three cases\n\t\t// 1. First time with given filters, no data.\n\t\t// 2. Showing data from specific report\n\t\t// 3. Showing data from an old report without specific report name\n\t\tthis.primary_action_map = {\n\t\t\t\"New\": {\n\t\t\t\tlabel: __(\"Generate New Report\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.show_warning_or_generate_report();\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"Edit\": {\n\t\t\t\tlabel: __(\"Edit\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tfrappe.set_route(frappe.get_route());\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"Rebuild\": {\n\t\t\t\tlabel:\t__(\"Rebuild\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.show_warning_or_generate_report();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet primary_action = this.primary_action_map[this.prepared_report_action];\n\n\t\tif (!this.primary_button || this.primary_button.text() !== primary_action.label) {\n\t\t\tthis.primary_button = this.page.set_primary_action(\n\t\t\t\tprimary_action.label,\n\t\t\t\tprimary_action.click\n\t\t\t);\n\t\t}\n\t}\n\n\ttoggle_primary_button_disabled(disable) {\n\t\tthis.primary_button.prop('disabled', disable);\n\t}\n\n\tshow_warning_or_generate_report() {\n\t\tfrappe.xcall(\n\t\t\t'frappe.core.doctype.prepared_report.prepared_report.get_reports_in_queued_state',\n\t\t\t{\n\t\t\t\tfilters: this.get_filter_values(),\n\t\t\t\treport_name: this.report_name,\n\t\t\t}\n\t\t).then(reports => {\n\t\t\tthis.queued_prepared_reports = reports;\n\n\t\t\tif (reports.length) {\n\t\t\t\tconst message = this.get_queued_prepared_reports_warning_message(reports);\n\t\t\t\tthis.prepared_report_dialog = frappe.warn(\n\t\t\t\t\t__('Reports already in Queue'),\n\t\t\t\t\tmessage,\n\t\t\t\t\t() => this.generate_background_report(),\n\t\t\t\t\t__('Proceed Anyway'),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\tthis.prepared_report_dialog.footer.prepend(`\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-default pull-left\" data-action=\"delete_old_queued_reports\">\n\t\t\t\t\t\t${__('Delete and Generate New')}\n\t\t\t\t\t</button>`);\n\n\t\t\t\tfrappe.utils.bind_actions_with_object(this.prepared_report_dialog.wrapper, this);\n\t\t\t} else {\n\t\t\t\tthis.generate_background_report();\n\t\t\t}\n\t\t});\n\t}\n\n\tget_queued_prepared_reports_warning_message(reports) {\n\t\tconst route = `/app/List/Prepared Report/List?status=Queued&report_name=${this.report_name}`;\n\t\tconst report_link_html = reports.length == 1\n\t\t\t? `<a class=\"underline\" href=\"${route}\">${__('1 Report')}</a>`\n\t\t\t: `<a class=\"underline\" href=\"${route}\">${__(\"{0} Reports\", [reports.length])}</a>`;\n\n\t\tconst no_of_reports_html = reports.length == 1\n\t\t\t? `${__('There is {0} with the same filters already in the queue:', [report_link_html])}`\n\t\t\t: `${__('There are {0} with the same filters already in the queue:', [report_link_html])}`;\n\n\t\tlet warning_message = `\n\t\t\t<p>\n\t\t\t\t${__(\"Are you sure you want to generate a new report?\")}\n\t\t\t\t${no_of_reports_html}\n\t\t\t</p>`;\n\n\t\tlet get_item_html = item => `<a class=\"underline\" href=\"/app/prepared-report/${item.name}\">${item.name}</a>`;\n\n\t\twarning_message += reports.map(get_item_html).join(', ');\n\n\t\treturn warning_message;\n\t}\n\n\tdelete_old_queued_reports() {\n\t\tthis.prepared_report_dialog.hide();\n\t\tfrappe.xcall(\n\t\t\t'frappe.core.doctype.prepared_report.prepared_report.delete_prepared_reports',\n\t\t\t{\n\t\t\t\treports: this.queued_prepared_reports,\n\t\t\t}\n\t\t).then(() => this.generate_background_report());\n\t}\n\n\tgenerate_background_report() {\n\t\tthis.toggle_primary_button_disabled(true);\n\t\tlet mandatory = this.filters.filter(f => f.df.reqd);\n\t\tlet missing_mandatory = mandatory.filter(f => !f.get_value());\n\t\tif (!missing_mandatory.length) {\n\t\t\tlet filters = this.get_filter_values(true);\n\t\t\treturn new Promise(resolve => frappe.call({\n\t\t\t\tmethod: 'frappe.desk.query_report.background_enqueue_run',\n\t\t\t\ttype: 'GET',\n\t\t\t\targs: {\n\t\t\t\t\treport_name: this.report_name,\n\t\t\t\t\tfilters: filters\n\t\t\t\t},\n\t\t\t\tcallback: resolve\n\t\t\t})).then(r => {\n\t\t\t\tconst data = r.message;\n\t\t\t\t// Rememeber the name of Prepared Report doc\n\t\t\t\tthis.prepared_report_doc_name = data.name;\n\t\t\t\tlet alert_message = `<a href='/app/prepared-report/${data.name}'>` +\n\t\t\t\t\t__('Report initiated, click to view status') + `</a>`;\n\t\t\t\tfrappe.show_alert({message: alert_message, indicator: 'orange'}, 10);\n\t\t\t\tthis.toggle_nothing_to_show(true);\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_report_data(data) {\n\t\tthis.raw_data = data;\n\t\tthis.columns = this.prepare_columns(data.columns);\n\t\tthis.custom_columns = [];\n\t\tthis.data = this.prepare_data(data.result);\n\t\tthis.linked_doctypes = this.get_linked_doctypes();\n\t\tthis.tree_report = this.data.some(d => 'indent' in d);\n\t}\n\n\trender_datatable() {\n\t\tlet data = this.data;\n\t\tlet columns = this.columns.filter((col) => !col.hidden);\n\n\t\tif (this.raw_data.add_total_row && !this.report_settings.tree) {\n\t\t\tdata = data.slice();\n\t\t\tdata.splice(-1, 1);\n\t\t}\n\n\t\tthis.$report.show();\n\t\tif (this.datatable && this.datatable.options\n\t\t\t&& (this.datatable.options.showTotalRow ===this.raw_data.add_total_row)) {\n\t\t\tthis.datatable.options.treeView = this.tree_report;\n\t\t\tthis.datatable.refresh(data, columns);\n\t\t} else {\n\t\t\tlet datatable_options = {\n\t\t\t\tcolumns: columns,\n\t\t\t\tdata: data,\n\t\t\t\tinlineFilters: true,\n\t\t\t\tlanguage: frappe.boot.lang,\n\t\t\t\ttranslations: frappe.utils.datatable.get_translations(),\n\t\t\t\ttreeView: this.tree_report,\n\t\t\t\tlayout: 'fixed',\n\t\t\t\tcellHeight: 33,\n\t\t\t\tshowTotalRow: this.raw_data.add_total_row && !this.report_settings.tree,\n\t\t\t\tdirection: frappe.utils.is_rtl() ? 'rtl' : 'ltr',\n\t\t\t\thooks: {\n\t\t\t\t\tcolumnTotal: frappe.utils.report_column_total\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this.report_settings.get_datatable_options) {\n\t\t\t\tdatatable_options = this.report_settings.get_datatable_options(datatable_options);\n\t\t\t}\n\t\t\tthis.datatable = new DataTable(this.$report[0], datatable_options);\n\t\t}\n\n\t\tif (typeof this.report_settings.initial_depth == \"number\") {\n\t\t\tthis.datatable.rowmanager.setTreeDepth(this.report_settings.initial_depth);\n\t\t}\n\t\tif (this.report_settings.after_datatable_render) {\n\t\t\tthis.report_settings.after_datatable_render(this.datatable);\n\t\t}\n\t}\n\n\tshow_loading_screen() {\n\t\tconst loading_state = `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"/assets/frappe/images/ui-states/list-empty-state.svg\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${__('Loading')}...</p>\n\t\t</div>`;\n\n\t\tthis.$loading.find('div').html(loading_state);\n\t\tthis.$report.hide();\n\t\tthis.$loading.show();\n\t}\n\n\thide_loading_screen() {\n\t\tthis.$loading.hide();\n\t}\n\n\tget_chart_options(data) {\n\t\tlet options = this.report_settings.get_chart_data\n\t\t\t? this.report_settings.get_chart_data(data.columns, data.result)\n\t\t\t: data.chart\n\t\t\t\t? data.chart\n\t\t\t\t: undefined;\n\n\t\tif (!(options && options.data && options.data.labels && options.data.labels.length > 0)) return;\n\n\t\tif (options.fieldtype) {\n\t\t\toptions.tooltipOptions = {\n\t\t\t\tformatTooltipY: d => frappe.format(d, {\n\t\t\t\t\tfieldtype: options.fieldtype,\n\t\t\t\t\toptions: options.options\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\toptions.axisOptions = {\n\t\t\tshortenYAxisNumbers: 1\n\t\t};\n\t\toptions.height = 280;\n\n\t\treturn options;\n\t}\n\n\trender_chart(options) {\n\t\tthis.$chart.empty();\n\t\tthis.$chart.show();\n\t\tthis.chart = new frappe.Chart(this.$chart[0], options);\n\t}\n\n\topen_create_chart_dialog() {\n\t\tconst me = this;\n\t\tlet field_options = frappe.report_utils.get_field_options_from_report(this.columns, this.raw_data);\n\n\t\tfunction set_chart_values(values) {\n\t\t\tvalues.y_fields = [];\n\t\t\tvalues.colors = [];\n\t\t\tif (values.y_axis_fields) {\n\t\t\t\tvalues.y_axis_fields.map(f => {\n\t\t\t\t\tvalues.y_fields.push(f.y_field);\n\t\t\t\t\tvalues.colors.push(f.color);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvalues.y_fields =\n\t\t\t\tvalues.y_fields\n\t\t\t\t\t.map(d => d.trim())\n\t\t\t\t\t.filter(Boolean);\n\n\t\t\treturn values;\n\t\t}\n\n\t\tfunction preview_chart() {\n\t\t\tconst wrapper = $(dialog.fields_dict[\"chart_preview\"].wrapper);\n\t\t\tlet values = dialog.get_values(true);\n\t\t\tvalues = set_chart_values(values);\n\n\t\t\tif (values.x_field && values.y_fields.length) {\n\t\t\t\tlet options = frappe.report_utils.make_chart_options(me.columns, me.raw_data, values);\n\t\t\t\tme.chart_fields = values;\n\t\t\t\twrapper.empty();\n\t\t\t\tnew frappe.Chart(wrapper[0], options);\n\t\t\t\twrapper.find('.chart-container .title, .chart-container .sub-title').hide();\n\t\t\t\twrapper.show();\n\n\t\t\t\tdialog.fields_dict['create_dashoard_chart'].df.hidden = 0;\n\t\t\t\tdialog.refresh();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper[0].innerHTML =\n\t\t\t\t`<div class=\"flex justify-center align-center text-muted\" style=\"height: 120px; display: flex;\">\n\t\t\t\t\t<div>${__(\"Please select X and Y fields\")}</div>\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Create Chart'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'x_field',\n\t\t\t\t\tlabel: 'X Field',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tdefault: me.chart_fields? me.chart_fields.x_field: null,\n\t\t\t\t\toptions: field_options.non_numeric_fields,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tlabel: 'Type of Chart',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Bar', 'Line', 'Percentage', 'Pie', 'Donut'],\n\t\t\t\t\tdefault: me.chart_fields? me.chart_fields.chart_type: 'Bar',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_1',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Y axis'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'y_axis_fields', fieldtype: 'Table',\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\t\t\tfieldname: 'y_field',\n\t\t\t\t\t\t\tname: 'y_field',\n\t\t\t\t\t\t\tlabel: __('Y Field'),\n\t\t\t\t\t\t\toptions: field_options.numeric_fields,\n\t\t\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldtype: 'Color',\n\t\t\t\t\t\t\tfieldname: 'color',\n\t\t\t\t\t\t\tname: 'color',\n\t\t\t\t\t\t\tlabel: __('Color'),\n\t\t\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'preview_chart_button',\n\t\t\t\t\tfieldtype: 'Button',\n\t\t\t\t\tlabel: 'Preview Chart',\n\t\t\t\t\tclick: preview_chart\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Preview'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'chart_preview',\n\t\t\t\t\tlabel: 'Chart Preview',\n\t\t\t\t\tfieldtype: 'HTML',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'create_dashoard_chart',\n\t\t\t\t\tlabel: 'Add Chart to Dashboard',\n\t\t\t\t\tfieldtype: 'Button',\n\t\t\t\t\thidden: 1,\n\t\t\t\t\tclick: () => {\n\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\tthis.add_chart_to_dashboard();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action_label: __('Create'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tvalues = set_chart_values(values);\n\n\t\t\t\tlet options =\n\t\t\t\t\tfrappe.report_utils.make_chart_options(\n\t\t\t\t\t\tthis.columns,\n\t\t\t\t\t\tthis.raw_data,\n\t\t\t\t\t\tvalues\n\t\t\t\t\t);\n\t\t\t\tme.chart_fields = values\n\n\t\t\t\tlet x_field_label =\n\t\t\t\t\tfield_options.numeric_fields.filter(field =>\n\t\t\t\t\t\tfield.value == values.y_fields[0]\n\t\t\t\t\t)[0].label;\n\t\t\t\tlet y_field_label =\n\t\t\t\t\tfield_options.non_numeric_fields.filter(field =>\n\t\t\t\t\t\tfield.value == values.x_field\n\t\t\t\t\t)[0].label;\n\n\t\t\t\toptions.title = __(\"{0}: {1} vs {2}\", [this.report_name, x_field_label, y_field_label]);\n\n\t\t\t\tthis.render_chart(options);\n\t\t\t\tthis.add_chart_buttons_to_toolbar(true);\n\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\n\t\t// load preview after dialog animation\n\t\tsetTimeout(preview_chart, 500);\n\t}\n\n\tprepare_columns(columns) {\n\t\treturn columns.map(column => {\n\t\t\tcolumn = frappe.report_utils.prepare_field_from_column(column);\n\n\t\t\tconst format_cell = (value, row, column, data) => {\n\t\t\t\tif (column.isHeader && !data && this.data) {\n\t\t\t\t\t// totalRow doesn't have a data object\n\t\t\t\t\t// proxy it using the first data object\n\t\t\t\t\t// applied to Float, Currency fields, needed only for currency formatting.\n\t\t\t\t\t// make first data column have value 'Total'\n\t\t\t\t\tlet index = 1;\n\n\t\t\t\t\tif (this.report_settings.get_datatable_options) {\n\t\t\t\t\t\tlet datatable = this.report_settings.get_datatable_options({});\n\t\t\t\t\t\tif (datatable && datatable.checkboxColumn) index = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (column.colIndex === index && !value) {\n\t\t\t\t\t\tvalue = \"Total\";\n\t\t\t\t\t\tcolumn = { fieldtype: \"Data\" }; // avoid type issues for value if Date column\n\t\t\t\t\t} else if (in_list([\"Currency\", \"Float\"], column.fieldtype)) {\n\t\t\t\t\t\t// proxy for currency and float\n\t\t\t\t\t\tdata = this.data[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn frappe.format(value, column,\n\t\t\t\t\t{for_print: false, always_show_decimals: true}, data);\n\t\t\t};\n\n\t\t\tlet compareFn = null;\n\t\t\tif (column.fieldtype === 'Date') {\n\t\t\t\tcompareFn = (cell, keyword) => {\n\t\t\t\t\tif (!cell.content) return null;\n\t\t\t\t\tif (keyword.length !== 'YYYY-MM-DD'.length) return null;\n\n\t\t\t\t\tconst keywordValue = frappe.datetime.user_to_obj(keyword);\n\t\t\t\t\tconst cellValue = frappe.datetime.str_to_obj(cell.content);\n\t\t\t\t\treturn [+cellValue, +keywordValue];\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn Object.assign(column, {\n\t\t\t\tid: column.fieldname,\n\t\t\t\tname: __(column.label, null, `Column of report '${this.report_name}'`), // context has to match context in   get_messages_from_report in translate.py\n\t\t\t\twidth: parseInt(column.width) || null,\n\t\t\t\teditable: false,\n\t\t\t\tcompareValue: compareFn,\n\t\t\t\tformat: (value, row, column, data) => {\n\t\t\t\t\tif (this.report_settings.formatter) {\n\t\t\t\t\t\treturn this.report_settings.formatter(value, row, column, data, format_cell);\n\t\t\t\t\t}\n\t\t\t\t\treturn format_cell(value, row, column, data);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprepare_data(data) {\n\t\treturn data.map(row => {\n\t\t\tlet row_obj = {};\n\t\t\tif (Array.isArray(row)) {\n\t\t\t\tthis.columns.forEach((column, i) => {\n\t\t\t\t\trow_obj[column.id] = row[i];\n\t\t\t\t});\n\n\t\t\t\treturn row_obj;\n\t\t\t}\n\t\t\treturn row;\n\t\t});\n\t}\n\n\tget_visible_columns() {\n\t\tconst visible_column_ids = this.datatable.datamanager.getColumns(true).map(col => col.id);\n\n\t\treturn visible_column_ids\n\t\t\t.map(id => this.columns.find(col => col.id === id))\n\t\t\t.filter(Boolean);\n\t}\n\n\tget_filter_values(raise) {\n\n\t\t// check for mandatory property for filters added via UI\n\t\tconst mandatory = this.filters.filter(f => (f.df.reqd || f.df.mandatory));\n\t\tconst missing_mandatory = mandatory.filter(f => !f.get_value());\n\t\tif (raise && missing_mandatory.length > 0) {\n\t\t\tlet message = __('Please set filters');\n\t\t\tthis.toggle_message(raise, message);\n\t\t\tthrow \"Filter missing\";\n\t\t}\n\n\t\tconst filters = this.filters\n\t\t\t.filter(f => f.get_value())\n\t\t\t.map(f => {\n\t\t\t\tvar v = f.get_value();\n\t\t\t\t// hidden fields dont have $input\n\t\t\t\tif (f.df.hidden) v = f.value;\n\t\t\t\tif (v === '%') v = null;\n\t\t\t\tif (f.df.wildcard_filter) {\n\t\t\t\t\tv = `%${v}%`;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t[f.df.fieldname]: v\n\t\t\t\t};\n\t\t\t})\n\t\t\t.reduce((acc, f) => {\n\t\t\t\tObject.assign(acc, f);\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tget_filter(fieldname) {\n\t\tconst field = (this.filters || []).find(f => f.df.fieldname === fieldname);\n\t\tif (!field) {\n\t\t\tconsole.warn(`[Query Report] Invalid filter: ${fieldname}`);\n\t\t}\n\t\treturn field;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst field = this.get_filter(fieldname);\n\t\treturn field ? field.get_value() : null;\n\t}\n\n\tset_filter_value(fieldname, value) {\n\t\tlet field_value_map = {};\n\t\tif (typeof fieldname === 'string') {\n\t\t\tfield_value_map[fieldname] = value;\n\t\t} else {\n\t\t\tfield_value_map = fieldname;\n\t\t}\n\n\t\tthis._no_refresh = true;\n\t\tObject.keys(field_value_map)\n\t\t\t.forEach((fieldname, i, arr) => {\n\t\t\t\tconst value = field_value_map[fieldname];\n\n\t\t\t\tif (i === arr.length - 1) {\n\t\t\t\t\tthis._no_refresh = false;\n\t\t\t\t}\n\n\t\t\t\tthis.get_filter(fieldname).set_value(value);\n\t\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tif (!this.report_doc || !this.report_doc.ref_doctype) return;\n\t\tconst ref_doctype = frappe.get_meta(this.report_doc.ref_doctype);\n\t\tfrappe.breadcrumbs.add(ref_doctype.module);\n\t}\n\n\tmake_access_log (method, file_format) {\n\t\tfrappe.call(\"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t{\n\t\t\t\tdoctype: this.doctype || '',\n\t\t\t\treport_name: this.report_name,\n\t\t\t\tfilters: this.get_filter_values(),\n\t\t\t\tfile_type: file_format,\n\t\t\t\tmethod: method\n\t\t\t});\n\t}\n\n\tprint_report(print_settings) {\n\t\tconst custom_format = this.report_settings.html_format || null;\n\t\tconst filters_html = this.get_filters_html_for_print();\n\t\tconst landscape = print_settings.orientation == 'Landscape';\n\n\t\tthis.make_access_log('Print', 'PDF');\n\t\tfrappe.render_grid({\n\t\t\ttemplate: print_settings.columns ? 'print_grid' : custom_format,\n\t\t\ttitle: __(this.report_name),\n\t\t\tsubtitle: filters_html,\n\t\t\tprint_settings: print_settings,\n\t\t\tlandscape: landscape,\n\t\t\tfilters: this.get_filter_values(),\n\t\t\tdata: this.get_data_for_print(),\n\t\t\tcolumns: this.get_columns_for_print(print_settings, custom_format),\n\t\t\toriginal_data: this.data,\n\t\t\treport: this\n\t\t});\n\t}\n\n\tpdf_report(print_settings) {\n\t\tconst base_url = frappe.urllib.get_base_url();\n\t\tconst print_css = frappe.boot.print_css;\n\t\tconst landscape = print_settings.orientation == 'Landscape';\n\n\t\tconst custom_format = this.report_settings.html_format || null;\n\t\tconst columns = this.get_columns_for_print(print_settings, custom_format);\n\t\tconst data = this.get_data_for_print();\n\t\tconst applied_filters = this.get_filter_values();\n\n\t\tconst filters_html = this.get_filters_html_for_print();\n\t\tconst template =\n\t\t\tprint_settings.columns || !custom_format ? 'print_grid' : custom_format;\n\t\tconst content = frappe.render_template(template, {\n\t\t\ttitle: __(this.report_name),\n\t\t\tsubtitle: filters_html,\n\t\t\tfilters: applied_filters,\n\t\t\tdata: data,\n\t\t\toriginal_data: this.data,\n\t\t\tcolumns: columns,\n\t\t\treport: this\n\t\t});\n\n\t\t// Render Report in HTML\n\t\tconst html = frappe.render_template('print_template', {\n\t\t\ttitle: __(this.report_name),\n\t\t\tcontent: content,\n\t\t\tbase_url: base_url,\n\t\t\tprint_css: print_css,\n\t\t\tprint_settings: print_settings,\n\t\t\tlandscape: landscape,\n\t\t\tcolumns: columns,\n\t\t\tlang: frappe.boot.lang,\n\t\t\tlayout_direction: frappe.utils.is_rtl() ? \"rtl\" : \"ltr\"\n\t\t});\n\n\t\tfrappe.render_pdf(html, print_settings);\n\t}\n\n\tget_filters_html_for_print() {\n\t\tconst applied_filters = this.get_filter_values();\n\t\treturn Object.keys(applied_filters)\n\t\t\t.map(fieldname => {\n\t\t\t\tconst label = frappe.query_report.get_filter(fieldname).df.label;\n\t\t\t\tconst value = applied_filters[fieldname];\n\t\t\t\treturn `<h6>${__(label)}: ${value}</h6>`;\n\t\t\t})\n\t\t\t.join('');\n\t}\n\n\texport_report() {\n\t\tif (this.export_dialog) {\n\t\t\tthis.export_dialog.clear();\n\t\t\tthis.export_dialog.show();\n\t\t\treturn;\n\t\t}\n\n\t\tlet export_dialog_fields = [\n\t\t\t{\n\t\t\t\tlabel: __('Select File Format'),\n\t\t\t\tfieldname: 'file_format',\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\toptions: ['Excel', 'CSV'],\n\t\t\t\tdefault: 'Excel',\n\t\t\t\treqd: 1\n\t\t\t}\n\t\t];\n\n\t\tif (this.tree_report) {\n\t\t\texport_dialog_fields.push({\n\t\t\t\tlabel: __(\"Include indentation\"),\n\t\t\t\tfieldname: \"include_indentation\",\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t});\n\t\t}\n\n\t\tthis.export_dialog = frappe.prompt(export_dialog_fields, ({ file_format, include_indentation }) => {\n\t\t\tthis.make_access_log('Export', file_format);\n\t\t\tif (file_format === 'CSV') {\n\t\t\t\tconst column_row = this.columns.reduce((acc, col) => {\n\t\t\t\t\tif (!col.hidden) {\n\t\t\t\t\t\tacc.push(__(col.label));\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, []);\n\t\t\t\tconst data = this.get_data_for_csv(include_indentation);\n\t\t\t\tconst out = [column_row].concat(data);\n\n\t\t\t\tfrappe.tools.downloadify(out, null, this.report_name);\n\t\t\t} else {\n\t\t\t\tlet filters = this.get_filter_values(true);\n\t\t\t\tif (frappe.urllib.get_dict(\"prepared_report_name\")) {\n\t\t\t\t\tfilters = Object.assign(frappe.urllib.get_dict(\"prepared_report_name\"), filters);\n\t\t\t\t}\n\n\t\t\t\tconst visible_idx = this.datatable.bodyRenderer.visibleRowIndices;\n\t\t\t\tif (visible_idx.length + 1 === this.data.length) {\n\t\t\t\t\tvisible_idx.push(visible_idx.length);\n\t\t\t\t}\n\n\t\t\t\tconst args = {\n\t\t\t\t\tcmd: 'frappe.desk.query_report.export_query',\n\t\t\t\t\treport_name: this.report_name,\n\t\t\t\t\tcustom_columns: this.custom_columns.length? this.custom_columns: [],\n\t\t\t\t\tfile_format_type: file_format,\n\t\t\t\t\tfilters: filters,\n\t\t\t\t\tvisible_idx,\n\t\t\t\t\tinclude_indentation,\n\t\t\t\t};\n\n\t\t\t\topen_url_post(frappe.request.url, args);\n\t\t\t}\n\t\t}, __('Export Report: {0}', [this.report_name]), __('Download'));\n\t}\n\n\tget_data_for_csv(include_indentation) {\n\t\tconst rows = this.datatable.bodyRenderer.visibleRows;\n\t\tif (this.raw_data.add_total_row) {\n\t\t\trows.push(this.datatable.bodyRenderer.getTotalRow());\n\t\t}\n\t\treturn rows.map(row => {\n\t\t\tconst standard_column_count = this.datatable.datamanager.getStandardColumnCount();\n\t\t\treturn row\n\t\t\t\t.slice(standard_column_count)\n\t\t\t\t.map((cell, i) => {\n\t\t\t\t\tif (cell.column.fieldtype === \"Duration\") {\n\t\t\t\t\t\tcell.content = frappe.utils.get_formatted_duration(cell.content);\n\t\t\t\t\t}\n\t\t\t\t\tif (include_indentation && i===0) {\n\t\t\t\t\t\tcell.content = '   '.repeat(row.meta.indent) + (cell.content || '');\n\t\t\t\t\t}\n\t\t\t\t\treturn cell.content || '';\n\t\t\t\t});\n\t\t});\n\t}\n\n\tget_data_for_print() {\n\t\tif (!this.data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst rows = this.datatable.datamanager.rowViewOrder.map(index => {\n\t\t\tif (this.datatable.bodyRenderer.visibleRowIndices.includes(index)) {\n\t\t\t\treturn this.data[index];\n\t\t\t}\n\t\t}).filter(Boolean);\n\n\t\tif (this.raw_data.add_total_row) {\n\t\t\tlet totalRow = this.datatable.bodyRenderer.getTotalRow().reduce((row, cell) => {\n\t\t\t\trow[cell.column.id] = cell.content;\n\t\t\t\trow.is_total_row = true;\n\t\t\t\treturn row;\n\t\t\t}, {});\n\n\t\t\trows.push(totalRow);\n\t\t}\n\t\treturn rows;\n\t}\n\n\tget_columns_for_print(print_settings, custom_format) {\n\t\tlet columns = [];\n\n\t\tif (print_settings && print_settings.columns) {\n\t\t\tcolumns = this.get_visible_columns().filter(column =>\n\t\t\t\tprint_settings.columns.includes(column.fieldname)\n\t\t\t);\n\t\t} else {\n\t\t\tcolumns = custom_format ? this.columns : this.get_visible_columns();\n\t\t}\n\n\t\treturn columns;\n\t}\n\n\tget_menu_items() {\n\t\tlet items = [\n\t\t\t{\n\t\t\t\tlabel: __('Refresh'),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: 'visible-xs'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Edit'),\n\t\t\t\taction: () => frappe.set_route('Form', 'Report', this.report_name),\n\t\t\t\tcondition: () => frappe.user.is_report_manager(),\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet dialog = frappe.ui.get_print_settings(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tprint_settings => this.print_report(print_settings),\n\t\t\t\t\t\tthis.report_doc.letter_head,\n\t\t\t\t\t\tthis.get_visible_columns()\n\t\t\t\t\t);\n\t\t\t\t\tthis.add_portrait_warning(dialog);\n\t\t\t\t},\n\t\t\t\tcondition: () => frappe.model.can_print(this.report_doc.ref_doctype),\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('PDF'),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet dialog = frappe.ui.get_print_settings(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tprint_settings => this.pdf_report(print_settings),\n\t\t\t\t\t\tthis.report_doc.letter_head,\n\t\t\t\t\t\tthis.get_visible_columns()\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.add_portrait_warning(dialog);\n\t\t\t\t},\n\t\t\t\tcondition: () => frappe.model.can_print(this.report_doc.ref_doctype),\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Export'),\n\t\t\t\taction: () => this.export_report(),\n\t\t\t\tcondition: () => frappe.model.can_export(this.report_doc.ref_doctype),\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Setup Auto Email'),\n\t\t\t\taction: () => frappe.set_route('List', 'Auto Email Report', {'report' : this.report_name}),\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Add Column'),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Add Column'),\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\t\t\t\tfieldname: 'doctype',\n\t\t\t\t\t\t\t\tlabel: __('From Document Type'),\n\t\t\t\t\t\t\t\toptions: this.linked_doctypes.map(df => ({ label: df.doctype, value: df.doctype })),\n\t\t\t\t\t\t\t\tchange: () => {\n\t\t\t\t\t\t\t\t\tlet doctype = d.get_value('doctype');\n\t\t\t\t\t\t\t\t\tfrappe.model.with_doctype(doctype, () => {\n\t\t\t\t\t\t\t\t\t\tlet options = frappe.meta.get_docfields(doctype)\n\t\t\t\t\t\t\t\t\t\t\t.filter(frappe.model.is_value_type)\n\t\t\t\t\t\t\t\t\t\t\t.map(df => ({ label: df.label, value: df.fieldname }));\n\n\t\t\t\t\t\t\t\t\t\td.set_df_property('field', 'options', options.sort(function(a, b) {\n\t\t\t\t\t\t\t\t\t\t\tif (a.label < b.label) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (a.label > b.label) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\t\t\t\tlabel: __('Field'),\n\t\t\t\t\t\t\t\tfieldname: 'field',\n\t\t\t\t\t\t\t\toptions: []\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\t\t\t\tlabel: __('Insert After'),\n\t\t\t\t\t\t\t\tfieldname: 'insert_after',\n\t\t\t\t\t\t\t\toptions: this.columns.map(df => df.label)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprimary_action: (values) => {\n\t\t\t\t\t\t\tconst custom_columns = [];\n\t\t\t\t\t\t\tlet df = frappe.meta.get_docfield(values.doctype, values.field);\n\t\t\t\t\t\t\tconst insert_after_index = this.columns\n\t\t\t\t\t\t\t\t.findIndex(column => column.label === values.insert_after);\n\t\t\t\t\t\t\tcustom_columns.push({\n\t\t\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\t\t\tfieldtype: df.fieldtype,\n\t\t\t\t\t\t\t\tlabel: df.label,\n\t\t\t\t\t\t\t\tinsert_after_index: insert_after_index,\n\t\t\t\t\t\t\t\tlink_field: this.doctype_field_map[values.doctype],\n\t\t\t\t\t\t\t\tdoctype: values.doctype,\n\t\t\t\t\t\t\t\toptions: df.options,\n\t\t\t\t\t\t\t\twidth: 100\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.custom_columns = this.custom_columns.concat(custom_columns);\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: 'frappe.desk.query_report.get_data_for_custom_field',\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\tfield: values.field,\n\t\t\t\t\t\t\t\t\tdoctype: values.doctype\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcallback: (r) => {\n\t\t\t\t\t\t\t\t\tconst custom_data = r.message;\n\t\t\t\t\t\t\t\t\tconst link_field = this.doctype_field_map[values.doctype];\n\n\t\t\t\t\t\t\t\t\tthis.add_custom_column(custom_columns, custom_data, link_field, values.field, insert_after_index);\n\t\t\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.set_menu_items();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\td.show();\n\t\t\t\t},\n\t\t\t\tstandard: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('User Permissions'),\n\t\t\t\taction: () => frappe.set_route('List', 'User Permission', {\n\t\t\t\t\tdoctype: 'Report',\n\t\t\t\t\tname: this.report_name\n\t\t\t\t}),\n\t\t\t\tcondition: () => frappe.model.can_set_user_permissions('Report'),\n\t\t\t\tstandard: true\n\t\t\t}\n\t\t];\n\n\t\tif (frappe.user.is_report_manager()) {\n\t\t\titems.push({\n\t\t\t\tlabel: __('Save'),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Save Report'),\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\t\t\t\tfieldname: 'report_name',\n\t\t\t\t\t\t\t\tlabel: __(\"Report Name\"),\n\t\t\t\t\t\t\t\tdefault: this.report_doc.is_standard == 'No' ? this.report_name : \"\",\n\t\t\t\t\t\t\t\treqd: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprimary_action: (values) => {\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: \"frappe.desk.query_report.save_report\",\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\treference_report: this.report_name,\n\t\t\t\t\t\t\t\t\treport_name: values.report_name,\n\t\t\t\t\t\t\t\t\tcolumns: this.get_visible_columns()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\t\t\tthis.show_save = false;\n\t\t\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t\t\tfrappe.set_route('query-report', r.message);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\td.show();\n\t\t\t\t},\n\t\t\t\tstandard: true\n\t\t\t})\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tadd_portrait_warning(dialog) {\n\t\tif (this.columns.length > 10) {\n\t\t\tdialog.set_df_property('orientation', 'change', () => {\n\t\t\t\tlet value = dialog.get_value('orientation');\n\t\t\t\tlet description = value === 'Portrait'\n\t\t\t\t\t? __('Report with more than 10 columns looks better in Landscape mode.')\n\t\t\t\t\t: '';\n\t\t\t\tdialog.set_df_property('orientation', 'description', description);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd_custom_column(custom_column, custom_data, link_field, column_field, insert_after_index) {\n\t\tconst column = this.prepare_columns(custom_column);\n\n\t\tthis.columns.splice(insert_after_index + 1, 0, column[0]);\n\n\t\tthis.data.forEach(row => {\n\t\t\trow[column_field] = custom_data[row[link_field]];\n\t\t});\n\n\t\tthis.render_datatable();\n\t}\n\n\tget_linked_doctypes() {\n\t\tlet doctypes = [];\n\t\tlet dynamic_links = [];\n\t\tlet dynamic_doctypes = new Set();\n\t\tthis.doctype_field_map = {};\n\n\t\tthis.columns.forEach(df => {\n\t\t\tif (df.fieldtype == \"Link\" && df.options && df.options != \"Currency\") {\n\t\t\t\tdoctypes.push({\n\t\t\t\t\tdoctype: df.options,\n\t\t\t\t\tfieldname: df.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (df.fieldtype == \"Dynamic Link\" && df.options) {\n\t\t\t\tdynamic_links.push({\n\t\t\t\t\tlink_name: df.options,\n\t\t\t\t\tfieldname: df.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.data.forEach(row => {\n\t\t\tdynamic_links.forEach(field => {\n\t\t\t\tif (row[field.link_name]){\n\t\t\t\t\tdynamic_doctypes.add(row[field.link_name] + \":\" + field.fieldname);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tdoctypes = doctypes.concat(Array.from(dynamic_doctypes).map(d => {\n\t\t\tconst doc_field_pair = d.split(\":\");\n\t\t\treturn {\n\t\t\t\tdoctype: doc_field_pair[0],\n\t\t\t\tfieldname: doc_field_pair[1]\n\t\t\t};\n\t\t}));\n\n\t\tdoctypes.forEach(doc => {\n\t\t\tthis.doctype_field_map[doc.doctype] = doc.fieldname;\n\t\t});\n\n\t\treturn doctypes;\n\t}\n\n\tsetup_report_wrapper() {\n\t\tif (this.$report) return;\n\n\t\t// Remove border from\n\t\t$(\".page-head-content\").removeClass('border-bottom');\n\n\t\tlet page_form = this.page.main.find('.page-form');\n\t\tthis.$status = $(`<div class=\"form-message text-muted small\"></div>`)\n\t\t\t.hide().insertAfter(page_form);\n\n\t\tthis.$summary = $(`<div class=\"report-summary\"></div>`)\n\t\t\t.hide().appendTo(this.page.main);\n\n\t\tthis.$chart = $('<div class=\"chart-wrapper\">').hide().appendTo(this.page.main);\n\n\t\tthis.$loading = $(this.message_div('')).hide().appendTo(this.page.main);\n\t\tthis.$report = $('<div class=\"report-wrapper\">').appendTo(this.page.main);\n\t\tthis.$message = $(this.message_div('')).hide().appendTo(this.page.main);\n\t}\n\n\tshow_status(status_message) {\n\t\tthis.$status.html(status_message).show();\n\t}\n\n\thide_status() {\n\t\tthis.$status.hide();\n\t}\n\n\tshow_footer_message() {\n\t\tthis.$report_footer && this.$report_footer.remove();\n\t\tthis.$report_footer = $(`<div class=\"report-footer text-muted\"></div>`).appendTo(this.page.main);\n\t\tif (this.tree_report) {\n\t\t\tthis.$tree_footer = $(`<div class=\"tree-footer col-md-6\">\n\t\t\t\t<button class=\"btn btn-xs btn-default\" data-action=\"expand_all_rows\">\n\t\t\t\t\t${__('Expand All')}</button>\n\t\t\t\t<button class=\"btn btn-xs btn-default\" data-action=\"collapse_all_rows\">\n\t\t\t\t\t${__('Collapse All')}</button>\n\t\t\t</div>`);\n\t\t\t$(this.$report_footer).append(this.$tree_footer);\n\t\t\tthis.$tree_footer.find('[data-action=collapse_all_rows]').show();\n\t\t\tthis.$tree_footer.find('[data-action=expand_all_rows]').hide();\n\t\t}\n\n\t\tconst message = __('For comparison, use >5, <10 or =324. For ranges, use 5:10 (for values between 5 & 10).');\n\t\tconst execution_time_msg = __('Execution Time: {0} sec', [this.execution_time || 0.1]);\n\n\t\tthis.$report_footer.append(`<div class=\"col-md-12\">\n\t\t\t<span\">${message}</span><span class=\"pull-right\">${execution_time_msg}</span>\n\t\t</div>`);\n\t}\n\n\texpand_all_rows() {\n\t\tthis.$tree_footer.find('[data-action=expand_all_rows]').hide();\n\t\tthis.datatable.rowmanager.expandAllNodes();\n\t\tthis.$tree_footer.find('[data-action=collapse_all_rows]').show();\n\t}\n\n\tcollapse_all_rows() {\n\t\tthis.$tree_footer.find('[data-action=collapse_all_rows]').hide();\n\t\tthis.datatable.rowmanager.collapseAllNodes();\n\t\tthis.$tree_footer.find('[data-action=expand_all_rows]').show();\n\t}\n\n\tmessage_div(message) {\n\t\treturn `<div class='flex justify-center align-center text-muted' style='height: 50vh;'>\n\t\t\t<div>${message}</div>\n\t\t</div>`;\n\t}\n\n\treset_report_view() {\n\t\tthis.hide_status();\n\t\tthis.toggle_nothing_to_show(true);\n\t\tthis.refresh();\n\t}\n\n\ttoggle_nothing_to_show(flag) {\n\t\tlet message = this.prepared_report\n\t\t\t? __('This is a background report. Please set the appropriate filters and then generate a new one.')\n\t\t\t: this.get_no_result_message();\n\n\t\tthis.toggle_message(flag, message);\n\n\t\tif (flag && this.prepared_report) {\n\t\t\tthis.prepared_report_action = \"New\";\n\t\t\tif (!this.primary_button.is(':visible')) {\n\t\t\t\tthis.add_prepared_report_buttons();\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggle_message(flag, message) {\n\t\tif (flag) {\n\t\t\tthis.$message.find('div').html(message);\n\t\t\tthis.$message.show();\n\t\t} else {\n\t\t\tthis.$message.hide();\n\t\t}\n\t}\n\n\ttoggle_filter_display(fieldname, flag) {\n\t\tthis.$page.find(`div[data-fieldname=${fieldname}]`).toggleClass('hide-control', flag);\n\t}\n\n\ttoggle_report(flag) {\n\t\tthis.$report.toggle(flag);\n\t\tthis.$chart.toggle(flag);\n\t\tthis.$summary.toggle(flag);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst indexes = this.datatable.rowmanager.getCheckedRows();\n\n\t\treturn indexes.reduce((items, i) => {\n\t\t\tif (i === undefined) return items;\n\n\t\t\tconst item = this.data[i];\n\t\t\titems.push(only_docnames ? item.name : item);\n\t\t\treturn items;\n\t\t}, []);\n\t}\n\n\t// backward compatibility\n\tget get_values() {\n\t\treturn this.get_filter_values;\n\t}\n};\n\nObject.defineProperty(frappe, 'query_report_filters_by_name', {\n\tget() {\n\t\tconsole.warn('[Query Report] frappe.query_report_filters_by_name is deprecated. Please use the new api: frappe.query_report.get_filter_value(fieldname) and frappe.query_report.set_filter_value(fieldname, value)');\n\t\treturn null;\n\t}\n});\n", "\n\tfrappe.templates['print_grid'] = `<!-- title -->\n{% if title %}\n<h2>{{ __(title) }}</h2>\n<hr>\n{% endif %}\n{% if subtitle %}\n{{ subtitle }}\n<hr>\n{% endif %}\n<table class=\"table table-bordered\">\n\t<!-- heading -->\n\t<thead>\n\t\t<tr>\n\t\t<th> # </th>\n\t\t{% for col in columns %}\n\t\t\t{% if col.name && col._id !== \"_check\" %}\n\t\t\t<th\n\t\t\t\t{% if col.minWidth %}\n\t\t\t\t\tstyle=\"min-width: {{ col.minWidth }}px\"\n\t\t\t\t{% endif %}\n\t\t\t\t{% if col.docfield && frappe.model.is_numeric_field(col.docfield) %}\n\t\t\t\t\tclass=\"text-right\"\n\t\t\t\t{% endif %}\n\t\t\t>\n\t\t\t\t{{ __(col.name) }}</th>\n\t\t\t{% endif %}\n\t\t{% endfor %}\n\t\t</tr>\n\t</thead>\n\t<!-- body -->\n\t<tbody>\n\t\t{% for row in data %}\n\t\t\t<tr style=\"height: 30px\">\n\t\t\t<td {% if row.bold == 1 %} style=\"font-weight: bold\" {% endif %}>\n\t\t\t\t<span> {{ row._index + 1 }} </span>\n\t\t\t</td>\n\t\t\t{% for col in columns %}\n\t\t\t\t{% if col.name && col._id !== \"_check\" %}\n\n\t\t\t\t\t{% var value = col.fieldname ? row[col.fieldname] : row[col.id]; %}\n\n\t\t\t\t\t<td {% if row.bold == 1 %} style=\"font-weight: bold\" {% endif %}>\n\t\t\t\t\t\t<span {% if col._index == 0 %} style=\"padding-left: {%= cint(row.indent) * 2 %}em\" {% endif %}>\n\t\t\t\t\t\t\t{% format_data = row.is_total_row && [\"Currency\", \"Float\"].includes(col.fieldtype) ? data[0] : row %}\n\t\t\t\t\t\t\t{% if (row.is_total_row && col._index == 0) { %}\n\t\t\t\t\t\t\t\t{{ __(\"Total\") }}\n\t\t\t\t\t\t\t{% } else { %}\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\tcol.formatter\n\t\t\t\t\t\t\t\t\t\t? col.formatter(row._index, col._index, value, col, format_data, true)\n\t\t\t\t\t\t\t\t\t\t: col.format\n\t\t\t\t\t\t\t\t\t\t\t? col.format(value, row, col, format_data)\n\t\t\t\t\t\t\t\t\t\t\t: col.docfield\n\t\t\t\t\t\t\t\t\t\t\t\t? frappe.format(value, col.docfield)\n\t\t\t\t\t\t\t\t\t\t\t\t: value\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{% } %}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</td>\n\t\t\t\t{% endif %}\n\t\t\t{% endfor %}\n\t\t\t</tr>\n\t\t{% endfor %}\n\t</tbody>\n</table>\n`;\n", "\n\tfrappe.templates['print_tree'] = `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta name=\"description\" content=\"\">\n\t\t<meta name=\"author\" content=\"\">\n\t\t<title>{{ title }}</title>\n\t\t<link href=\"{{ base_url }}/assets/frappe/css/bootstrap.css\" rel=\"stylesheet\">\n\t\t<link type=\"text/css\" rel=\"stylesheet\"\n\t\t\thref=\"{{ base_url }}/assets/frappe/css/font-awesome.css\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ base_url }}/assets/frappe/css/tree.css\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ base_url }}{{ print_format_css_path }}\">\n\t\t<style>\n\t\t\t{{ print_css }}\n\t\t</style>\n\t\t<style>\n\t\t\t.tree.opened::before,\n\t\t\t.tree-node.opened::before,\n\t\t\t.tree:last-child::after,\n\t\t\t.tree-node:last-child::after {\n\t\t\t\tz-index: 1;\n\t\t\t\tborder-left: 1px solid #d1d8dd;\n\t\t\t\tbackground: none;\n\t\t\t}\n\t\t\t.tree a,\n\t\t\t.tree-link {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcursor: default;\n\t\t\t}\n\t\t\t.tree.opened > .tree-children > .tree-node > .tree-link::before,\n\t\t\t.tree-node.opened > .tree-children > .tree-node > .tree-link::before {\n\t\t\t\tborder-top: 1px solid #d1d8dd;\n\t\t\t\tz-index: 1;\n\t\t\t\tbackground: none;\n\t\t\t}\n\t\t\ti.fa.fa-fw.fa-folder {\n\t\t\t\tz-index: 2;\n\t\t\t\tposition: relative;\n\t\t\t}\n\t\t\t.tree:last-child::after, .tree-node:last-child::after {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.tree-node-toolbar {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\ti.octicon.octicon-primitive-dot.text-extra-muted {\n\t\t\t\twidth: 7px;\n\t\t\t\theight: 7px;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbackground: #d1d8dd;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 2;\n\t\t\t}\n\n\t\t\t@media (max-width: 767px) {\n\t\t\t\tul.tree-children {\n\t\t\t\t\tpadding-left: 20px;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n  \t</head>\n\t<body>\n\t\t<svg id=\"frappe-symbols\" aria-hidden=\"true\" style=\"position: absolute; width: 0; height: 0; overflow: hidden;\" class=\"d-block\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<symbol viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" id=\"icon-primitive-dot\">\n\t\t\t\t<path d=\"M9.5 6a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0z\"></path>\n\t\t\t</symbol>\n\n\t\t\t<symbol viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" id=\"icon-folder-open\">\n\t\t\t\t<path d=\"M8.024 6.5H3a.5.5 0 0 0-.5.5v8a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V9.5A.5.5 0 0 0 17 9h-6.783a.5.5 0 0 1-.417-.224L8.441 6.724a.5.5 0 0 0-.417-.224z\" stroke=\"var(--icon-stroke)\" stroke-miterlimit=\"10\" stroke-linecap=\"square\"></path>\n\t\t\t\t<path d=\"M3.88 4.5v-1a.5.5 0 0 1 .5-.5h11.24a.5.5 0 0 1 .5.5V7\" stroke=\"var(--icon-stroke)\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n\t\t\t</symbol>\n\n\t\t\t<symbol viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" id=\"icon-folder-normal\">\n\t\t\t\t<path d=\"M2.5 4v10a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V6.5a1 1 0 0 0-1-1h-6.283a.5.5 0 0 1-.417-.224L8.441 3.224A.5.5 0 0 0 8.024 3H3.5a1 1 0 0 0-1 1z\" stroke=\"var(--icon-stroke)\" stroke-miterlimit=\"10\" stroke-linecap=\"square\"></path>\n\t\t\t</symbol>\n\t\t</svg>\n\t\t<div class=\"print-format-gutter\">\n\t\t\t{% if print_settings.repeat_header_footer %}\n\t\t\t\t<div id=\"footer-html\" class=\"visible-pdf\">\n\t\t\t\t\t{% if print_settings.letter_head && print_settings.letter_head.footer %}\n\t\t\t\t\t\t<div class=\"letter-head-footer\">\n\t\t\t\t\t\t\t{{ print_settings.letter_head.footer }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{% endif %}\n\t\t\t\t\t<p class=\"text-center small page-number visible-pdf\">\n\t\t\t\t\t\t{{ __(\"Page {0} of {1}\", [\\`<span class=\"page\"></span>\\`, \\`<span class=\"topage\"></span>\\`]) }}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t{% endif %}\n\n\t\t\t<div class=\"print-format {% if landscape %} landscape {% endif %}\">\n\t\t\t\t{% if print_settings.letter_head %}\n\t\t\t\t<div {% if print_settings.repeat_header_footer %} id=\"header-html\" class=\"hidden-pdf\" {% endif %}>\n\t\t\t\t\t<div class=\"letter-head\">{{ print_settings.letter_head.header }}</div>\n\t\t\t\t</div>\n\t\t\t\t\t{% endif %}\n\t\t\t\t\t<div class=\"tree opened\">\n\t\t\t\t\t\t{{ tree }}\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>\n`;\n", "\n\tfrappe.templates['group_by'] = `<div class=\"group-by-box\">\n\t<div class=\"visible-xs flex justify-flex-end\">\n\t\t<span class=\"remove-group-by\">\n\t\t\t{{ __(\"Remove\") }}\n\t\t</span>\n\t</div>\n\t<div class=\"list_groupby row\">\n\t\t<div class=\"col-sm-8 form-group\">\n\t\t\t<select class=\"group-by form-control input-xs\">\n\t\t\t\t<option value=\"\" disabled selected>{{ __(\"Select Group By...\") }}</option>\n\t\t\t\t{% for (var parent_doctype in group_by_conditions) { %}\n\t\t\t\t\t{% for (var val in group_by_conditions[parent_doctype]) { %}\n\t\t\t\t\t\t{% if (parent_doctype !== doctype) { %}\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tdata-doctype=\"{{parent_doctype}}\"\n\t\t\t\t\t\t\tvalue=\"{{group_by_conditions[parent_doctype][val].fieldname}}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ __(group_by_conditions[parent_doctype][val].label) }}\n\t\t\t\t\t\t\t({{ __(parent_doctype) }})\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{% } else { %}\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tdata-doctype=\"{{parent_doctype}}\"\n\t\t\t\t\t\t\tvalue=\"{{group_by_conditions[parent_doctype][val].fieldname}}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ __(group_by_conditions[parent_doctype][val].label) }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{% } %}\n\t\t\t\t\t{% } %}\n\t\t\t\t{% } %}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-sm-3 form-group\">\n\t\t\t<select class=\"aggregate-function form-control input-xs\">\n\t\t\t\t{% for condition in aggregate_function_conditions %}\n\t\t\t\t<option value=\"{{condition.name}}\">{{ __(condition.label) }}</option>\n\t\t\t\t{% endfor %}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-sm-4 col-xs-12\" style=\"display: none\">\n\t\t\t<select class=\"aggregate-on form-control input-xs\">\n\t\t\t\t<option value=\"\" disabled selected>{{ __(\"Select Field...\") }}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"groupby-actions pull-left col-sm-1 hidden-xs\">\n\t\t\t<span class=\"remove-group-by\">\n\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t<use xlink:href=\"#icon-close\"></use>\n\t\t\t\t</svg>\n\t\t\t</span>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "frappe.provide('frappe.views');\n\nfrappe.ui.GroupBy = class {\n\tconstructor(report_view) {\n\t\tthis.report_view = report_view;\n\t\tthis.page = report_view.page;\n\t\tthis.doctype = report_view.doctype;\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.make_group_by_button();\n\t\tthis.init_group_by_popover();\n\t\tthis.set_popover_events();\n\t}\n\n\tinit_group_by_popover() {\n\t\tconst sql_aggregate_functions = [\n\t\t\t{name: 'count', label: __('Count')},\n\t\t\t{name: 'sum', label: __('Sum')},\n\t\t\t{name: 'avg', label: __('Average')}\n\t\t];\n\n\t\tconst group_by_template = $(\n\t\t\tfrappe.render_template('group_by', {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tgroup_by_conditions: this.get_group_by_fields(),\n\t\t\t\taggregate_function_conditions: sql_aggregate_functions,\n\t\t\t})\n\t\t);\n\n\t\tthis.group_by_button.popover({\n\t\t\tcontent: group_by_template,\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"group-by-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: 'manual',\n\t\t\tcontainer: 'body',\n\t\t\tplacement: 'bottom',\n\t\t\toffset: '-100px 0',\n\t\t});\n\t}\n\n\t// TODO: make common with filter popover\n\tset_popover_events() {\n\t\t$(document.body).on('click', (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('.group-by-popover').length === 0 &&\n\t\t\t\t\t$(e.target).parents('.group-by-box').length === 0 &&\n\t\t\t\t\t$(e.target).parents('.group-by-button').length === 0 &&\n\t\t\t\t\t!$(e.target).is(this.group_by_button)\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.group_by_button.popover('hide');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.group_by_button.on('click', () => {\n\t\t\tthis.group_by_button.popover('toggle');\n\t\t});\n\n\t\tthis.group_by_button.on('shown.bs.popover', () => {\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $('.group-by-popover');\n\t\t\t\tthis.setup_group_by_area();\n\t\t\t}\n\t\t});\n\n\t\tthis.group_by_button.on('hidden.bs.popover', () => {\n\t\t\tthis.update_group_by_button();\n\t\t});\n\n\t\tfrappe.router.on('change', () => {\n\t\t\tthis.group_by_button.popover('hide');\n\t\t});\n\t}\n\n\tsetup_group_by_area() {\n\t\tthis.aggregate_on_html = ``;\n\t\tthis.group_by_select = this.wrapper.find('select.group-by');\n\t\tthis.group_by_field && this.group_by_select.val(this.group_by_field);\n\t\tthis.aggregate_function_select = this.wrapper.find(\n\t\t\t'select.aggregate-function'\n\t\t);\n\t\tthis.aggregate_on_select = this.wrapper.find('select.aggregate-on');\n\t\tthis.remove_group_by_button = this.wrapper.find('.remove-group-by');\n\n\t\tif (this.aggregate_function) {\n\t\t\tthis.aggregate_function_select.val(this.aggregate_function);\n\t\t} else {\n\t\t\t// set default to count\n\t\t\tthis.aggregate_function_select.val('count');\n\t\t\tthis.aggregate_function = 'count';\n\t\t}\n\n\t\tthis.toggle_aggregate_on_field();\n\t\tthis.aggregate_on && this.aggregate_on_select.val(this.aggregate_on_field);\n\n\t\tthis.set_group_by_events();\n\t}\n\n\tset_group_by_events() {\n\t\t// try running on change\n\t\tthis.group_by_select.on('change', () => {\n\t\t\tthis.group_by_field = this.group_by_select.val();\n\t\t\tthis.group_by_doctype = this.group_by_select\n\t\t\t\t.find(':selected')\n\t\t\t\t.attr('data-doctype');\n\t\t\tthis.apply_group_by_and_refresh();\n\t\t});\n\n\t\tthis.aggregate_function_select.on('change', () => {\n\t\t\t//Set aggregate on options as numeric fields if function is sum or average\n\t\t\tthis.toggle_aggregate_on_field();\n\t\t\tthis.aggregate_function = this.aggregate_function_select.val();\n\t\t\tthis.apply_group_by_and_refresh();\n\t\t});\n\n\t\tthis.aggregate_on_select.on('change', () => {\n\t\t\tthis.aggregate_on_field = this.aggregate_on_select.val();\n\t\t\tthis.aggregate_on_doctype = this.aggregate_on_select\n\t\t\t\t.find(':selected')\n\t\t\t\t.attr('data-doctype');\n\t\t\tthis.apply_group_by_and_refresh();\n\t\t});\n\n\t\tthis.remove_group_by_button.on('click', () => {\n\t\t\tif (this.group_by) {\n\t\t\t\tthis.remove_group_by();\n\t\t\t\tthis.toggle_aggregate_on_field_display(false);\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_aggregate_on_field() {\n\t\tlet fn = this.aggregate_function_select.val();\n\t\tif (fn === 'sum' || fn === 'avg') {\n\t\t\tif (!this.aggregate_on_html.length) {\n\t\t\t\tthis.aggregate_on_html = `<option value=\"\" disabled selected>\n\t\t\t\t\t\t${__('Select Field...')}\n\t\t\t\t\t</option>`;\n\n\t\t\t\tfor (let doctype in this.all_fields) {\n\t\t\t\t\tconst doctype_fields = this.all_fields[doctype];\n\t\t\t\t\tdoctype_fields.forEach((field) => {\n\t\t\t\t\t\t// pick numeric fields for sum / avg\n\t\t\t\t\t\tif (frappe.model.is_numeric_field(field.fieldtype)) {\n\t\t\t\t\t\t\tlet option_text =\n\t\t\t\t\t\t\t\tdoctype == this.doctype\n\t\t\t\t\t\t\t\t\t? field.label\n\t\t\t\t\t\t\t\t\t: `${field.label} (${__(doctype)})`;\n\t\t\t\t\t\t\tthis.aggregate_on_html += `<option data-doctype=\"${doctype}\"\n\t\t\t\t\t\t\t\tvalue=\"${field.fieldname}\">${__(option_text)}</option>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.aggregate_on_select.html(this.aggregate_on_html);\n\t\t\tthis.toggle_aggregate_on_field_display(true);\n\t\t} else {\n\t\t\t// count, so no aggregate function\n\t\t\tthis.toggle_aggregate_on_field_display(false);\n\t\t}\n\t}\n\n\t//TODO: Fix this\n\ttoggle_aggregate_on_field_display(show) {\n\t\tthis.group_by_select.parent().toggleClass('col-sm-5', show);\n\t\tthis.group_by_select.parent().toggleClass('col-sm-8', !show);\n\t\tthis.aggregate_function_select.parent().toggleClass('col-sm-2', show);\n\t\tthis.aggregate_function_select.parent().toggleClass('col-sm-3', !show);\n\t\tthis.aggregate_on_select.parent().toggle(show);\n\t}\n\n\tget_settings() {\n\t\tif (this.group_by) {\n\t\t\treturn {\n\t\t\t\tgroup_by: this.group_by,\n\t\t\t\taggregate_function: this.aggregate_function,\n\t\t\t\taggregate_on: this.aggregate_on,\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tapply_settings(settings) {\n\t\tlet get_fieldname = (name) => name.split('.')[1].replace(/`/g, '');\n\t\tlet get_doctype = (name) =>\n\t\t\tname\n\t\t\t\t.split('.')[0]\n\t\t\t\t.replace(/`/g, '')\n\t\t\t\t.replace('tab', '');\n\n\t\tif (!settings.group_by.startsWith('`tab')) {\n\t\t\tsettings.group_by =\n\t\t\t\t'`tab' + this.doctype + '`.`' + settings.group_by + '`';\n\t\t}\n\n\t\tif (settings.aggregate_on && !settings.aggregate_on.startsWith('`tab')) {\n\t\t\tconst aggregate_on_doctype = this.get_aggregate_on_doctype(settings);\n\t\t\tsettings.aggregate_on =\n\t\t\t\t'`tab' + aggregate_on_doctype + '`.`' + settings.aggregate_on + '`';\n\t\t}\n\n\t\t// Extract fieldname from `tabdoctype`.`fieldname`\n\t\tthis.group_by_field = get_fieldname(settings.group_by);\n\t\tthis.group_by_doctype = get_doctype(settings.group_by);\n\n\t\tthis.aggregate_function = settings.aggregate_function;\n\n\t\tif (settings.aggregate_on) {\n\t\t\tthis.aggregate_on_field = get_fieldname(settings.aggregate_on);\n\t\t\tthis.aggregate_on_doctype = get_doctype(settings.aggregate_on);\n\t\t}\n\n\t\tthis.apply_group_by();\n\t\tthis.update_group_by_button();\n\t}\n\n\tget_aggregate_on_doctype(settings) {\n\t\tfor (let doctype of Object.keys(this.all_fields)) {\n\t\t\tconst dt_fields = this.all_fields[doctype];\n\t\t\tif (dt_fields.find((field) => field.fieldname == settings.aggregate_on)) {\n\t\t\t\treturn doctype;\n\t\t\t}\n\t\t}\n\t}\n\n\tmake_group_by_button() {\n\t\tthis.page.wrapper.find('.sort-selector').before(\n\t\t\t$(`<div class=\"group-by-selector\">\n\t\t\t\t<button class=\"btn btn-default btn-sm group-by-button ellipsis\">\n\t\t\t\t\t<span class=\"group-by-icon\">\n\t\t\t\t\t\t${frappe.utils.icon('group-by')}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t\t${__('Add Group')}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>`)\n\t\t);\n\n\t\tthis.group_by_button = this.page.wrapper.find('.group-by-button');\n\t}\n\n\tapply_group_by() {\n\t\tthis.group_by =\n\t\t\t'`tab' + this.group_by_doctype + '`.`' + this.group_by_field + '`';\n\n\t\tif (this.aggregate_function === 'count') {\n\t\t\tthis.aggregate_on_field = null;\n\t\t\tthis.aggregate_on_doctype = null;\n\t\t} else {\n\t\t\tthis.aggregate_on =\n\t\t\t\t'`tab' +\n\t\t\t\tthis.aggregate_on_doctype +\n\t\t\t\t'`.`' +\n\t\t\t\tthis.aggregate_on_field +\n\t\t\t\t'`';\n\t\t}\n\n\t\t//All necessary fields must be set before applying group by\n\t\tif (\n\t\t\t!this.group_by ||\n\t\t\t!this.aggregate_function ||\n\t\t\t(!this.aggregate_on_field && this.aggregate_function !== 'count')\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tapply_group_by_and_refresh() {\n\t\tif (this.apply_group_by()) {\n\t\t\tthis.report_view.refresh();\n\t\t}\n\t}\n\n\tset_args(args) {\n\t\tif (this.aggregate_function && this.group_by) {\n\t\t\tthis.report_view.group_by = this.group_by;\n\t\t\tthis.report_view.sort_by = '_aggregate_column';\n\t\t\tthis.report_view.sort_order = 'desc';\n\n\t\t\t// save original fields\n\t\t\tif (\n\t\t\t\t!this.report_view.fields.map((f) => f[0]).includes('_aggregate_column')\n\t\t\t) {\n\t\t\t\tthis.original_fields = this.report_view.fields.map((f) => f);\n\t\t\t}\n\n\t\t\tthis.report_view.fields = [[this.group_by_field, this.group_by_doctype]];\n\n\t\t\t// rebuild fields for group by\n\t\t\targs.fields = this.report_view.get_fields();\n\n\t\t\t// add aggregate column in both query args and report views\n\t\t\tthis.report_view.fields.push([\n\t\t\t\t'_aggregate_column',\n\t\t\t\tthis.aggregate_on_doctype || this.doctype,\n\t\t\t]);\n\n\t\t\t// setup columns in datatable\n\t\t\tthis.report_view.setup_columns();\n\n\t\t\tObject.assign(args, {\n\t\t\t\twith_comment_count: false,\n\t\t\t\taggregate_on_field: this.aggregate_on_field || 'name',\n\t\t\t\taggregate_on_doctype: this.aggregate_on_doctype || this.doctype,\n\t\t\t\taggregate_function: this.aggregate_function || 'count',\n\t\t\t\tgroup_by: this.report_view.group_by || null,\n\t\t\t\torder_by: '_aggregate_column desc',\n\t\t\t});\n\t\t}\n\t}\n\n\tget_group_by_docfield() {\n\t\t// called from build_column\n\t\tlet docfield = {};\n\t\tif (this.aggregate_function === 'count') {\n\t\t\tdocfield = {\n\t\t\t\tfieldtype: 'Int',\n\t\t\t\tlabel: __('Count'),\n\t\t\t\tparent: this.doctype,\n\t\t\t\twidth: 200,\n\t\t\t};\n\t\t} else {\n\t\t\t// get properties of \"aggregate_on\", for example Net Total\n\t\t\tdocfield = Object.assign(\n\t\t\t\t{},\n\t\t\t\tfrappe.meta.docfield_map[this.aggregate_on_doctype][\n\t\t\t\t\tthis.aggregate_on_field\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tif (this.aggregate_function === 'sum') {\n\t\t\t\tdocfield.label = __('Sum of {0}', [docfield.label]);\n\t\t\t} else {\n\t\t\t\tdocfield.label = __('Average of {0}', [docfield.label]);\n\t\t\t}\n\t\t}\n\n\t\tdocfield.fieldname = '_aggregate_column';\n\t\treturn docfield;\n\t}\n\n\tremove_group_by() {\n\t\tthis.order_by = '';\n\t\tthis.group_by = null;\n\t\tthis.group_by_field = null;\n\t\tthis.report_view.group_by = null;\n\t\tthis.aggregate_function = 'count';\n\t\tthis.aggregate_on = null;\n\t\tthis.aggregate_on_field = null;\n\t\tthis.group_by_select.val('');\n\t\tthis.aggregate_function_select.val('count');\n\t\tthis.aggregate_on_select.empty().val('');\n\t\tthis.aggregate_on_select.parent().hide();\n\n\t\t// restore original fields\n\t\tif (this.original_fields) {\n\t\t\tthis.report_view.fields = this.original_fields;\n\t\t} else {\n\t\t\tthis.report_view.set_default_fields();\n\t\t}\n\n\t\tthis.report_view.setup_columns();\n\t\tthis.original_fields = null;\n\t\tthis.report_view.refresh();\n\t}\n\n\tget_group_by_fields() {\n\t\tthis.group_by_fields = {};\n\t\tthis.all_fields = {};\n\n\t\tconst fields = this.report_view.meta.fields.filter((f) =>\n\t\t\t['Select', 'Link', 'Data', 'Int', 'Check'].includes(f.fieldtype)\n\t\t);\n\t\tconst tag_field = {fieldname: '_user_tags', fieldtype: 'Data', label: __('Tags')};\n\t\tthis.group_by_fields[this.doctype] = fields.concat(tag_field);\n\t\tthis.all_fields[this.doctype] = this.report_view.meta.fields;\n\n\t\tconst standard_fields_filter = (df) =>\n\t\t\t!in_list(frappe.model.no_value_type, df.fieldtype) && !df.report_hide;\n\n\t\tconst table_fields = frappe.meta\n\t\t\t.get_table_fields(this.doctype)\n\t\t\t.filter((df) => !df.hidden);\n\n\t\ttable_fields.forEach((df) => {\n\t\t\tconst cdt = df.options;\n\t\t\tconst child_table_fields = frappe.meta\n\t\t\t\t.get_docfields(cdt)\n\t\t\t\t.filter(standard_fields_filter);\n\t\t\tthis.group_by_fields[cdt] = child_table_fields;\n\t\t\tthis.all_fields[cdt] = child_table_fields;\n\t\t});\n\n\t\treturn this.group_by_fields;\n\t}\n\n\tupdate_group_by_button() {\n\t\tconst group_by_applied = Boolean(this.group_by_field);\n\t\tconst button_label = group_by_applied\n\t\t\t? __(\"Group By {0}\", [this.get_group_by_field_label()])\n\t\t\t: __('Add Group');\n\n\t\tthis.group_by_button\n\t\t\t.toggleClass('btn-default', !group_by_applied)\n\t\t\t.toggleClass('btn-primary-light', group_by_applied);\n\n\t\tthis.group_by_button.find('.group-by-icon')\n\t\t\t.toggleClass('active', group_by_applied);\n\n\t\tthis.group_by_button.find('.button-label').html(button_label);\n\t\tthis.group_by_button.attr('title', button_label);\n\t}\n\n\tget_group_by_field_label() {\n\t\treturn this.group_by_fields[this.group_by_doctype].find(\n\t\t\tfield => field.fieldname == this.group_by_field\n\t\t).label;\n\t}\n};\n", "frappe.provide('frappe.report_utils');\n\nfrappe.report_utils = {\n\tmake_chart_options: function(columns, raw_data, { y_fields, x_field, chart_type, colors, height }) {\n\t\tconst type = chart_type.toLowerCase();\n\n\t\tlet rows =  raw_data.result.filter(value => Object.keys(value).length);\n\n\t\tlet labels = get_column_values(x_field);\n\t\tlet datasets = y_fields.map(y_field => ({\n\t\t\tname: frappe.model.unscrub(y_field),\n\t\t\tvalues: get_column_values(y_field).map(d => Number(d))\n\t\t}));\n\n\t\tif (raw_data.add_total_row) {\n\t\t\tlabels = labels.slice(0, -1);\n\t\t\tdatasets.forEach(dataset => {\n\t\t\t\tdataset.values = dataset.values.slice(0, -1);\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\tlabels: labels.length? labels: null,\n\t\t\t\tdatasets: datasets\n\t\t\t},\n\t\t\ttruncateLegends: 1,\n\t\t\ttype: type,\n\t\t\theight: height ? height : 280,\n\t\t\tcolors: colors,\n\t\t\taxisOptions: {\n\t\t\t\tshortenYAxisNumbers: 1,\n\t\t\t\txAxisMode: 'tick'\n\t\t\t}\n\t\t};\n\n\t\tfunction get_column_values(column_name) {\n\t\t\tif (Array.isArray(rows[0])) {\n\t\t\t\tlet column_index = columns.findIndex(column => column.fieldname == column_name);\n\t\t\t\treturn rows.map(row => row[column_index]);\n\t\t\t} else {\n\t\t\t\treturn rows.map(row => row[column_name]);\n\t\t\t}\n\t\t}\n\t},\n\n\tget_field_options_from_report: function(columns, data) {\n\t\tconst rows =  data.result.filter(value => Object.keys(value).length);\n\t\tconst first_row = Array.isArray(rows[0]) ? rows[0] : columns.map(col => rows[0][col.fieldname]);\n\n\t\tconst indices = first_row.reduce((accumulator, current_value, current_index) => {\n\t\t\tif (Number.isFinite(current_value)) {\n\t\t\t\taccumulator.push(current_index);\n\t\t\t}\n\t\t\treturn accumulator;\n\t\t}, []);\n\n\t\tfunction get_options(fields) {\n\t\t\treturn fields.map((field) => {\n\t\t\t\tif (field.fieldname) {\n\t\t\t\t\treturn {label: field.label, value: field.fieldname};\n\t\t\t\t} else {\n\t\t\t\t\tfield = frappe.report_utils.prepare_field_from_column(field);\n\t\t\t\t\treturn {label: field.label, value: field.fieldname};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst numeric_fields = columns.filter((col, i) => indices.includes(i));\n\t\tconst non_numeric_fields = columns.filter((col, i) => !indices.includes(i));\n\n\t\tlet numeric_field_options = get_options(numeric_fields);\n\t\tlet non_numeric_field_options = get_options(non_numeric_fields);\n\n\t\treturn {\n\t\t\t'numeric_fields': numeric_field_options,\n\t\t\t'non_numeric_fields': non_numeric_field_options\n\t\t};\n\t},\n\n\tprepare_field_from_column: function(column) {\n\t\tif (typeof column === 'string') {\n\t\t\tif (column.includes(':')) {\n\t\t\t\tlet [label, fieldtype, width] = column.split(':');\n\t\t\t\tlet options;\n\n\t\t\t\tif (fieldtype.includes('/')) {\n\t\t\t\t\t[fieldtype, options] = fieldtype.split('/');\n\t\t\t\t}\n\n\t\t\t\tcolumn = {\n\t\t\t\t\tlabel,\n\t\t\t\t\tfieldname: label,\n\t\t\t\t\tfieldtype,\n\t\t\t\t\twidth,\n\t\t\t\t\toptions\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcolumn = {\n\t\t\t\t\tlabel: column,\n\t\t\t\t\tfieldname: column,\n\t\t\t\t\tfieldtype: 'Data'\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn column;\n\t},\n\n\tget_report_filters: function(report_name) {\n\n\t\tif (frappe.query_reports[report_name]) {\n\t\t\tlet filters = frappe.query_reports[report_name].filters;\n\t\t\treturn Promise.resolve(filters);\n\t\t}\n\n\t\treturn frappe.xcall(\n\t\t\t'frappe.desk.query_report.get_script',\n\t\t\t{\n\t\t\t\treport_name: report_name\n\t\t\t}\n\t\t).then(r => {\n\t\t\tfrappe.dom.eval(r.script || '');\n\t\t\treturn frappe.after_ajax(() => {\n\t\t\t\treturn frappe.query_reports[report_name] && frappe.query_reports[report_name].filters;\n\t\t\t})\n\t\t});\n\t},\n\n\tget_filter_values(filters) {\n\t\tlet filter_values = filters\n\t\t\t.map(f => {\n\t\t\t\tvar v = f.default;\n\t\t\t\treturn {\n\t\t\t\t\t[f.fieldname]: v\n\t\t\t\t};\n\t\t\t})\n\t\t\t.reduce((acc, f) => {\n\t\t\t\tObject.assign(acc, f);\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\treturn filter_values;\n\t},\n\n\tget_result_of_fn(fn, values) {\n\t\tconst get_result = {\n\t\t\t'Minimum': values => values.reduce((min, val) => Math.min(min, val), values[0]),\n\t\t\t'Maximum': values => values.reduce((min, val) => Math.max(min, val), values[0]),\n\t\t\t'Average': values => values.reduce((a, b) => a + b, 0) / values.length,\n\t\t\t'Sum': values => values.reduce((a, b) => a + b, 0)\n\t\t};\n\t\treturn get_result[fn](values);\n\t},\n\n};\n"],
  "mappings": "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",
  "names": []
}
